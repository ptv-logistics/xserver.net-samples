<?xml version="1.0" encoding="utf-8"?>
<definitions xmlns:ns2="http://common.xserver.ptvag.com" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://jwsdp.xroute.xserver.ptvag.com" xmlns:ns1="http://xroute.xserver.ptvag.com" xmlns:ns0="http://types.xroute.xserver.ptvag.com" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:ns3="http://exception.core.jabba.ptvag.com" name="XRouteWSService" targetNamespace="http://jwsdp.xroute.xserver.ptvag.com" xmlns="http://schemas.xmlsoap.org/wsdl/">
  <types>
    <xsd:schema xmlns:tns="http://exception.core.jabba.ptvag.com" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns0="http://wrappertypes.service.jabba.ptvag.com" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:ns3="http://exception.core.jabba.ptvag.com" elementFormDefault="qualified" targetNamespace="http://exception.core.jabba.ptvag.com">
      <xsd:complexType name="StackElement">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="1" name="cause" nillable="true" type="tns:StackElement" />
          <xsd:element minOccurs="1" maxOccurs="1" name="wrappedContext" nillable="true" type="ns0:ArrayOfString" />
        </xsd:sequence>
        <xsd:attribute name="className" type="xsd:string" use="optional" />
        <xsd:attribute name="errorKey" type="xsd:string" use="optional" />
        <xsd:attribute name="message" type="xsd:string" use="optional" />
      </xsd:complexType>
      <xsd:complexType name="DatabaseException">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:SystemException">
            <xsd:sequence />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:element name="DatabaseException" type="tns:DatabaseException" />
      <xsd:complexType name="ParameterNotSetException">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:IllegalParameterException">
            <xsd:sequence />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:element name="ParameterNotSetException" type="tns:ParameterNotSetException" />
      <xsd:complexType name="IllegalParameterException">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:BusinessException">
            <xsd:sequence />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:element name="IllegalParameterException" type="tns:IllegalParameterException" />
      <xsd:complexType name="UnexpectedException">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:SystemException">
            <xsd:sequence />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:element name="UnexpectedException" type="tns:UnexpectedException" />
      <xsd:complexType name="OptimisticRollbackException">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:SystemException">
            <xsd:sequence />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:element name="OptimisticRollbackException" type="tns:OptimisticRollbackException" />
      <xsd:complexType name="ConstraintViolationException">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:DatabaseException">
            <xsd:sequence />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:element name="ConstraintViolationException" type="tns:ConstraintViolationException" />
      <xsd:complexType name="TableNotFoundException">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:DatabaseException">
            <xsd:sequence />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:element name="TableNotFoundException" type="tns:TableNotFoundException" />
      <xsd:complexType name="RemoteAccessException">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:SystemException">
            <xsd:sequence />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:element name="RemoteAccessException" type="tns:RemoteAccessException" />
      <xsd:complexType name="BaseException">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="1" name="stackElement" nillable="true" type="tns:StackElement" />
        </xsd:sequence>
        <xsd:attribute name="transactionId" type="xsd:string" use="optional" />
      </xsd:complexType>
      <xsd:element name="BaseException" type="tns:BaseException" />
      <xsd:complexType name="SystemException">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:BaseException">
            <xsd:sequence />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:element name="SystemException" type="tns:SystemException" />
      <xsd:complexType name="BusinessException">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:BaseException">
            <xsd:sequence />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:element name="BusinessException" type="tns:BusinessException" />
      <xsd:complexType name="CreateException">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:SystemException">
            <xsd:sequence />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:element name="CreateException" type="tns:CreateException" />
      <xsd:complexType name="RemoveException">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:SystemException">
            <xsd:sequence />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:element name="RemoveException" type="tns:RemoveException" />
      <xsd:complexType name="FinderException">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:SystemException">
            <xsd:sequence />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:element name="FinderException" type="tns:FinderException" />
      <xsd:complexType name="ObjectNotFoundException">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:FinderException">
            <xsd:sequence />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:element name="ObjectNotFoundException" type="tns:ObjectNotFoundException" />
      <xsd:complexType name="DuplicateKeyException">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:CreateException">
            <xsd:sequence />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:element name="DuplicateKeyException" type="tns:DuplicateKeyException" />
    </xsd:schema>
    <xsd:schema xmlns:soap11-enc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:tns="http://value.core.jabba.ptvag.com" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="http://value.core.jabba.ptvag.com">
      <xsd:complexType name="TransientVO" abstract="true">
        <xsd:sequence />
      </xsd:complexType>
    </xsd:schema>
    <xsd:schema xmlns:tns="http://baseservices.service.jabba.ptvag.com" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns0="http://value.core.jabba.ptvag.com" xmlns="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="http://baseservices.service.jabba.ptvag.com">
      <xsd:import namespace="http://value.core.jabba.ptvag.com" />
      <xsd:complexType name="CallerContext">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns0:TransientVO">
            <xsd:sequence>
              <xsd:element minOccurs="1" maxOccurs="1" name="wrappedProperties" nillable="true" type="tns:ArrayOfCallerContextProperty" />
            </xsd:sequence>
            <xsd:attribute name="log1" type="xsd:string" use="optional" />
            <xsd:attribute name="log2" type="xsd:string" use="optional" />
            <xsd:attribute name="log3" type="xsd:string" use="optional" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="CallerContextProperty">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns0:TransientVO">
            <xsd:sequence />
            <xsd:attribute name="key" type="xsd:string" use="optional" />
            <xsd:attribute name="value" type="xsd:string" use="optional" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfCallerContextProperty">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="CallerContextProperty" nillable="true" type="tns:CallerContextProperty" />
        </xsd:sequence>
      </xsd:complexType>
    </xsd:schema>
    <xsd:schema xmlns:tns="http://wrappertypes.service.jabba.ptvag.com" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="http://wrappertypes.service.jabba.ptvag.com">
      <xsd:complexType name="ArrayOfCalendar">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="Calendar" nillable="true" type="xsd:dateTime" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfCalendar">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfCalendar" nillable="true" type="tns:ArrayOfCalendar" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfString">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="String" nillable="true" type="xsd:string" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfString">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfString" nillable="true" type="tns:ArrayOfString" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfByte">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfByte" nillable="true" type="xsd:base64Binary" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfShort">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="Short" type="xsd:short" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfShort">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfShort" nillable="true" type="tns:ArrayOfShort" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfInt">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="Int" type="xsd:int" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfInt">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfInt" nillable="true" type="tns:ArrayOfInt" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfLong">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="Long" type="xsd:long" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfLong">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfLong" nillable="true" type="tns:ArrayOfLong" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfFloat">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="Float" type="xsd:float" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfFloat">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfFloat" nillable="true" type="tns:ArrayOfFloat" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfDouble">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="Double" type="xsd:double" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfDouble">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfDouble" nillable="true" type="tns:ArrayOfDouble" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfBoolean">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="Boolean" type="xsd:boolean" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfBoolean">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfBoolean" nillable="true" type="tns:ArrayOfBoolean" />
        </xsd:sequence>
      </xsd:complexType>
    </xsd:schema>
    <xsd:schema xmlns:ns2="http://exception.core.jabba.ptvag.com" xmlns:tns="http://common.xserver.ptvag.com" xmlns:ns1="http://wrappertypes.service.jabba.ptvag.com" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns0="http://value.core.jabba.ptvag.com" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:ns3="http://exception.core.jabba.ptvag.com" elementFormDefault="qualified" targetNamespace="http://common.xserver.ptvag.com">
      <xsd:import namespace="http://wrappertypes.service.jabba.ptvag.com" />
      <xsd:import namespace="http://exception.core.jabba.ptvag.com" />
      <xsd:import namespace="http://value.core.jabba.ptvag.com" />
      <xsd:complexType name="RequestOptions">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns0:TransientVO">
            <xsd:sequence>
              <xsd:element minOccurs="1" maxOccurs="1" name="wrappedResponseGeometry" nillable="true" type="tns:ArrayOfGeometryEncoding" />
            </xsd:sequence>
            <xsd:attribute name="coordFormat" type="tns:CoordFormat" use="required" />
            <xsd:attribute name="profile" type="xsd:string" use="optional" />
            <xsd:attribute name="profileXMLSnippet" type="xsd:string" use="optional" />
            <xsd:attribute name="srId" type="xsd:string" use="optional" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfRequestOptions">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="RequestOptions" nillable="true" type="tns:RequestOptions" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfRequestOptions">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfRequestOptions" nillable="true" type="tns:ArrayOfRequestOptions" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="GeometryEncoding">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="PLAIN" />
          <xsd:enumeration value="WKB" />
          <xsd:enumeration value="WKT" />
          <xsd:enumeration value="KML" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="ArrayOfGeometryEncoding">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="GeometryEncoding" type="tns:GeometryEncoding" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfGeometryEncoding">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfGeometryEncoding" nillable="true" type="tns:ArrayOfGeometryEncoding" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="CoordFormat">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="OG_GEODECIMAL" />
          <xsd:enumeration value="PTV_MERCATOR" />
          <xsd:enumeration value="PTV_GEOMINSEC" />
          <xsd:enumeration value="PTV_GEODECIMAL" />
          <xsd:enumeration value="PTV_CONFORM" />
          <xsd:enumeration value="PTV_SUPERCONFORM" />
          <xsd:enumeration value="PTV_SMARTUNITS" />
          <xsd:enumeration value="OG_SRID" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="ArrayOfCoordFormat">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="CoordFormat" type="tns:CoordFormat" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfCoordFormat">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfCoordFormat" nillable="true" type="tns:ArrayOfCoordFormat" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="BoundingBox">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns0:TransientVO">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="leftTop" nillable="true" type="tns:Point" />
              <xsd:element minOccurs="0" maxOccurs="1" name="rightBottom" nillable="true" type="tns:Point" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfBoundingBox">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="BoundingBox" nillable="true" type="tns:BoundingBox" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfBoundingBox">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfBoundingBox" nillable="true" type="tns:ArrayOfBoundingBox" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="EncodedGeometry" abstract="true">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:EncodedGeometryBase">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="kml" nillable="true" type="tns:KML" />
            </xsd:sequence>
            <xsd:attribute name="wkb" type="xsd:base64Binary" use="optional" />
            <xsd:attribute name="wkt" type="xsd:string" use="optional" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfEncodedGeometry">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="EncodedGeometry" nillable="true" type="tns:EncodedGeometry" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfEncodedGeometry">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfEncodedGeometry" nillable="true" type="tns:ArrayOfEncodedGeometry" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="LinearRing">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:EncodedGeometry">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="linearRing" nillable="true" type="tns:PlainLinearRing" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfLinearRing">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="LinearRing" nillable="true" type="tns:LinearRing" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfLinearRing">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfLinearRing" nillable="true" type="tns:ArrayOfLinearRing" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="PlainLinearRing">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:PlainGeometryBase">
            <xsd:sequence>
              <xsd:element minOccurs="1" maxOccurs="1" name="wrappedPoints" nillable="true" type="tns:ArrayOfPlainPoint" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfPlainLinearRing">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="PlainLinearRing" nillable="true" type="tns:PlainLinearRing" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfPlainLinearRing">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfPlainLinearRing" nillable="true" type="tns:ArrayOfPlainLinearRing" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="Polygon">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:EncodedGeometry">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="polygon" nillable="true" type="tns:PlainPolygon" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfPolygon">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="Polygon" nillable="true" type="tns:Polygon" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfPolygon">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfPolygon" nillable="true" type="tns:ArrayOfPolygon" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="PlainPolygon">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:PlainGeometryBase">
            <xsd:sequence>
              <xsd:element minOccurs="1" maxOccurs="1" name="wrappedLinearRings" nillable="true" type="tns:ArrayOfPlainLinearRing" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfPlainPolygon">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="PlainPolygon" nillable="true" type="tns:PlainPolygon" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfPlainPolygon">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfPlainPolygon" nillable="true" type="tns:ArrayOfPlainPolygon" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="LineString">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:EncodedGeometry">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="lineString" nillable="true" type="tns:PlainLineString" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfLineString">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="LineString" nillable="true" type="tns:LineString" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfLineString">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfLineString" nillable="true" type="tns:ArrayOfLineString" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="PlainLineString">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:PlainGeometryBase">
            <xsd:sequence>
              <xsd:element minOccurs="1" maxOccurs="1" name="wrappedPoints" nillable="true" type="tns:ArrayOfPlainPoint" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfPlainLineString">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="PlainLineString" nillable="true" type="tns:PlainLineString" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfPlainLineString">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfPlainLineString" nillable="true" type="tns:ArrayOfPlainLineString" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="Point">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:EncodedGeometry">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="point" nillable="true" type="tns:PlainPoint" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfPoint">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="Point" nillable="true" type="tns:Point" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfPoint">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfPoint" nillable="true" type="tns:ArrayOfPoint" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="XServiceException">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns2:BusinessException">
            <xsd:sequence />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:element name="XServiceException" type="tns:XServiceException" />
      <xsd:complexType name="PlainMultiPoint">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:PlainGeometryBase">
            <xsd:sequence>
              <xsd:element minOccurs="1" maxOccurs="1" name="wrappedPoints" nillable="true" type="tns:ArrayOfPlainPoint" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfPlainMultiPoint">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="PlainMultiPoint" nillable="true" type="tns:PlainMultiPoint" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfPlainMultiPoint">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfPlainMultiPoint" nillable="true" type="tns:ArrayOfPlainMultiPoint" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="PlainMultiLineString">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:PlainGeometryBase">
            <xsd:sequence>
              <xsd:element minOccurs="1" maxOccurs="1" name="wrappedLineStrings" nillable="true" type="tns:ArrayOfPlainLineString" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfPlainMultiLineString">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="PlainMultiLineString" nillable="true" type="tns:PlainMultiLineString" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfPlainMultiLineString">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfPlainMultiLineString" nillable="true" type="tns:ArrayOfPlainMultiLineString" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="PlainMultiPolygon">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:PlainGeometryBase">
            <xsd:sequence>
              <xsd:element minOccurs="1" maxOccurs="1" name="wrappedPolygons" nillable="true" type="tns:ArrayOfPlainPolygon" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfPlainMultiPolygon">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="PlainMultiPolygon" nillable="true" type="tns:PlainMultiPolygon" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfPlainMultiPolygon">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfPlainMultiPolygon" nillable="true" type="tns:ArrayOfPlainMultiPolygon" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="PlainGeometryCollection">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:PlainGeometryBase">
            <xsd:sequence>
              <xsd:element minOccurs="1" maxOccurs="1" name="wrappedGeometries" nillable="true" type="tns:ArrayOfPlainGeometryBase" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfPlainGeometryCollection">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="PlainGeometryCollection" nillable="true" type="tns:PlainGeometryCollection" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfPlainGeometryCollection">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfPlainGeometryCollection" nillable="true" type="tns:ArrayOfPlainGeometryCollection" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="MultiPoint">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:EncodedGeometry">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="multiPoint" nillable="true" type="tns:PlainMultiPoint" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfMultiPoint">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="MultiPoint" nillable="true" type="tns:MultiPoint" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfMultiPoint">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfMultiPoint" nillable="true" type="tns:ArrayOfMultiPoint" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="MultiLineString">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:EncodedGeometry">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="multiLineString" nillable="true" type="tns:PlainMultiLineString" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfMultiLineString">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="MultiLineString" nillable="true" type="tns:MultiLineString" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfMultiLineString">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfMultiLineString" nillable="true" type="tns:ArrayOfMultiLineString" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="MultiPolygon">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:EncodedGeometry">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="multiPolygon" nillable="true" type="tns:PlainMultiPolygon" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfMultiPolygon">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="MultiPolygon" nillable="true" type="tns:MultiPolygon" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfMultiPolygon">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfMultiPolygon" nillable="true" type="tns:ArrayOfMultiPolygon" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="GeometryCollection">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:EncodedGeometry">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="geometryCollection" nillable="true" type="tns:PlainGeometryCollection" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfGeometryCollection">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="GeometryCollection" nillable="true" type="tns:GeometryCollection" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfGeometryCollection">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfGeometryCollection" nillable="true" type="tns:ArrayOfGeometryCollection" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="PlainGeometryBase">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns0:TransientVO">
            <xsd:sequence />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfPlainGeometryBase">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="PlainGeometryBase" nillable="true" type="tns:PlainGeometryBase" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfPlainGeometryBase">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfPlainGeometryBase" nillable="true" type="tns:ArrayOfPlainGeometryBase" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="PlainPoint">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:PlainGeometryBase">
            <xsd:sequence />
            <xsd:attribute name="x" type="xsd:double" use="required" />
            <xsd:attribute name="y" type="xsd:double" use="required" />
            <xsd:attribute name="z" type="xsd:double" use="optional" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfPlainPoint">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="PlainPoint" nillable="true" type="tns:PlainPoint" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfPlainPoint">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfPlainPoint" nillable="true" type="tns:ArrayOfPlainPoint" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="EncodedGeometryBase" abstract="true">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns0:TransientVO">
            <xsd:sequence />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfEncodedGeometryBase">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="EncodedGeometryBase" nillable="true" type="tns:EncodedGeometryBase" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfEncodedGeometryBase">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfEncodedGeometryBase" nillable="true" type="tns:ArrayOfEncodedGeometryBase" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="ErrorCode">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="REQUEST_INVALID_WKT" />
          <xsd:enumeration value="REQUEST_INVALID_WKB" />
          <xsd:enumeration value="REQUEST_INVALID_KML" />
          <xsd:enumeration value="KML_PLACEMARK_NOT_FOUND" />
          <xsd:enumeration value="CONVERT_GEOMETRY_OBJECT" />
          <xsd:enumeration value="CONVERT_COORDINATE_FORMAT" />
          <xsd:enumeration value="GEOMETRY_ENCODING" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="ArrayOfErrorCode">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ErrorCode" type="tns:ErrorCode" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfErrorCode">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfErrorCode" nillable="true" type="tns:ArrayOfErrorCode" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="KML">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns0:TransientVO">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="wrappedPlacemarks" nillable="true" type="ns1:ArrayOfString" />
            </xsd:sequence>
            <xsd:attribute name="kml" type="xsd:string" use="optional" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfKML">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="KML" nillable="true" type="tns:KML" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfKML">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfKML" nillable="true" type="tns:ArrayOfKML" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="JobStatus">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="QUEUING" />
          <xsd:enumeration value="RUNNING" />
          <xsd:enumeration value="STOPPING" />
          <xsd:enumeration value="SUCCEEDED" />
          <xsd:enumeration value="FAILED" />
          <xsd:enumeration value="DELETED" />
          <xsd:enumeration value="UNKNOWN" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="ArrayOfJobStatus">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="JobStatus" type="tns:JobStatus" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfJobStatus">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfJobStatus" nillable="true" type="tns:ArrayOfJobStatus" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="Job">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns0:TransientVO">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="progress" nillable="true" type="tns:JobProgress" />
            </xsd:sequence>
            <xsd:attribute name="elapsedTime" type="xsd:int" use="required" />
            <xsd:attribute name="id" type="xsd:string" use="optional" />
            <xsd:attribute name="status" type="tns:JobStatus" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfJob">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="Job" nillable="true" type="tns:Job" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfJob">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfJob" nillable="true" type="tns:ArrayOfJob" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="JobProgress" abstract="true">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns0:TransientVO">
            <xsd:sequence />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfJobProgress">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="JobProgress" nillable="true" type="tns:JobProgress" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfJobProgress">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfJobProgress" nillable="true" type="tns:ArrayOfJobProgress" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="BulkProgress">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:JobProgress">
            <xsd:sequence />
            <xsd:attribute name="failed" type="xsd:int" use="required" />
            <xsd:attribute name="remaining" type="xsd:int" use="required" />
            <xsd:attribute name="successful" type="xsd:int" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfBulkProgress">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="BulkProgress" nillable="true" type="tns:BulkProgress" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfBulkProgress">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfBulkProgress" nillable="true" type="tns:ArrayOfBulkProgress" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="DistanceMatrixProgress">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:JobProgress">
            <xsd:sequence />
            <xsd:attribute name="currentRowIndex" type="xsd:int" use="required" />
            <xsd:attribute name="lastRowIndex" type="xsd:int" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfDistanceMatrixProgress">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="DistanceMatrixProgress" nillable="true" type="tns:DistanceMatrixProgress" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfDistanceMatrixProgress">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfDistanceMatrixProgress" nillable="true" type="tns:ArrayOfDistanceMatrixProgress" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="WatchOptions">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns0:TransientVO">
            <xsd:sequence />
            <xsd:attribute name="maximumPollingPeriod" type="xsd:int" use="optional" />
            <xsd:attribute name="progressUpdatePeriod" type="xsd:int" use="optional" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfWatchOptions">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="WatchOptions" nillable="true" type="tns:WatchOptions" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfWatchOptions">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfWatchOptions" nillable="true" type="tns:ArrayOfWatchOptions" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="PlanProgress">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:JobProgress">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="distanceMatrixCalculationProgress" nillable="true" type="tns:DistanceMatrixCalculationProgress" />
              <xsd:element minOccurs="0" maxOccurs="1" name="improvementProgress" nillable="true" type="tns:ImprovementProgress" />
            </xsd:sequence>
            <xsd:attribute name="action" type="xsd:string" use="optional" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfPlanProgress">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="PlanProgress" nillable="true" type="tns:PlanProgress" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfPlanProgress">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfPlanProgress" nillable="true" type="tns:ArrayOfPlanProgress" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="DistanceMatrixCalculationProgress">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns0:TransientVO">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="currentDistanceMatrixProgress" nillable="true" type="tns:DistanceMatrixProgress" />
            </xsd:sequence>
            <xsd:attribute name="currentDimaIndex" type="xsd:int" use="required" />
            <xsd:attribute name="dimaId" type="xsd:int" use="required" />
            <xsd:attribute name="lastDimaIndex" type="xsd:int" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfDistanceMatrixCalculationProgress">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="DistanceMatrixCalculationProgress" nillable="true" type="tns:DistanceMatrixCalculationProgress" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfDistanceMatrixCalculationProgress">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfDistanceMatrixCalculationProgress" nillable="true" type="tns:ArrayOfDistanceMatrixCalculationProgress" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ImprovementProgress">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns0:TransientVO">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="bestPlan" nillable="true" type="tns:KeyFigures" />
              <xsd:element minOccurs="0" maxOccurs="1" name="currentPlan" nillable="true" type="tns:KeyFigures" />
              <xsd:element minOccurs="0" maxOccurs="1" name="initialPlan" nillable="true" type="tns:KeyFigures" />
            </xsd:sequence>
            <xsd:attribute name="availableMachineTime" type="xsd:int" use="required" />
            <xsd:attribute name="iterationIndex" type="xsd:int" use="required" />
            <xsd:attribute name="numberOfImprovements" type="xsd:int" use="required" />
            <xsd:attribute name="usedMachineTime" type="xsd:int" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfImprovementProgress">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ImprovementProgress" nillable="true" type="tns:ImprovementProgress" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfImprovementProgress">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfImprovementProgress" nillable="true" type="tns:ArrayOfImprovementProgress" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="KeyFigures">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns0:TransientVO">
            <xsd:sequence />
            <xsd:attribute name="costOfObjectiveFunction" type="xsd:int" use="required" />
            <xsd:attribute name="numberOfInfeasibleOrders" type="xsd:int" use="required" />
            <xsd:attribute name="numberOfScheduledOrders" type="xsd:int" use="required" />
            <xsd:attribute name="numberOfScheduledVehicles" type="xsd:int" use="required" />
            <xsd:attribute name="numberOfUnscheduledOrders" type="xsd:int" use="required" />
            <xsd:attribute name="totalChainCost" type="xsd:int" use="required" />
            <xsd:attribute name="totalChainPeriod" type="xsd:int" use="required" />
            <xsd:attribute name="totalTourCost" type="xsd:int" use="required" />
            <xsd:attribute name="totalTourCount" type="xsd:int" use="required" />
            <xsd:attribute name="totalTourDistance" type="xsd:int" use="required" />
            <xsd:attribute name="totalTourDrivingPeriod" type="xsd:int" use="required" />
            <xsd:attribute name="totalTourPeriod" type="xsd:int" use="required" />
            <xsd:attribute name="totalTourWaitingPeriod" type="xsd:int" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfKeyFigures">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="KeyFigures" nillable="true" type="tns:KeyFigures" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfKeyFigures">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfKeyFigures" nillable="true" type="tns:ArrayOfKeyFigures" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="OptimizationProgress">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns0:TransientVO">
            <xsd:sequence />
            <xsd:attribute name="currentLoopIndex" type="xsd:int" use="required" />
            <xsd:attribute name="lastLoopIndex" type="xsd:int" use="required" />
            <xsd:attribute name="progress" type="xsd:int" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfOptimizationProgress">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="OptimizationProgress" nillable="true" type="tns:OptimizationProgress" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfOptimizationProgress">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfOptimizationProgress" nillable="true" type="tns:ArrayOfOptimizationProgress" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ClusterProgress">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:JobProgress">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="distanceMatrixProgress" nillable="true" type="tns:DistanceMatrixProgress" />
              <xsd:element minOccurs="0" maxOccurs="1" name="optimizationProgress" nillable="true" type="tns:OptimizationProgress" />
            </xsd:sequence>
            <xsd:attribute name="action" type="xsd:string" use="optional" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfClusterProgress">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ClusterProgress" nillable="true" type="tns:ClusterProgress" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfClusterProgress">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfClusterProgress" nillable="true" type="tns:ArrayOfClusterProgress" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="TerritoryProgress">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:JobProgress">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="distanceMatrixProgress" nillable="true" type="tns:DistanceMatrixProgress" />
            </xsd:sequence>
            <xsd:attribute name="action" type="xsd:string" use="optional" />
            <xsd:attribute name="optimizationProgress" type="xsd:int" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfTerritoryProgress">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="TerritoryProgress" nillable="true" type="tns:TerritoryProgress" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfTerritoryProgress">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfTerritoryProgress" nillable="true" type="tns:ArrayOfTerritoryProgress" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ZoneLoadingProgress">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:JobProgress">
            <xsd:sequence />
            <xsd:attribute name="action" type="xsd:string" use="optional" />
            <xsd:attribute name="optimizationProgress" type="xsd:int" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfZoneLoadingProgress">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ZoneLoadingProgress" nillable="true" type="tns:ZoneLoadingProgress" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfZoneLoadingProgress">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfZoneLoadingProgress" nillable="true" type="tns:ArrayOfZoneLoadingProgress" />
        </xsd:sequence>
      </xsd:complexType>
    </xsd:schema>
    <xsd:schema xmlns:ns2="http://wrappertypes.service.jabba.ptvag.com" xmlns:tns="http://xroute.xserver.ptvag.com" xmlns:ns1="http://value.core.jabba.ptvag.com" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns0="http://common.xserver.ptvag.com" xmlns="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="http://xroute.xserver.ptvag.com">
      <xsd:import namespace="http://wrappertypes.service.jabba.ptvag.com" />
      <xsd:import namespace="http://exception.core.jabba.ptvag.com" />
      <xsd:import namespace="http://common.xserver.ptvag.com" />
      <xsd:import namespace="http://value.core.jabba.ptvag.com" />
      <xsd:complexType name="RouteInfo">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="wrappedTravelTrend" nillable="true" type="tns:ArrayOfCommuterTravelTrend" />
            </xsd:sequence>
            <xsd:attribute name="cost" type="xsd:int" use="required" />
            <xsd:attribute name="distance" type="xsd:int" use="required" />
            <xsd:attribute name="hasViolations" type="xsd:boolean" use="optional" />
            <xsd:attribute name="time" type="xsd:int" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfRouteInfo">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="RouteInfo" nillable="true" type="tns:RouteInfo" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfRouteInfo">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfRouteInfo" nillable="true" type="tns:ArrayOfRouteInfo" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="WaypointDesc">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence>
              <xsd:element minOccurs="1" maxOccurs="1" name="wrappedCoords" nillable="true" type="ns0:ArrayOfPoint" />
              <xsd:element minOccurs="0" maxOccurs="1" name="nodeID" nillable="true" type="tns:UniqueGeoID" />
              <xsd:element minOccurs="0" maxOccurs="1" name="wrappedRoutingOptions" nillable="true" type="tns:ArrayOfRoutingOption" />
              <xsd:element minOccurs="1" maxOccurs="1" name="wrappedSegmentID" nillable="true" type="tns:ArrayOfUniqueGeoID" />
              <xsd:element minOccurs="0" maxOccurs="1" name="wrappedVehicleOptions" nillable="true" type="tns:ArrayOfVehicleOption" />
              <xsd:element minOccurs="0" maxOccurs="1" name="viaType" nillable="true" type="tns:ViaType" />
            </xsd:sequence>
            <xsd:attribute name="combinedTransportID" type="xsd:string" use="optional" />
            <xsd:attribute name="fuzzyRadius" type="xsd:int" use="required" />
            <xsd:attribute name="heading" type="xsd:int" use="optional" />
            <xsd:attribute name="linkType" type="tns:LinkType" use="required" />
            <xsd:attribute name="street" type="xsd:string" use="optional" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfWaypointDesc">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="WaypointDesc" nillable="true" type="tns:WaypointDesc" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfWaypointDesc">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfWaypointDesc" nillable="true" type="tns:ArrayOfWaypointDesc" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="LinkType">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="NEXT_NODE" />
          <xsd:enumeration value="NEXT_SEGMENT" />
          <xsd:enumeration value="NEXT_MAIN_NODE" />
          <xsd:enumeration value="FUZZY_LINKING" />
          <xsd:enumeration value="AUTO_LINKING" />
          <xsd:enumeration value="NEXT_MAIN_TOLL_NODE" />
          <xsd:enumeration value="TOLL_STATION" />
          <xsd:enumeration value="TI_LINKING" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="ArrayOfLinkType">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="LinkType" type="tns:LinkType" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfLinkType">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfLinkType" nillable="true" type="tns:ArrayOfLinkType" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="RoutingParameter">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="OPTIMIZATION" />
          <xsd:enumeration value="SPEED_PROFILE" />
          <xsd:enumeration value="AVOID_NATIONALNAMEDTOLL_ROADS" />
          <xsd:enumeration value="AVOID_TOLLROADS" />
          <xsd:enumeration value="AVOID_VIGNETTEROADS" />
          <xsd:enumeration value="AVOID_HIGHWAYS" />
          <xsd:enumeration value="AVOID_FERRIES" />
          <xsd:enumeration value="AVOID_RESIDENTS_ONLY" />
          <xsd:enumeration value="AVOID_URBAN_AREAS" />
          <xsd:enumeration value="AVOID_RAMPS" />
          <xsd:enumeration value="AVOID_LOW_EMISSION_ZONES" />
          <xsd:enumeration value="ALLOW_SEGMENT_VIOLATIONS" />
          <xsd:enumeration value="COST_OF_SEGMENT_VIOLATIONS" />
          <xsd:enumeration value="EXCLUDE_COUNTRIES" />
          <xsd:enumeration value="ROUTING_COUNTRIES" />
          <xsd:enumeration value="ROUTING_RECTANGLE" />
          <xsd:enumeration value="ROUTE_LANGUAGE" />
          <xsd:enumeration value="START_TIME" />
          <xsd:enumeration value="IS_DESTTIME" />
          <xsd:enumeration value="DYNAMIC_PROFILE" />
          <xsd:enumeration value="ENABLE_DYNAMIC" />
          <xsd:enumeration value="ENABLE_ROADEDITOR" />
          <xsd:enumeration value="START_TIME_ROADEDITOR" />
          <xsd:enumeration value="ROADEDITOR_LAYERNAME" />
          <xsd:enumeration value="ROADEDITOR_ATTRIBUTESET" />
          <xsd:enumeration value="ROADEDITOR_ADDITIONAL_OPTIONS" />
          <xsd:enumeration value="DISTANCE_MEASURE" />
          <xsd:enumeration value="COUNTRY_ENCODING" />
          <xsd:enumeration value="GENERATE_EXTWAYPOINTS" />
          <xsd:enumeration value="EXPERT_OPTIONS" />
          <xsd:enumeration value="REQUEST_VERSION" />
          <xsd:enumeration value="LOW_EMISSION_ZONE_TYPE" />
          <xsd:enumeration value="DYNAMIC_TIME_ON_STATICROUTE" />
          <xsd:enumeration value="DYNAMIC_TRAVEL_TIME_STEP_SIZE" />
          <xsd:enumeration value="DYNAMIC_TRAVEL_TIME_STEP_COUNT" />
          <xsd:enumeration value="SPEED_INFOS" />
          <xsd:enumeration value="ENABLE_DYNAMIC_WITH_FREE_FLOW_SPEED" />
          <xsd:enumeration value="GEODATASOURCE_LAYER" />
          <xsd:enumeration value="REMAINING_DRIVING_TIMES" />
          <xsd:enumeration value="IS_LOCAL_TIME_AT_LOCATION" />
          <xsd:enumeration value="ENFORCE_HIGH_PERFORMANCE_ROUTING" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="ArrayOfRoutingParameter">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="RoutingParameter" type="tns:RoutingParameter" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfRoutingParameter">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfRoutingParameter" nillable="true" type="tns:ArrayOfRoutingParameter" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="RouteManoeuvre">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="brunnelManoeuvre" nillable="true" type="tns:BrunnelManoeuvre" />
              <xsd:element minOccurs="0" maxOccurs="1" name="manoeuvreAttr" nillable="true" type="tns:ManoeuvreAttributes" />
              <xsd:element minOccurs="0" maxOccurs="1" name="urbanlManoeuvre" nillable="true" type="tns:UrbanManoeuvre" />
            </xsd:sequence>
            <xsd:attribute name="detailLevel" type="tns:DetailLevel" use="required" />
            <xsd:attribute name="dirInfoIdx" type="xsd:int" use="required" />
            <xsd:attribute name="dirInfoNodeType" type="tns:InfoNodeType" use="required" />
            <xsd:attribute name="exitAngle" type="xsd:int" use="required" />
            <xsd:attribute name="exitAngleNorth" type="xsd:int" use="required" />
            <xsd:attribute name="exitNr" type="xsd:int" use="required" />
            <xsd:attribute name="locInfoIdx" type="xsd:int" use="required" />
            <xsd:attribute name="locInfoNodeType" type="tns:InfoNodeType" use="required" />
            <xsd:attribute name="manoeuvreDesc" type="xsd:string" use="optional" />
            <xsd:attribute name="manoeuvreGroupIdx" type="xsd:int" use="required" />
            <xsd:attribute name="manoeuvreType" type="tns:ManoeuvreType" use="required" />
            <xsd:attribute name="predSegmentIdx" type="xsd:int" use="required" />
            <xsd:attribute name="routeListSegmentIdx" type="xsd:int" use="required" />
            <xsd:attribute name="succSegmentIdx" type="xsd:int" use="required" />
            <xsd:attribute name="turnOrient" type="tns:TurnOrient" use="required" />
            <xsd:attribute name="turnWeight" type="tns:TurnWeight" use="required" />
            <xsd:attribute name="viaIdx" type="xsd:int" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfRouteManoeuvre">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="RouteManoeuvre" nillable="true" type="tns:RouteManoeuvre" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfRouteManoeuvre">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfRouteManoeuvre" nillable="true" type="tns:ArrayOfRouteManoeuvre" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="RouteListSegment">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="cenEmissions" nillable="true" type="tns:CENEmissionScenarios" />
              <xsd:element minOccurs="0" maxOccurs="1" name="emissions" nillable="true" type="tns:Emissions" />
              <xsd:element minOccurs="0" maxOccurs="1" name="wrappedFeatureDescriptions" nillable="true" type="tns:ArrayOfFeatureDescription" />
              <xsd:element minOccurs="0" maxOccurs="1" name="normSpeed" nillable="true" type="tns:NormSpeed" />
              <xsd:element minOccurs="0" maxOccurs="1" name="segmentAttr" nillable="true" type="tns:SegmentAttributes" />
              <xsd:element minOccurs="0" maxOccurs="1" name="speedLimits" nillable="true" type="tns:SpeedLimits" />
              <xsd:element minOccurs="0" maxOccurs="1" name="wrappedViolations" nillable="true" type="ns2:ArrayOfString" />
            </xsd:sequence>
            <xsd:attribute name="accDist" type="xsd:int" use="required" />
            <xsd:attribute name="accTime" type="xsd:int" use="required" />
            <xsd:attribute name="countryCode" type="xsd:string" use="optional" />
            <xsd:attribute name="dirInfoIdx" type="xsd:int" use="required" />
            <xsd:attribute name="firstNodeIdx" type="xsd:int" use="required" />
            <xsd:attribute name="firstPolyIdx" type="xsd:int" use="required" />
            <xsd:attribute name="iuCode" type="xsd:int" use="required" />
            <xsd:attribute name="nC" type="tns:NetworkClass" use="required" />
            <xsd:attribute name="nodeC" type="xsd:int" use="required" />
            <xsd:attribute name="polyC" type="xsd:int" use="required" />
            <xsd:attribute name="streetNameIdx" type="xsd:int" use="required" />
            <xsd:attribute name="streetNoIdx" type="xsd:int" use="required" />
            <xsd:attribute name="utcOffset" type="xsd:int" use="optional" />
            <xsd:attribute name="vCalc" type="xsd:int" use="optional" />
            <xsd:attribute name="vNorm" type="xsd:int" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfRouteListSegment">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="RouteListSegment" nillable="true" type="tns:RouteListSegment" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfRouteListSegment">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfRouteListSegment" nillable="true" type="tns:ArrayOfRouteListSegment" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ResultListOptions">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="cenEmissionConfiguration" nillable="true" type="tns:CENEmissionConfiguration" />
              <xsd:element minOccurs="0" maxOccurs="1" name="destDetail" nillable="true" type="tns:DetailDescriptionOption" />
              <xsd:element minOccurs="0" maxOccurs="1" name="emissions" nillable="true" type="tns:EmissionType" />
              <xsd:element minOccurs="0" maxOccurs="1" name="hbefaType" nillable="true" type="tns:HBEFAType" />
              <xsd:element minOccurs="0" maxOccurs="1" name="startDetail" nillable="true" type="tns:DetailDescriptionOption" />
            </xsd:sequence>
            <xsd:attribute name="binaryPathDesc" type="xsd:boolean" use="required" />
            <xsd:attribute name="boundingRectanglesC" type="xsd:int" use="required" />
            <xsd:attribute name="boundingRectanglesOffset" type="xsd:int" use="required" />
            <xsd:attribute name="brunnelManoeuvres" type="xsd:boolean" use="required" />
            <xsd:attribute name="detailLevel" type="tns:DetailLevel" use="required" />
            <xsd:attribute name="dynamicInfo" type="xsd:boolean" use="required" />
            <xsd:attribute name="extSegments" type="xsd:boolean" use="optional" />
            <xsd:attribute name="featureDescriptions" type="xsd:boolean" use="optional" />
            <xsd:attribute name="manoeuvreAttributes" type="xsd:boolean" use="required" />
            <xsd:attribute name="manoeuvreGroupRatio" type="xsd:double" use="optional" />
            <xsd:attribute name="manoeuvreGroups" type="xsd:boolean" use="required" />
            <xsd:attribute name="manoeuvres" type="xsd:boolean" use="required" />
            <xsd:attribute name="nodes" type="xsd:boolean" use="required" />
            <xsd:attribute name="polygon" type="xsd:boolean" use="required" />
            <xsd:attribute name="polygonElevations" type="xsd:boolean" use="optional" />
            <xsd:attribute name="segmentAttributeNamedToll" type="xsd:boolean" use="optional" />
            <xsd:attribute name="segmentAttributePiggyback" type="xsd:boolean" use="optional" />
            <xsd:attribute name="segmentAttributes" type="xsd:boolean" use="required" />
            <xsd:attribute name="segments" type="xsd:boolean" use="required" />
            <xsd:attribute name="speedLimits" type="xsd:boolean" use="optional" />
            <xsd:attribute name="texts" type="xsd:boolean" use="required" />
            <xsd:attribute name="tollManoeuvres" type="xsd:boolean" use="required" />
            <xsd:attribute name="totalRectangle" type="xsd:boolean" use="required" />
            <xsd:attribute name="urbanManoeuvres" type="xsd:boolean" use="required" />
            <xsd:attribute name="utcOffsets" type="xsd:boolean" use="optional" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfResultListOptions">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ResultListOptions" nillable="true" type="tns:ResultListOptions" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfResultListOptions">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfResultListOptions" nillable="true" type="tns:ArrayOfResultListOptions" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="UniqueGeoID">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence />
            <xsd:attribute name="iuCode" type="xsd:int" use="required" />
            <xsd:attribute name="n" type="xsd:int" use="required" />
            <xsd:attribute name="tID" type="xsd:long" use="required" />
            <xsd:attribute name="xOff" type="xsd:int" use="required" />
            <xsd:attribute name="yOff" type="xsd:int" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfUniqueGeoID">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="UniqueGeoID" nillable="true" type="tns:UniqueGeoID" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfUniqueGeoID">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfUniqueGeoID" nillable="true" type="tns:ArrayOfUniqueGeoID" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ExceptionPath">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="intersectingLine" nillable="true" type="ns0:LineString" />
              <xsd:element minOccurs="1" maxOccurs="1" name="wrappedNodes" nillable="true" type="tns:ArrayOfUniqueGeoID" />
              <xsd:element minOccurs="0" maxOccurs="1" name="polyline" nillable="true" type="ns0:LineString" />
            </xsd:sequence>
            <xsd:attribute name="absTimeMalus" type="xsd:int" use="optional" />
            <xsd:attribute name="binaryPathDesc" type="xsd:string" use="optional" />
            <xsd:attribute name="extSegments" type="xsd:string" use="optional" />
            <xsd:attribute name="relMalus" type="xsd:int" use="required" />
            <xsd:attribute name="street" type="xsd:string" use="optional" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfExceptionPath">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ExceptionPath" nillable="true" type="tns:ExceptionPath" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfExceptionPath">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfExceptionPath" nillable="true" type="tns:ArrayOfExceptionPath" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="SegmentAttributes">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence />
            <xsd:attribute name="additionalInfo" type="xsd:string" use="optional" />
            <xsd:attribute name="additionalRE" type="xsd:string" use="optional" />
            <xsd:attribute name="brunnelCode" type="tns:BrunnelCode" use="required" />
            <xsd:attribute name="hasExtraToll" type="xsd:boolean" use="required" />
            <xsd:attribute name="hasNamedToll" type="xsd:boolean" use="optional" />
            <xsd:attribute name="hasSeparator" type="xsd:boolean" use="required" />
            <xsd:attribute name="hasTollCar" type="xsd:boolean" use="required" />
            <xsd:attribute name="hasTollTruck" type="xsd:boolean" use="required" />
            <xsd:attribute name="hasVignetteCar" type="xsd:boolean" use="required" />
            <xsd:attribute name="hasVignetteTruck" type="xsd:boolean" use="required" />
            <xsd:attribute name="isBlockedCar" type="xsd:boolean" use="required" />
            <xsd:attribute name="isBlockedTruck" type="xsd:boolean" use="required" />
            <xsd:attribute name="isFerry" type="xsd:boolean" use="required" />
            <xsd:attribute name="isPedestrianZone" type="xsd:boolean" use="required" />
            <xsd:attribute name="isPiggyback" type="xsd:boolean" use="optional" />
            <xsd:attribute name="lowEmissionZoneType" type="xsd:string" use="optional" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfSegmentAttributes">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="SegmentAttributes" nillable="true" type="tns:SegmentAttributes" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfSegmentAttributes">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfSegmentAttributes" nillable="true" type="tns:ArrayOfSegmentAttributes" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="TurnWeight">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="NORMAL" />
          <xsd:enumeration value="HALF" />
          <xsd:enumeration value="STRONG" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="ArrayOfTurnWeight">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="TurnWeight" type="tns:TurnWeight" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfTurnWeight">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfTurnWeight" nillable="true" type="tns:ArrayOfTurnWeight" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="TurnOrient">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="STRAIGHT" />
          <xsd:enumeration value="LEFT" />
          <xsd:enumeration value="RIGHT" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="ArrayOfTurnOrient">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="TurnOrient" type="tns:TurnOrient" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfTurnOrient">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfTurnOrient" nillable="true" type="tns:ArrayOfTurnOrient" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="ManoeuvreType">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="FURTHER" />
          <xsd:enumeration value="KEEP" />
          <xsd:enumeration value="TURN" />
          <xsd:enumeration value="UTURN" />
          <xsd:enumeration value="ENTER" />
          <xsd:enumeration value="EXIT" />
          <xsd:enumeration value="ENTER_RA" />
          <xsd:enumeration value="STAY_RA" />
          <xsd:enumeration value="EXIT_RA" />
          <xsd:enumeration value="CHANGE" />
          <xsd:enumeration value="ENTER_FERRY" />
          <xsd:enumeration value="EXIT_FERRY" />
          <xsd:enumeration value="EXIT_RA_ENTER" />
          <xsd:enumeration value="EXIT_RA_ENTER_FERRY" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="ArrayOfManoeuvreType">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ManoeuvreType" type="tns:ManoeuvreType" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfManoeuvreType">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfManoeuvreType" nillable="true" type="tns:ArrayOfManoeuvreType" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="InfoNodeType">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="NORMAL" />
          <xsd:enumeration value="AE" />
          <xsd:enumeration value="AS" />
          <xsd:enumeration value="AD" />
          <xsd:enumeration value="AK" />
          <xsd:enumeration value="BORDER" />
          <xsd:enumeration value="BUILT_UP" />
          <xsd:enumeration value="FERRY" />
          <xsd:enumeration value="TOLL_ROAD" />
          <xsd:enumeration value="SIGN" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="ArrayOfInfoNodeType">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="InfoNodeType" type="tns:InfoNodeType" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfInfoNodeType">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfInfoNodeType" nillable="true" type="tns:ArrayOfInfoNodeType" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="BrunnelCode">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="NOTHING" />
          <xsd:enumeration value="OVER_WATER" />
          <xsd:enumeration value="UNDER_WATER" />
          <xsd:enumeration value="OVER_TRAIN" />
          <xsd:enumeration value="UNDER_TRAIN" />
          <xsd:enumeration value="OVER_STREET" />
          <xsd:enumeration value="UNDER_STREET" />
          <xsd:enumeration value="BRIDGE" />
          <xsd:enumeration value="TUNNEL" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="ArrayOfBrunnelCode">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="BrunnelCode" type="tns:BrunnelCode" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfBrunnelCode">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfBrunnelCode" nillable="true" type="tns:ArrayOfBrunnelCode" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="DetailLevel">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="BORDERS" />
          <xsd:enumeration value="VERY_IMPORTANT" />
          <xsd:enumeration value="STANDARD" />
          <xsd:enumeration value="LESS_IMPORTANT" />
          <xsd:enumeration value="OTHER_OPPORTUNITIES" />
          <xsd:enumeration value="ORTHOGONAL" />
          <xsd:enumeration value="ALL" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="ArrayOfDetailLevel">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="DetailLevel" type="tns:DetailLevel" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfDetailLevel">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfDetailLevel" nillable="true" type="tns:ArrayOfDetailLevel" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="DynamicInfo">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence />
            <xsd:attribute name="distanceDiff" type="xsd:int" use="optional" />
            <xsd:attribute name="timeBenefit" type="xsd:int" use="required" />
            <xsd:attribute name="timeLoss" type="xsd:int" use="required" />
            <xsd:attribute name="timeLoss2" type="xsd:int" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfDynamicInfo">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="DynamicInfo" nillable="true" type="tns:DynamicInfo" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfDynamicInfo">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfDynamicInfo" nillable="true" type="tns:ArrayOfDynamicInfo" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="MatrixOptions">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="wrappedExceptionPaths" nillable="true" type="tns:ArrayOfExceptionPath" />
              <xsd:element minOccurs="0" maxOccurs="1" name="wrappedNcFilter" nillable="true" type="ns2:ArrayOfInt" />
            </xsd:sequence>
            <xsd:attribute name="toll" type="xsd:boolean" use="required" />
            <xsd:attribute name="travelTrendDepartureTime" type="xsd:boolean" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfMatrixOptions">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="MatrixOptions" nillable="true" type="tns:MatrixOptions" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfMatrixOptions">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfMatrixOptions" nillable="true" type="tns:ArrayOfMatrixOptions" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="MatrixInfo">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence>
              <xsd:element minOccurs="1" maxOccurs="1" name="wrappedMatrixInfo" nillable="true" type="tns:ArrayOfRouteInfo" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfMatrixInfo">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="MatrixInfo" nillable="true" type="tns:MatrixInfo" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfMatrixInfo">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfMatrixInfo" nillable="true" type="tns:ArrayOfMatrixInfo" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ManoeuvreAttributes">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence />
            <xsd:attribute name="isBlockingEnd" type="xsd:boolean" use="required" />
            <xsd:attribute name="isBlockingStart" type="xsd:boolean" use="required" />
            <xsd:attribute name="isBorder" type="xsd:boolean" use="required" />
            <xsd:attribute name="isBrunnelEnd" type="xsd:boolean" use="required" />
            <xsd:attribute name="isBrunnelStart" type="xsd:boolean" use="required" />
            <xsd:attribute name="isUrbanEnd" type="xsd:boolean" use="required" />
            <xsd:attribute name="isUrbanStart" type="xsd:boolean" use="required" />
            <xsd:attribute name="tollRoadEnd" type="xsd:boolean" use="required" />
            <xsd:attribute name="tollRoadStart" type="xsd:boolean" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfManoeuvreAttributes">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ManoeuvreAttributes" nillable="true" type="tns:ManoeuvreAttributes" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfManoeuvreAttributes">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfManoeuvreAttributes" nillable="true" type="tns:ArrayOfManoeuvreAttributes" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="BrunnelManoeuvre">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence />
            <xsd:attribute name="brunnelDist" type="xsd:int" use="required" />
            <xsd:attribute name="brunnelEndIdx" type="xsd:int" use="required" />
            <xsd:attribute name="brunnelIdx" type="xsd:int" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfBrunnelManoeuvre">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="BrunnelManoeuvre" nillable="true" type="tns:BrunnelManoeuvre" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfBrunnelManoeuvre">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfBrunnelManoeuvre" nillable="true" type="tns:ArrayOfBrunnelManoeuvre" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="UrbanManoeuvre">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence />
            <xsd:attribute name="additionalUrbanIdx" type="xsd:int" use="optional" />
            <xsd:attribute name="urbanIdx" type="xsd:int" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfUrbanManoeuvre">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="UrbanManoeuvre" nillable="true" type="tns:UrbanManoeuvre" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfUrbanManoeuvre">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfUrbanManoeuvre" nillable="true" type="tns:ArrayOfUrbanManoeuvre" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="DetailDescriptionOption">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence />
            <xsd:attribute name="minLevel" type="tns:DetailLevel" use="required" />
            <xsd:attribute name="radius" type="xsd:int" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfDetailDescriptionOption">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="DetailDescriptionOption" nillable="true" type="tns:DetailDescriptionOption" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfDetailDescriptionOption">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfDetailDescriptionOption" nillable="true" type="tns:ArrayOfDetailDescriptionOption" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="XRouteException">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns3:BusinessException">
            <xsd:sequence />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:element name="XRouteException" type="tns:XRouteException" />
      <xsd:simpleType name="NetworkClass">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="MOTORWAY" />
          <xsd:enumeration value="HIGHWAY" />
          <xsd:enumeration value="TRUNK_ROAD" />
          <xsd:enumeration value="COUNTRY_ROAD" />
          <xsd:enumeration value="CITY_ROAD" />
          <xsd:enumeration value="RESIDENTIAL_ROAD" />
          <xsd:enumeration value="SPECIAL_ROAD" />
          <xsd:enumeration value="CYCLE_AND_WALKWAY" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="ArrayOfNetworkClass">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="NetworkClass" type="tns:NetworkClass" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfNetworkClass">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfNetworkClass" nillable="true" type="tns:ArrayOfNetworkClass" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="ErrorCode">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="SUCCESS" />
          <xsd:enumeration value="USER_ABORT" />
          <xsd:enumeration value="GENERAL_ENGINE_ERROR" />
          <xsd:enumeration value="GENERAL_INITIALIZATION_ERROR" />
          <xsd:enumeration value="PROFILE_DOES_NOT_EXIST" />
          <xsd:enumeration value="INVALID_TIMECALC_PROFILE" />
          <xsd:enumeration value="GENERAL_CALCULATION_ERROR" />
          <xsd:enumeration value="INVALID_PROPERTY_ERROR" />
          <xsd:enumeration value="INVALID_OPTION_ERROR" />
          <xsd:enumeration value="INVALID_LINK_TYPE" />
          <xsd:enumeration value="INVALID_EXPANSION_DESCRIPTION" />
          <xsd:enumeration value="INVALID_NETWORKCLASS_DIMENSION" />
          <xsd:enumeration value="CONFLICTING_PROPERTIES_ERROR" />
          <xsd:enumeration value="CONFLICTING_OPTIONS_ERROR" />
          <xsd:enumeration value="GENERAL_LICENSE_ERROR" />
          <xsd:enumeration value="BINARY_PATH_DESC_CORRUPT" />
          <xsd:enumeration value="EXCEPTIONPATH_POLYLINE_CANNOT_BE_USED" />
          <xsd:enumeration value="EXCEPTIONPATH_POLYLINE_TOO_LONG" />
          <xsd:enumeration value="CONFLICT_MATRIX_EXPATH_STREET" />
          <xsd:enumeration value="DYNAMIC_TIME_ON_STATICROUTE_NOT_SUPPORTED" />
          <xsd:enumeration value="INACCURATE_EXCEPTIONPATH_DESC" />
          <xsd:enumeration value="EXCEPTIONPATH_INTERSECTINGLINE_CANNOT_BE_USED" />
          <xsd:enumeration value="WAYPOINTDESC_WITHOUT_COORDS" />
          <xsd:enumeration value="WAYPOINTDESC_EXPLICITLINKING_AND_COORDS" />
          <xsd:enumeration value="WAYPOINTDESC_EXPLICITLINKING_WITH_NODE_AND_SEGMENT" />
          <xsd:enumeration value="WAYPOINTDESC_EXPLICITLINKING_NOT_PAIR_OF_NODES_IN_SEGMENT" />
          <xsd:enumeration value="WAYPOINTDESC_EXPLICITLINKING_ERROR_IN_SEGMENT" />
          <xsd:enumeration value="INVALID_COMBINED_TRANSPORT_CONFIGURATION" />
          <xsd:enumeration value="WAYPOINTDESC_EXPLICITLINKING_NOT_SUPPORTED" />
          <xsd:enumeration value="CONFLICT_WAYPOINTCOUNT_MANOEUVRE" />
          <xsd:enumeration value="CONFLICTED_FUZZY_WAYPOINT" />
          <xsd:enumeration value="CONFLICT_VIA_TYPE" />
          <xsd:enumeration value="ROUTER_FLIGHTDISTANCE_TOO_BIG" />
          <xsd:enumeration value="PARSING_EXTSEGMENTS_FAILED" />
          <xsd:enumeration value="EMPTY_RESULTLISTOPTIONS" />
          <xsd:enumeration value="CONFLICT_ENABLE_DYNAMIC_INFO" />
          <xsd:enumeration value="CONFLICT_ENABLE_DYNAMIC_TIME_ON_STATICROUTE" />
          <xsd:enumeration value="CONFLICT_ENABLE_DYNAMIC_WITH_FREE_FLOW_SPEED" />
          <xsd:enumeration value="CONFLICT_ROUTING_PARAMETER_COUNTRIES" />
          <xsd:enumeration value="ROUTING_PARAMETER_OUT_OF_RANGE" />
          <xsd:enumeration value="WRONG_ROUTING_PARAMETER" />
          <xsd:enumeration value="EMPTY_ROUTING_OPTION_VALUE_STRING" />
          <xsd:enumeration value="VEHICLE_PARAMETER_OUT_OF_RANGE" />
          <xsd:enumeration value="EMPTY_VEHICLE_OPTION_VALUE_STRING" />
          <xsd:enumeration value="INVALID_TUNNEL_RESTRICTION_CODE" />
          <xsd:enumeration value="CONFLICT_VEHICLE_OPTION" />
          <xsd:enumeration value="CONFLICT_TOUR_FUZZYPOINTS" />
          <xsd:enumeration value="CONFLICT_TOUR_ROADEDITOR" />
          <xsd:enumeration value="CONFLICT_TOUR_TIME_DEPENDENCY" />
          <xsd:enumeration value="CONFLICT_TOUR_DYNAMIC" />
          <xsd:enumeration value="CONFLICT_TOUR_DESTTIME" />
          <xsd:enumeration value="CONFLICT_TOUR_WAYPOINTS" />
          <xsd:enumeration value="TOUR_INVALIDBRPARAMS" />
          <xsd:enumeration value="TOUR_INVALIDINTERVAL" />
          <xsd:enumeration value="ADVANCEDTOUR_INVALID_SITEID" />
          <xsd:enumeration value="ADVANCEDTOUR_INVALID_USECASE" />
          <xsd:enumeration value="ADVANCEDTOUR_INVALID_PARAMS" />
          <xsd:enumeration value="ADVANCEDTOUR_ERROR" />
          <xsd:enumeration value="NO_REACHABLE_SINK_OR_PATHDESC" />
          <xsd:enumeration value="NO_REACHABLE_LOCATIONS" />
          <xsd:enumeration value="NO_REACHABLE_EXPANSION_DESCRIPTION" />
          <xsd:enumeration value="NO_ISO_SINK" />
          <xsd:enumeration value="NO_ISO_OPTIONS" />
          <xsd:enumeration value="NO_ISO_EXPANSION_DESCRIPTION" />
          <xsd:enumeration value="NO_ISO_HORIZONS" />
          <xsd:enumeration value="UNKNOWN_CURRENCY" />
          <xsd:enumeration value="CONVERTING_CURRENCY_TO_EURO_FAILED" />
          <xsd:enumeration value="REDUCTIONIDS_NOT_SUPPORTED" />
          <xsd:enumeration value="TRAILER_HAS_BREAKS_DEPRECATED" />
          <xsd:enumeration value="CALCULATION_1TON_ROUTE_FAILED" />
          <xsd:enumeration value="CALCULATION_REACHABLE_OBJECT_FAILED" />
          <xsd:enumeration value="CALCULATION_ISOCHRONES_FAILED" />
          <xsd:enumeration value="CALCULATION_1TO1_ROUTE_FAILED" />
          <xsd:enumeration value="CALCULATION_ROUTE_LIST_FAILED" />
          <xsd:enumeration value="CALCULATION_MANOUEVRES" />
          <xsd:enumeration value="CALULATE_TOLL_ERROR" />
          <xsd:enumeration value="UNKNOWN_TOLL_SCENARIO" />
          <xsd:enumeration value="TOLL_SCENARIO_BYDATE_FAILED" />
          <xsd:enumeration value="SUPPLEMENTARY_MAP_DATA_MISSING" />
          <xsd:enumeration value="WAYPOINT_NOT_LINKED_ERROR" />
          <xsd:enumeration value="PATTERN_OVER_TIME_PROFILE_NOT_AVAILABLE" />
          <xsd:enumeration value="PATTERN_OVER_TIME_ACCESS_ERROR" />
          <xsd:enumeration value="ID_MAPPING_ERROR" />
          <xsd:enumeration value="ID_MAPPING_DATA_NOT_PRESENT" />
          <xsd:enumeration value="WRONG_ROADEDITOR_PARAMETER" />
          <xsd:enumeration value="ROADEDITOR_MISSING_WEIGHT" />
          <xsd:enumeration value="ROADEDITOR_ACCESS_ERROR" />
          <xsd:enumeration value="ROADEDITOR_ATTRIBUTESET_DEPRECATED" />
          <xsd:enumeration value="FEATURE_NOT_CONFIGURED" />
          <xsd:enumeration value="NO_ROADEDITOR_LICENSE_AVAILABLE" />
          <xsd:enumeration value="NO_ROADEDITOR_LAYER_CONTROL_INITIALIZED" />
          <xsd:enumeration value="NO_DYNAMIC_LICENSE_AVAILABLE" />
          <xsd:enumeration value="WRONG_DISTANCE_MEASURE" />
          <xsd:enumeration value="INCOMPLETE_WAYPOINTLIST" />
          <xsd:enumeration value="EMISSIONCALCULATION_NOT_INITIALIZED" />
          <xsd:enumeration value="EMISSIONCALCULATION_NO_DATA_FOR_VEHICLE" />
          <xsd:enumeration value="EMISSIONCALCULATION_NOT_ALLOWED" />
          <xsd:enumeration value="EMISSIONCALCULATION_INVALID_VEHICLE_PROFILE" />
          <xsd:enumeration value="SPEEDLIMITS_NOT_LICENSED" />
          <xsd:enumeration value="INVALID_ROUTINGOPTION_GEODATASOURCE_LAYER" />
          <xsd:enumeration value="ERROR_EVALUATING_ROUTINGOPTION_GEODATASOURCE_LAYER" />
          <xsd:enumeration value="INVALID_REACHABLEOBJECTSOPTION_GEODATASOURCE_LAYER" />
          <xsd:enumeration value="ERROR_EVALUATING_REACHABLEOBJECTSOPTION_GEODATASOURCE_LAYER" />
          <xsd:enumeration value="INVALID_HORIZONS" />
          <xsd:enumeration value="SEARCHREACHABLEOBJECTS_EXCEPTIONPATH_NOT_IMPLEMENTED" />
          <xsd:enumeration value="UNSUPPORTED_WAYPOINT_CONFIGURATION" />
          <xsd:enumeration value="INVALID_WAYPOINT_CONFIGURATION" />
          <xsd:enumeration value="UNSUPPORTED_LANGUAGE" />
          <xsd:enumeration value="CONFLICT_ISOCHRONES_ROADEDITOR" />
          <xsd:enumeration value="CONFLICT_REACHABLEOBJECTS_ROADEDITOR" />
          <xsd:enumeration value="CONFLICT_REACHABLEOBJECTS_DYNAMIC" />
          <xsd:enumeration value="EMISSIONCALCULATION_ERROR_RETRIEVING_CONVERSION_FACTORS" />
          <xsd:enumeration value="INVALID_ROUTINGOPTION_AVOID_NATIONALNAMEDTOLL_ROADS" />
          <xsd:enumeration value="INVALID_FEATURELAYER_CONFIGURATION" />
          <xsd:enumeration value="MISSING_TIMEZONES_FEATURELAYER" />
          <xsd:enumeration value="FEATURE_LAYER_DATA_NOT_AVAILABLE" />
          <xsd:enumeration value="INVALID_HIGH_PERFORMANCE_ROUTING_CONFIGURATION" />
          <xsd:enumeration value="CONFLICT_MAP_COMPATIBILITY_VERSION_AND_PROFILE" />
          <xsd:enumeration value="INVALID_XML_PROFILE_SNIPPET" />
          <xsd:enumeration value="INVALID_PROFILE" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="ArrayOfErrorCode">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ErrorCode" type="tns:ErrorCode" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfErrorCode">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfErrorCode" nillable="true" type="tns:ArrayOfErrorCode" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ExtendedRoute">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence>
              <xsd:element minOccurs="1" maxOccurs="1" name="wrappedCountryInfos" nillable="true" type="tns:ArrayOfCountryInfo" />
              <xsd:element minOccurs="0" maxOccurs="1" name="wrappedPartTollCosts" nillable="true" type="tns:ArrayOfPartTollCosts" />
              <xsd:element minOccurs="0" maxOccurs="1" name="route" nillable="true" type="tns:Route" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfExtendedRoute">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ExtendedRoute" nillable="true" type="tns:ExtendedRoute" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfExtendedRoute">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfExtendedRoute" nillable="true" type="tns:ArrayOfExtendedRoute" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="CountryInfo">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="partRouteInfo" nillable="true" type="tns:RouteInfo" />
              <xsd:element minOccurs="1" maxOccurs="1" name="wrappedPerNCRouteInfo" nillable="true" type="tns:ArrayOfRouteInfo" />
              <xsd:element minOccurs="0" maxOccurs="1" name="wrappedPerTypeTollDistance" nillable="true" type="ns2:ArrayOfInt" />
              <xsd:element minOccurs="0" maxOccurs="1" name="wrappedPerTypeTollPrice" nillable="true" type="ns2:ArrayOfInt" />
              <xsd:element minOccurs="1" maxOccurs="1" name="wrappedTollCostInfos" nillable="true" type="tns:ArrayOfTollCostInfo" />
              <xsd:element minOccurs="0" maxOccurs="1" name="tollTotals" nillable="true" type="tns:TollTotals" />
            </xsd:sequence>
            <xsd:attribute name="additionalInfo" type="xsd:string" use="optional" />
            <xsd:attribute name="costsPercentageToPassOn" type="xsd:double" use="optional" />
            <xsd:attribute name="countryCode" type="xsd:string" use="optional" />
            <xsd:attribute name="currency" type="tns:Currency" use="required" />
            <xsd:attribute name="currencyISOCode" type="xsd:string" use="optional" />
            <xsd:attribute name="currencyName" type="xsd:string" use="optional" />
            <xsd:attribute name="iuCode" type="xsd:int" use="required" />
            <xsd:attribute name="scenarioId" type="xsd:int" use="optional" />
            <xsd:attribute name="tollName" type="xsd:string" use="optional" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfCountryInfo">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="CountryInfo" nillable="true" type="tns:CountryInfo" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfCountryInfo">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfCountryInfo" nillable="true" type="tns:ArrayOfCountryInfo" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="TollCostInfo">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="tollStationFrom" nillable="true" type="tns:TollStationDescription" />
              <xsd:element minOccurs="0" maxOccurs="1" name="tollStationTo" nillable="true" type="tns:TollStationDescription" />
            </xsd:sequence>
            <xsd:attribute name="currency" type="tns:Currency" use="required" />
            <xsd:attribute name="currencyName" type="xsd:string" use="optional" />
            <xsd:attribute name="streetName" type="xsd:string" use="optional" />
            <xsd:attribute name="tollDistance" type="xsd:int" use="required" />
            <xsd:attribute name="tollPrice" type="xsd:int" use="required" />
            <xsd:attribute name="tollProviderID" type="xsd:int" use="required" />
            <xsd:attribute name="tollProviderName" type="xsd:string" use="optional" />
            <xsd:attribute name="tollSectionID" type="xsd:int" use="required" />
            <xsd:attribute name="tollSectionName" type="xsd:string" use="optional" />
            <xsd:attribute name="tollType" type="tns:TollType" use="required" />
            <xsd:attribute name="vehicleTarifID" type="xsd:int" use="optional" />
            <xsd:attribute name="waypointIndex" type="xsd:int" use="optional" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfTollCostInfo">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="TollCostInfo" nillable="true" type="tns:TollCostInfo" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfTollCostInfo">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfTollCostInfo" nillable="true" type="tns:ArrayOfTollCostInfo" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="CountryInfoOptions">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="wrappedReductionIDs" nillable="true" type="ns2:ArrayOfInt" />
              <xsd:element minOccurs="0" maxOccurs="1" name="wrappedTollScenarios" nillable="true" type="tns:ArrayOfTollScenario" />
            </xsd:sequence>
            <xsd:attribute name="allEuro" type="xsd:boolean" use="required" />
            <xsd:attribute name="calculatePartTollCosts" type="xsd:boolean" use="required" />
            <xsd:attribute name="costsPercentageToPassOn" type="xsd:boolean" use="optional" />
            <xsd:attribute name="currencyDescription" type="xsd:boolean" use="optional" />
            <xsd:attribute name="detailedTollCosts" type="xsd:boolean" use="required" />
            <xsd:attribute name="namedToll" type="xsd:boolean" use="optional" />
            <xsd:attribute name="tollDate" type="xsd:dateTime" use="optional" />
            <xsd:attribute name="tollTotals" type="xsd:boolean" use="optional" />
            <xsd:attribute name="waypointIndexInTollCostInfo" type="xsd:boolean" use="optional" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfCountryInfoOptions">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="CountryInfoOptions" nillable="true" type="tns:CountryInfoOptions" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfCountryInfoOptions">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfCountryInfoOptions" nillable="true" type="tns:ArrayOfCountryInfoOptions" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="TollType">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="SPECIALCHARGE" />
          <xsd:enumeration value="NATIONALTOLL" />
          <xsd:enumeration value="CITYTOLL" />
          <xsd:enumeration value="SPECIALCHARGEBRIDGE" />
          <xsd:enumeration value="SPECIALCHARGETUNNEL" />
          <xsd:enumeration value="SPECIALCHARGEFERRY" />
          <xsd:enumeration value="SPECIALCHARGEINTERNATIONALFERRY" />
          <xsd:enumeration value="SPECIALCHARGEMOUNTAINPASS" />
          <xsd:enumeration value="NATIONALNAMEDTOLL" />
          <xsd:enumeration value="NATIONALSECTIONBASED" />
          <xsd:enumeration value="NATIONALDISTANCEBASED" />
          <xsd:enumeration value="NONE" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="ArrayOfTollType">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="TollType" type="tns:TollType" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfTollType">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfTollType" nillable="true" type="tns:ArrayOfTollType" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ManoeuvreGroup">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="extend" nillable="true" type="tns:BoundingRectangle" />
            </xsd:sequence>
            <xsd:attribute name="fromIdx" type="xsd:int" use="required" />
            <xsd:attribute name="toIdx" type="xsd:int" use="required" />
            <xsd:attribute name="type" type="tns:ManoeuvreGroupType" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfManoeuvreGroup">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ManoeuvreGroup" nillable="true" type="tns:ManoeuvreGroup" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfManoeuvreGroup">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfManoeuvreGroup" nillable="true" type="tns:ArrayOfManoeuvreGroup" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="Currency">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="NONE" />
          <xsd:enumeration value="EUR" />
          <xsd:enumeration value="GBP" />
          <xsd:enumeration value="DKK" />
          <xsd:enumeration value="NOK" />
          <xsd:enumeration value="SEK" />
          <xsd:enumeration value="CHF" />
          <xsd:enumeration value="PLN" />
          <xsd:enumeration value="SIT" />
          <xsd:enumeration value="SKK" />
          <xsd:enumeration value="SK" />
          <xsd:enumeration value="TRY" />
          <xsd:enumeration value="USD" />
          <xsd:enumeration value="CAD" />
          <xsd:enumeration value="JPY" />
          <xsd:enumeration value="ROL" />
          <xsd:enumeration value="BGN" />
          <xsd:enumeration value="HUF" />
          <xsd:enumeration value="HRK" />
          <xsd:enumeration value="MKD" />
          <xsd:enumeration value="ALL" />
          <xsd:enumeration value="BAM" />
          <xsd:enumeration value="EEK" />
          <xsd:enumeration value="CSD" />
          <xsd:enumeration value="LVL" />
          <xsd:enumeration value="LTL" />
          <xsd:enumeration value="MTL" />
          <xsd:enumeration value="MDL" />
          <xsd:enumeration value="CYP" />
          <xsd:enumeration value="ZAR" />
          <xsd:enumeration value="CZK" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="ArrayOfCurrency">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="Currency" type="tns:Currency" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfCurrency">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfCurrency" nillable="true" type="tns:ArrayOfCurrency" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="ManoeuvreGroupType">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="MG_TYPE1" />
          <xsd:enumeration value="MG_TYPE2" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="ArrayOfManoeuvreGroupType">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ManoeuvreGroupType" type="tns:ManoeuvreGroupType" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfManoeuvreGroupType">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfManoeuvreGroupType" nillable="true" type="tns:ArrayOfManoeuvreGroupType" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="TollStationDescription">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence />
            <xsd:attribute name="manoeuvreType" type="tns:TollManoeuvreType" use="required" />
            <xsd:attribute name="routeListIndex" type="xsd:int" use="required" />
            <xsd:attribute name="time" type="xsd:string" use="optional" />
            <xsd:attribute name="tollLocationType" type="tns:InfoNodeType" use="required" />
            <xsd:attribute name="tollStationID" type="xsd:int" use="required" />
            <xsd:attribute name="tollStationName" type="xsd:string" use="optional" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfTollStationDescription">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="TollStationDescription" nillable="true" type="tns:TollStationDescription" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfTollStationDescription">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfTollStationDescription" nillable="true" type="tns:ArrayOfTollStationDescription" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="BoundingRectangle">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="leftBottom" nillable="true" type="ns0:Point" />
              <xsd:element minOccurs="0" maxOccurs="1" name="rightTop" nillable="true" type="ns0:Point" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfBoundingRectangle">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="BoundingRectangle" nillable="true" type="tns:BoundingRectangle" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfBoundingRectangle">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfBoundingRectangle" nillable="true" type="tns:ArrayOfBoundingRectangle" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="WayPoint">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="cenEmissions" nillable="true" type="tns:CENEmissionScenarios" />
              <xsd:element minOccurs="0" maxOccurs="1" name="emissions" nillable="true" type="tns:Emissions" />
              <xsd:element minOccurs="0" maxOccurs="1" name="locationCoord" nillable="true" type="ns0:Point" />
              <xsd:element minOccurs="0" maxOccurs="1" name="matchCoord" nillable="true" type="ns0:Point" />
            </xsd:sequence>
            <xsd:attribute name="accDist" type="xsd:int" use="required" />
            <xsd:attribute name="accTime" type="xsd:int" use="required" />
            <xsd:attribute name="countryCode" type="xsd:string" use="optional" />
            <xsd:attribute name="iuCode" type="xsd:int" use="required" />
            <xsd:attribute name="manoeuvreIdx" type="xsd:int" use="required" />
            <xsd:attribute name="nodeIdx" type="xsd:int" use="required" />
            <xsd:attribute name="polyIdx" type="xsd:int" use="required" />
            <xsd:attribute name="segmentIdx" type="xsd:int" use="required" />
            <xsd:attribute name="utcOffset" type="xsd:int" use="optional" />
            <xsd:attribute name="wayPointType" type="tns:WayPointType" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfWayPoint">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="WayPoint" nillable="true" type="tns:WayPoint" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfWayPoint">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfWayPoint" nillable="true" type="tns:ArrayOfWayPoint" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="WayPointType">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="START" />
          <xsd:enumeration value="VIA" />
          <xsd:enumeration value="DEST" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="ArrayOfWayPointType">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="WayPointType" type="tns:WayPointType" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfWayPointType">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfWayPointType" nillable="true" type="tns:ArrayOfWayPointType" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="RoadEditorOptions">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="SEGMENT_LENGTH" />
          <xsd:enumeration value="FERRY_LENGTH" />
          <xsd:enumeration value="IS_URBAN_AREA" />
          <xsd:enumeration value="FERRY_DURATION" />
          <xsd:enumeration value="IS_RAMP" />
          <xsd:enumeration value="VNORMAL" />
          <xsd:enumeration value="BLOCKS_CAR" />
          <xsd:enumeration value="BLOCKS_TRUCK" />
          <xsd:enumeration value="HAS_TOLL_CAR" />
          <xsd:enumeration value="HAS_TOLL_TRUCK" />
          <xsd:enumeration value="MAX_HEIGHT" />
          <xsd:enumeration value="MAX_WEIGHT" />
          <xsd:enumeration value="MAX_WIDTH" />
          <xsd:enumeration value="MAX_LENGTH" />
          <xsd:enumeration value="MAX_AXLE_LOAD" />
          <xsd:enumeration value="MAX_HEIGHT_DIR" />
          <xsd:enumeration value="MAX_WEIGHT_DIR" />
          <xsd:enumeration value="MAX_WIDTH_DIR" />
          <xsd:enumeration value="MAX_LENGTH_DIR" />
          <xsd:enumeration value="MAX_AXLE_LOAD_DIR" />
          <xsd:enumeration value="HAZARDOUS_TO_WATERS" />
          <xsd:enumeration value="HAZARDOUS_GOODS" />
          <xsd:enumeration value="COMBUSTIBLES" />
          <xsd:enumeration value="HEAVYLOAD" />
          <xsd:enumeration value="VIGNETTE" />
          <xsd:enumeration value="SCENIC_ROUTE_TYPE1" />
          <xsd:enumeration value="SCENIC_ROUTE_TYPE2" />
          <xsd:enumeration value="SCENIC_ROUTE_TYPE3" />
          <xsd:enumeration value="SCENIC_ROUTE_TYPE4" />
          <xsd:enumeration value="SCENIC_ROUTE_TYPE5" />
          <xsd:enumeration value="TRAILER" />
          <xsd:enumeration value="RESIDENTIAL_TRUCKS" />
          <xsd:enumeration value="DELIVERY_TRUCKS" />
          <xsd:enumeration value="PUBLIC_TRUCKS" />
          <xsd:enumeration value="PREFERRED_TRUCKS" />
          <xsd:enumeration value="PREFERRED_HAZARDOUS_TRUCKS" />
          <xsd:enumeration value="DIR_OPT_COND_MALUS1" />
          <xsd:enumeration value="DIR_OPT_COND_MALUS2" />
          <xsd:enumeration value="DIR_OPT_COND_MALUS3" />
          <xsd:enumeration value="DIR_OPT_COND_MALUS4" />
          <xsd:enumeration value="DIR_OPT_COND_MALUS5" />
          <xsd:enumeration value="DIR_OPT_COND_MALUS6" />
          <xsd:enumeration value="DIR_OPT_COND_MALUS7" />
          <xsd:enumeration value="DIR_OPT_COND_MALUS8" />
          <xsd:enumeration value="DIR_OPT_COND_MALUS9" />
          <xsd:enumeration value="DIR_OPT_COND_MALUS10" />
          <xsd:enumeration value="OPT_BLOCKS1" />
          <xsd:enumeration value="OPT_BLOCKS2" />
          <xsd:enumeration value="OPT_BLOCKS3" />
          <xsd:enumeration value="OPT_BLOCKS4" />
          <xsd:enumeration value="OPT_BLOCKS5" />
          <xsd:enumeration value="OPT_BLOCKS6" />
          <xsd:enumeration value="OPT_BLOCKS7" />
          <xsd:enumeration value="OPT_BLOCKS8" />
          <xsd:enumeration value="OPT_BLOCKS9" />
          <xsd:enumeration value="OPT_BLOCKS10" />
          <xsd:enumeration value="OPT_MALUS1" />
          <xsd:enumeration value="OPT_MALUS2" />
          <xsd:enumeration value="OPT_MALUS3" />
          <xsd:enumeration value="OPT_MALUS4" />
          <xsd:enumeration value="OPT_MALUS5" />
          <xsd:enumeration value="OPT_MALUS6" />
          <xsd:enumeration value="OPT_MALUS7" />
          <xsd:enumeration value="OPT_MALUS8" />
          <xsd:enumeration value="OPT_MALUS9" />
          <xsd:enumeration value="OPT_MALUS10" />
          <xsd:enumeration value="OPT_MALUS11" />
          <xsd:enumeration value="OPT_MALUS12" />
          <xsd:enumeration value="OPT_MALUS13" />
          <xsd:enumeration value="OPT_MALUS14" />
          <xsd:enumeration value="OPT_MALUS15" />
          <xsd:enumeration value="OPT_MALUS16" />
          <xsd:enumeration value="OPT_MALUS17" />
          <xsd:enumeration value="OPT_MALUS18" />
          <xsd:enumeration value="OPT_MALUS19" />
          <xsd:enumeration value="OPT_MALUS20" />
          <xsd:enumeration value="EXT_INFO" />
          <xsd:enumeration value="MAX_WEIGTH" />
          <xsd:enumeration value="HEAVY_LOAD" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="ArrayOfRoadEditorOptions">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="RoadEditorOptions" type="tns:RoadEditorOptions" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfRoadEditorOptions">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfRoadEditorOptions" nillable="true" type="tns:ArrayOfRoadEditorOptions" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="IsochroneDetail">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="POLYS_ONLY" />
          <xsd:enumeration value="SEGMENTS_ONLY" />
          <xsd:enumeration value="POLY_AND_SEGMENTS" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="ArrayOfIsochroneDetail">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="IsochroneDetail" type="tns:IsochroneDetail" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfIsochroneDetail">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfIsochroneDetail" nillable="true" type="tns:ArrayOfIsochroneDetail" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ReachInfo">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="branchNode" nillable="true" type="tns:UniqueGeoID" />
              <xsd:element minOccurs="0" maxOccurs="1" name="routeInfo" nillable="true" type="tns:RouteInfo" />
            </xsd:sequence>
            <xsd:attribute name="reachable" type="xsd:boolean" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfReachInfo">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ReachInfo" nillable="true" type="tns:ReachInfo" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfReachInfo">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfReachInfo" nillable="true" type="tns:ArrayOfReachInfo" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="IsochroneSegment">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence>
              <xsd:element minOccurs="1" maxOccurs="1" name="wrappedSegmentID" nillable="true" type="tns:ArrayOfUniqueGeoID" />
            </xsd:sequence>
            <xsd:attribute name="direction" type="xsd:boolean" use="required" />
            <xsd:attribute name="distOnSgm" type="xsd:int" use="required" />
            <xsd:attribute name="kumulDist" type="xsd:int" use="required" />
            <xsd:attribute name="kumulTime" type="xsd:int" use="required" />
            <xsd:attribute name="timeOnSgm" type="xsd:int" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfIsochroneSegment">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="IsochroneSegment" nillable="true" type="tns:IsochroneSegment" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfIsochroneSegment">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfIsochroneSegment" nillable="true" type="tns:ArrayOfIsochroneSegment" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="IsochroneInfo">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="isoSegments" nillable="true" type="tns:IsochroneSegment" />
              <xsd:element minOccurs="0" maxOccurs="1" name="polys" nillable="true" type="ns0:LineString" />
            </xsd:sequence>
            <xsd:attribute name="horizon" type="xsd:int" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfIsochroneInfo">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="IsochroneInfo" nillable="true" type="tns:IsochroneInfo" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfIsochroneInfo">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfIsochroneInfo" nillable="true" type="tns:ArrayOfIsochroneInfo" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="ExpansionType">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="EXP_TIME" />
          <xsd:enumeration value="EXP_DIST" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="ArrayOfExpansionType">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ExpansionType" type="tns:ExpansionType" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfExpansionType">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfExpansionType" nillable="true" type="tns:ArrayOfExpansionType" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="IsochroneOptions">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="expansionDesc" nillable="true" type="tns:ExpansionDescription" />
            </xsd:sequence>
            <xsd:attribute name="isoDetail" type="tns:IsochroneDetail" use="required" />
            <xsd:attribute name="polygonCalculationMode" type="tns:PolygonCalculationMode" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfIsochroneOptions">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="IsochroneOptions" nillable="true" type="tns:IsochroneOptions" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfIsochroneOptions">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfIsochroneOptions" nillable="true" type="tns:ArrayOfIsochroneOptions" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ExpansionDescription">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="wrappedHorizons" nillable="true" type="ns2:ArrayOfInt" />
            </xsd:sequence>
            <xsd:attribute name="expansionType" type="tns:ExpansionType" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfExpansionDescription">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ExpansionDescription" nillable="true" type="tns:ExpansionDescription" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfExpansionDescription">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfExpansionDescription" nillable="true" type="tns:ArrayOfExpansionDescription" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="Isochrone">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence>
              <xsd:element minOccurs="1" maxOccurs="1" name="wrappedIsochrones" nillable="true" type="tns:ArrayOfIsochroneInfo" />
            </xsd:sequence>
            <xsd:attribute name="additional" type="xsd:string" use="optional" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfIsochrone">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="Isochrone" nillable="true" type="tns:Isochrone" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfIsochrone">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfIsochrone" nillable="true" type="tns:ArrayOfIsochrone" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="Reach">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence>
              <xsd:element minOccurs="1" maxOccurs="1" name="wrappedReachInfo" nillable="true" type="tns:ArrayOfReachInfo" />
            </xsd:sequence>
            <xsd:attribute name="additional" type="xsd:string" use="optional" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfReach">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="Reach" nillable="true" type="tns:Reach" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfReach">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfReach" nillable="true" type="tns:ArrayOfReach" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ExtWayPoint">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:WayPoint">
            <xsd:sequence />
            <xsd:attribute name="exitAngle" type="xsd:int" use="required" />
            <xsd:attribute name="exitAngleNorth" type="xsd:int" use="required" />
            <xsd:attribute name="linkingDistance" type="xsd:int" use="required" />
            <xsd:attribute name="linkingRouteListSegmentIdx" type="xsd:int" use="required" />
            <xsd:attribute name="linkingTime" type="xsd:int" use="required" />
            <xsd:attribute name="manoeuvreDesc" type="xsd:string" use="optional" />
            <xsd:attribute name="manoeuvreType" type="tns:ManoeuvreType" use="required" />
            <xsd:attribute name="turnOrient" type="tns:TurnOrient" use="required" />
            <xsd:attribute name="turnWeight" type="tns:TurnWeight" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfExtWayPoint">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ExtWayPoint" nillable="true" type="tns:ExtWayPoint" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfExtWayPoint">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfExtWayPoint" nillable="true" type="tns:ArrayOfExtWayPoint" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="VehicleParameter">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="TYPE" />
          <xsd:enumeration value="TOTAL_WEIGHT" />
          <xsd:enumeration value="TRAILER_WEIGHT" />
          <xsd:enumeration value="AXLE_WEIGHT" />
          <xsd:enumeration value="NUMBER_OF_AXLES" />
          <xsd:enumeration value="EMISSION_CLASS" />
          <xsd:enumeration value="HEIGHT" />
          <xsd:enumeration value="LENGTH" />
          <xsd:enumeration value="WIDTH" />
          <xsd:enumeration value="CYLINDER_CAPACITY" />
          <xsd:enumeration value="NUMBER_OF_PASSENGERS" />
          <xsd:enumeration value="TRAILER_HAS_BREAKS" />
          <xsd:enumeration value="FUEL_TYPE" />
          <xsd:enumeration value="EMPTY_WEIGHT" />
          <xsd:enumeration value="EMISSION_TECHNOLOGY" />
          <xsd:enumeration value="LOAD_WEIGHT" />
          <xsd:enumeration value="AVERAGE_FUEL_CONSUMPTION" />
          <xsd:enumeration value="BIO_FUEL_RATIO" />
          <xsd:enumeration value="PARTICLE_FILTER_TYPE" />
          <xsd:enumeration value="HEIGHT_ABOVE_FRONT_AXLE" />
          <xsd:enumeration value="PARTICLE_REDUCTION_CLASS" />
          <xsd:enumeration value="YEAR_OF_MANUFACTURE" />
          <xsd:enumeration value="TUNNEL_RESTRICTION" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="ArrayOfVehicleParameter">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="VehicleParameter" type="tns:VehicleParameter" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfVehicleParameter">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfVehicleParameter" nillable="true" type="tns:ArrayOfVehicleParameter" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="VehicleOption">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence />
            <xsd:attribute name="parameter" type="tns:VehicleParameter" use="required" />
            <xsd:attribute name="value" type="xsd:string" use="optional" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfVehicleOption">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="VehicleOption" nillable="true" type="tns:VehicleOption" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfVehicleOption">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfVehicleOption" nillable="true" type="tns:ArrayOfVehicleOption" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="CountryInfoVehicleOptions">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:CountryInfoOptions">
            <xsd:sequence>
              <xsd:element minOccurs="1" maxOccurs="1" name="wrappedOptions" nillable="true" type="tns:ArrayOfVehicleOption" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfCountryInfoVehicleOptions">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="CountryInfoVehicleOptions" nillable="true" type="tns:CountryInfoVehicleOptions" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfCountryInfoVehicleOptions">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfCountryInfoVehicleOptions" nillable="true" type="tns:ArrayOfCountryInfoVehicleOptions" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="TourPointDesc">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:WaypointDesc">
            <xsd:sequence>
              <xsd:element minOccurs="1" maxOccurs="1" name="wrappedOpeningIntervals" nillable="true" type="tns:ArrayOfInterval" />
            </xsd:sequence>
            <xsd:attribute name="completeServiceInIntervals" type="xsd:boolean" use="required" />
            <xsd:attribute name="minUninterruptedServicePeriod" type="xsd:int" use="optional" />
            <xsd:attribute name="servicePeriod" type="xsd:int" use="required" />
            <xsd:attribute name="siteID" type="xsd:int" use="optional" />
            <xsd:attribute name="useServicePeriodForRecreation" type="xsd:boolean" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfTourPointDesc">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="TourPointDesc" nillable="true" type="tns:TourPointDesc" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfTourPointDesc">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfTourPointDesc" nillable="true" type="tns:ArrayOfTourPointDesc" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="Interval">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence />
            <xsd:attribute name="from" type="xsd:dateTime" use="optional" />
            <xsd:attribute name="till" type="xsd:dateTime" use="optional" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfInterval">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="Interval" nillable="true" type="tns:Interval" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfInterval">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfInterval" nillable="true" type="tns:ArrayOfInterval" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="TourPoint">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence />
            <xsd:attribute name="arrivalTime" type="xsd:int" use="required" />
            <xsd:attribute name="departureTime" type="xsd:int" use="required" />
            <xsd:attribute name="endOfService" type="xsd:int" use="required" />
            <xsd:attribute name="serviceViolation" type="xsd:boolean" use="required" />
            <xsd:attribute name="startOfService" type="xsd:int" use="required" />
            <xsd:attribute name="stationIdx" type="xsd:int" use="required" />
            <xsd:attribute name="timeWindowViolation" type="xsd:boolean" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfTourPoint">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="TourPoint" nillable="true" type="tns:TourPoint" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfTourPoint">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfTourPoint" nillable="true" type="tns:ArrayOfTourPoint" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="Tour">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:ExtendedRoute">
            <xsd:sequence>
              <xsd:element minOccurs="1" maxOccurs="1" name="wrappedTimeEvents" nillable="true" type="tns:ArrayOfTimeEvent" />
              <xsd:element minOccurs="1" maxOccurs="1" name="wrappedTourPoints" nillable="true" type="tns:ArrayOfTourPoint" />
              <xsd:element minOccurs="0" maxOccurs="1" name="tourSummary" nillable="true" type="tns:TourSummary" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfTour">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="Tour" nillable="true" type="tns:Tour" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfTour">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfTour" nillable="true" type="tns:ArrayOfTour" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="TimeEvent">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence />
            <xsd:attribute name="period" type="xsd:int" use="required" />
            <xsd:attribute name="segmentIdx" type="xsd:int" use="required" />
            <xsd:attribute name="startTime" type="xsd:int" use="required" />
            <xsd:attribute name="tourPointIdx" type="xsd:int" use="required" />
            <xsd:attribute name="type" type="tns:TimeEventType" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfTimeEvent">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="TimeEvent" nillable="true" type="tns:TimeEvent" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfTimeEvent">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfTimeEvent" nillable="true" type="tns:ArrayOfTimeEvent" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="TourSummary">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence />
            <xsd:attribute name="drivingPeriod" type="xsd:int" use="required" />
            <xsd:attribute name="earliness" type="xsd:int" use="required" />
            <xsd:attribute name="idlePeriod" type="xsd:int" use="required" />
            <xsd:attribute name="latestTourStart" type="xsd:dateTime" use="optional" />
            <xsd:attribute name="remainingBreakPeriod" type="xsd:int" use="optional" />
            <xsd:attribute name="remainingDrivingTimeBeforeNextBreak" type="xsd:int" use="optional" />
            <xsd:attribute name="remainingShiftPeriod" type="xsd:int" use="optional" />
            <xsd:attribute name="remainingWorkingHoursDuringShift" type="xsd:int" use="optional" />
            <xsd:attribute name="servicePeriod" type="xsd:int" use="required" />
            <xsd:attribute name="totalPeriod" type="xsd:int" use="required" />
            <xsd:attribute name="waitingPeriod" type="xsd:int" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfTourSummary">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="TourSummary" nillable="true" type="tns:TourSummary" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfTourSummary">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfTourSummary" nillable="true" type="tns:ArrayOfTourSummary" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="TimeEventType">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="DRIVING" />
          <xsd:enumeration value="WAITING" />
          <xsd:enumeration value="SERVICE" />
          <xsd:enumeration value="IDLE" />
          <xsd:enumeration value="EXTENDED_IDLE" />
          <xsd:enumeration value="BREAK_ON_ROAD" />
          <xsd:enumeration value="BREAK_AT_STOP" />
          <xsd:enumeration value="BREAK_AT_STOP_WHILE_SERVICE" />
          <xsd:enumeration value="BREAK_AT_STOP_SERVICE_ON_IDLE" />
          <xsd:enumeration value="BREAK_ON_IDLE" />
          <xsd:enumeration value="SERVICE_ON_IDLE" />
          <xsd:enumeration value="REST_ON_ROAD" />
          <xsd:enumeration value="REST_AT_STOP" />
          <xsd:enumeration value="REST_AT_STOP_WHILE_SERVICE" />
          <xsd:enumeration value="INTERMEDIATE" />
          <xsd:enumeration value="BREAK_AT_INTERMEDIATE" />
          <xsd:enumeration value="TOUR_START" />
          <xsd:enumeration value="TOUR_END" />
          <xsd:enumeration value="DISTURBANCE" />
          <xsd:enumeration value="REST_AT_INTERMEDIATE" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="ArrayOfTimeEventType">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="TimeEventType" type="tns:TimeEventType" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfTimeEventType">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfTimeEventType" nillable="true" type="tns:ArrayOfTimeEventType" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="EmissionLevel">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="NONE" />
          <xsd:enumeration value="BASIC" />
          <xsd:enumeration value="SEGMENTS" />
          <xsd:enumeration value="STATIONS" />
          <xsd:enumeration value="ALL" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="ArrayOfEmissionLevel">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="EmissionLevel" type="tns:EmissionLevel" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfEmissionLevel">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfEmissionLevel" nillable="true" type="tns:ArrayOfEmissionLevel" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="Emissions">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence />
            <xsd:attribute name="ammonia" type="xsd:double" use="required" />
            <xsd:attribute name="benzene" type="xsd:double" use="required" />
            <xsd:attribute name="carbonDioxide" type="xsd:double" use="required" />
            <xsd:attribute name="carbonMonoxide" type="xsd:double" use="required" />
            <xsd:attribute name="fuel" type="xsd:double" use="required" />
            <xsd:attribute name="hydrocarbons" type="xsd:double" use="required" />
            <xsd:attribute name="hydrocarbonsExMethane" type="xsd:double" use="required" />
            <xsd:attribute name="lead" type="xsd:double" use="required" />
            <xsd:attribute name="methane" type="xsd:double" use="required" />
            <xsd:attribute name="nitrogenOxides" type="xsd:double" use="required" />
            <xsd:attribute name="nitrousOxide" type="xsd:double" use="required" />
            <xsd:attribute name="particles" type="xsd:double" use="required" />
            <xsd:attribute name="sulphurDioxide" type="xsd:double" use="required" />
            <xsd:attribute name="toluene" type="xsd:double" use="required" />
            <xsd:attribute name="xylene" type="xsd:double" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfEmissions">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="Emissions" nillable="true" type="tns:Emissions" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfEmissions">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfEmissions" nillable="true" type="tns:ArrayOfEmissions" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="EmissionType">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence />
            <xsd:attribute name="emissionLevel" type="tns:EmissionLevel" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfEmissionType">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="EmissionType" nillable="true" type="tns:EmissionType" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfEmissionType">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfEmissionType" nillable="true" type="tns:ArrayOfEmissionType" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="CommuterTravelTrend">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence />
            <xsd:attribute name="departureTime" type="xsd:dateTime" use="optional" />
            <xsd:attribute name="travelTime" type="xsd:int" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfCommuterTravelTrend">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="CommuterTravelTrend" nillable="true" type="tns:CommuterTravelTrend" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfCommuterTravelTrend">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfCommuterTravelTrend" nillable="true" type="tns:ArrayOfCommuterTravelTrend" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="NormSpeedType">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="FREE_FLOW" />
          <xsd:enumeration value="MAX_DYNAMIC" />
          <xsd:enumeration value="STATIC" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="ArrayOfNormSpeedType">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="NormSpeedType" type="tns:NormSpeedType" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfNormSpeedType">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfNormSpeedType" nillable="true" type="tns:ArrayOfNormSpeedType" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="NormSpeed">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence />
            <xsd:attribute name="normSpeed" type="xsd:int" use="required" />
            <xsd:attribute name="normSpeedType" type="tns:NormSpeedType" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfNormSpeed">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="NormSpeed" nillable="true" type="tns:NormSpeed" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfNormSpeed">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfNormSpeed" nillable="true" type="tns:ArrayOfNormSpeed" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ReachableObjectsOptions">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="wrappedAdditionalObjects" nillable="true" type="tns:ArrayOfReachableObjectDescr" />
              <xsd:element minOccurs="0" maxOccurs="1" name="expansionDesc" nillable="true" type="tns:ExpansionDescription" />
            </xsd:sequence>
            <xsd:attribute name="boundingBoxCount" type="xsd:int" use="optional" />
            <xsd:attribute name="geodatasourceLayer" type="xsd:string" use="optional" />
            <xsd:attribute name="linkType" type="tns:LinkType" use="required" />
            <xsd:attribute name="routingDirection" type="tns:RoutingDirectionType" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfReachableObjectsOptions">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ReachableObjectsOptions" nillable="true" type="tns:ReachableObjectsOptions" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfReachableObjectsOptions">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfReachableObjectsOptions" nillable="true" type="tns:ArrayOfReachableObjectsOptions" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ReachableObjects">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="wrappedReachableObject" nillable="true" type="tns:ArrayOfReachableObject" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfReachableObjects">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ReachableObjects" nillable="true" type="tns:ReachableObjects" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfReachableObjects">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfReachableObjects" nillable="true" type="tns:ArrayOfReachableObjects" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ReachableObject">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="branchNode" nillable="true" type="tns:UniqueGeoID" />
              <xsd:element minOccurs="0" maxOccurs="1" name="object" nillable="true" type="tns:ReachableObjectDescr" />
              <xsd:element minOccurs="0" maxOccurs="1" name="routeInfo" nillable="true" type="tns:RouteInfo" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfReachableObject">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ReachableObject" nillable="true" type="tns:ReachableObject" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfReachableObject">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfReachableObject" nillable="true" type="tns:ArrayOfReachableObject" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ReachableObjectDescr">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="coord" nillable="true" type="ns0:Point" />
            </xsd:sequence>
            <xsd:attribute name="id" type="xsd:string" use="optional" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfReachableObjectDescr">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ReachableObjectDescr" nillable="true" type="tns:ReachableObjectDescr" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfReachableObjectDescr">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfReachableObjectDescr" nillable="true" type="tns:ArrayOfReachableObjectDescr" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="RoutingDirectionType">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="FORWARD" />
          <xsd:enumeration value="BACKWARD" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="ArrayOfRoutingDirectionType">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="RoutingDirectionType" type="tns:RoutingDirectionType" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfRoutingDirectionType">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfRoutingDirectionType" nillable="true" type="tns:ArrayOfRoutingDirectionType" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="EmissionsHBEFA31">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:Emissions">
            <xsd:sequence />
            <xsd:attribute name="fossilCarbonDioxide" type="xsd:double" use="required" />
            <xsd:attribute name="nitrogenDioxide" type="xsd:double" use="required" />
            <xsd:attribute name="particleNumber" type="xsd:double" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfEmissionsHBEFA31">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="EmissionsHBEFA31" nillable="true" type="tns:EmissionsHBEFA31" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfEmissionsHBEFA31">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfEmissionsHBEFA31" nillable="true" type="tns:ArrayOfEmissionsHBEFA31" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="HBEFAVersion">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="HBEFA_2_1" />
          <xsd:enumeration value="HBEFA_3_1" />
          <xsd:enumeration value="NO_HBEFA" />
          <xsd:enumeration value="HBEFA_3_2" />
          <xsd:enumeration value="COPERT_AUS_1_2" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="ArrayOfHBEFAVersion">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="HBEFAVersion" type="tns:HBEFAVersion" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfHBEFAVersion">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfHBEFAVersion" nillable="true" type="tns:ArrayOfHBEFAVersion" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="HBEFAType">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence />
            <xsd:attribute name="version" type="tns:HBEFAVersion" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfHBEFAType">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="HBEFAType" nillable="true" type="tns:HBEFAType" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfHBEFAType">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfHBEFAType" nillable="true" type="tns:ArrayOfHBEFAType" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ViaType">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence />
            <xsd:attribute name="viaType" type="tns:ViaTypeEnum" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfViaType">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ViaType" nillable="true" type="tns:ViaType" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfViaType">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfViaType" nillable="true" type="tns:ArrayOfViaType" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="ViaTypeEnum">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="VIA" />
          <xsd:enumeration value="VIA_STOP" />
          <xsd:enumeration value="FUZZY" />
          <xsd:enumeration value="COMBINED_TRANSPORT" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="ArrayOfViaTypeEnum">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ViaTypeEnum" type="tns:ViaTypeEnum" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfViaTypeEnum">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfViaTypeEnum" nillable="true" type="tns:ArrayOfViaTypeEnum" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="TollScenario">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence />
            <xsd:attribute name="iuCode" type="xsd:int" use="required" />
            <xsd:attribute name="scenarioId" type="xsd:int" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfTollScenario">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="TollScenario" nillable="true" type="tns:TollScenario" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfTollScenario">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfTollScenario" nillable="true" type="tns:ArrayOfTollScenario" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="TollManoeuvreType">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="ENTER" />
          <xsd:enumeration value="EXIT" />
          <xsd:enumeration value="FURTHER" />
          <xsd:enumeration value="CHANGE" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="ArrayOfTollManoeuvreType">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="TollManoeuvreType" type="tns:TollManoeuvreType" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfTollManoeuvreType">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfTollManoeuvreType" nillable="true" type="tns:ArrayOfTollManoeuvreType" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="PartTollCosts">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="wrappedCosts" nillable="true" type="tns:ArrayOfTollCost" />
            </xsd:sequence>
            <xsd:attribute name="distance" type="xsd:int" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfPartTollCosts">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="PartTollCosts" nillable="true" type="tns:PartTollCosts" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfPartTollCosts">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfPartTollCosts" nillable="true" type="tns:ArrayOfPartTollCosts" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="TollCost">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence />
            <xsd:attribute name="cost" type="xsd:int" use="required" />
            <xsd:attribute name="currency" type="tns:Currency" use="required" />
            <xsd:attribute name="currencyISOCode" type="xsd:string" use="optional" />
            <xsd:attribute name="currencyName" type="xsd:string" use="optional" />
            <xsd:attribute name="iuCode" type="xsd:int" use="required" />
            <xsd:attribute name="type" type="tns:TollType" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfTollCost">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="TollCost" nillable="true" type="tns:TollCost" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfTollCost">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfTollCost" nillable="true" type="tns:ArrayOfTollCost" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="RoutingOption">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence />
            <xsd:attribute name="parameter" type="tns:RoutingParameter" use="required" />
            <xsd:attribute name="value" type="xsd:string" use="optional" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfRoutingOption">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="RoutingOption" nillable="true" type="tns:RoutingOption" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfRoutingOption">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfRoutingOption" nillable="true" type="tns:ArrayOfRoutingOption" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="CENEmissions2011">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:CENEmissions">
            <xsd:sequence />
            <xsd:attribute name="co2Tank2Wheel" type="xsd:double" use="required" />
            <xsd:attribute name="co2Well2Wheel" type="xsd:double" use="required" />
            <xsd:attribute name="energyUseTank2Wheel" type="xsd:double" use="required" />
            <xsd:attribute name="energyUseWell2Wheel" type="xsd:double" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfCENEmissions2011">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="CENEmissions2011" nillable="true" type="tns:CENEmissions2011" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfCENEmissions2011">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfCENEmissions2011" nillable="true" type="tns:ArrayOfCENEmissions2011" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="CENEmissionScenarios">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="actualFuelConsumption" nillable="true" type="tns:CENEmissions" />
              <xsd:element minOccurs="0" maxOccurs="1" name="basedOnHBEFA" nillable="true" type="tns:CENEmissions" />
              <xsd:element minOccurs="0" maxOccurs="1" name="fleetSpecific" nillable="true" type="tns:CENEmissions" />
              <xsd:element minOccurs="0" maxOccurs="1" name="routeSpecific" nillable="true" type="tns:CENEmissions" />
              <xsd:element minOccurs="0" maxOccurs="1" name="vehicleSpecific" nillable="true" type="tns:CENEmissions" />
              <xsd:element minOccurs="0" maxOccurs="1" name="wrappedVehicleSpecificConversionFactors" nillable="true" type="tns:ArrayOfCENEmissionConversionFactors" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfCENEmissionScenarios">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="CENEmissionScenarios" nillable="true" type="tns:CENEmissionScenarios" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfCENEmissionScenarios">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfCENEmissionScenarios" nillable="true" type="tns:ArrayOfCENEmissionScenarios" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="CENEmissionConfiguration">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence />
            <xsd:attribute name="actualFuelConsumptionForThisRoute" type="xsd:double" use="optional" />
            <xsd:attribute name="cenVersion" type="tns:CENVersion" use="required" />
            <xsd:attribute name="fleetSpecificAverageFuelConsumption" type="xsd:double" use="optional" />
            <xsd:attribute name="routeSpecificAverageFuelConsumption" type="xsd:double" use="optional" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfCENEmissionConfiguration">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="CENEmissionConfiguration" nillable="true" type="tns:CENEmissionConfiguration" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfCENEmissionConfiguration">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfCENEmissionConfiguration" nillable="true" type="tns:ArrayOfCENEmissionConfiguration" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="CENVersion">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="CEN_2011" />
          <xsd:enumeration value="CEN_2012" />
          <xsd:enumeration value="CO2_DECREE_FRANCE_2011" />
          <xsd:enumeration value="CO2E_DECREE_FRANCE_2017" />
          <xsd:enumeration value="AUSTRALIA_NGA_2011" />
          <xsd:enumeration value="UK_DEFRA_2014" />
          <xsd:enumeration value="AUSTRALIA_NGA_2015" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="ArrayOfCENVersion">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="CENVersion" type="tns:CENVersion" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfCENVersion">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfCENVersion" nillable="true" type="tns:ArrayOfCENVersion" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="CENEmissions" abstract="true">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfCENEmissions">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="CENEmissions" nillable="true" type="tns:CENEmissions" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfCENEmissions">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfCENEmissions" nillable="true" type="tns:ArrayOfCENEmissions" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="TollTotals">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence />
            <xsd:attribute name="cost" type="xsd:int" use="required" />
            <xsd:attribute name="distance" type="xsd:int" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfTollTotals">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="TollTotals" nillable="true" type="tns:TollTotals" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfTollTotals">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfTollTotals" nillable="true" type="tns:ArrayOfTollTotals" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="BulkRouteInfo">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="wrappedBulkRouteInfoResult" nillable="true" type="tns:ArrayOfBulkRouteInfoResult" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfBulkRouteInfo">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="BulkRouteInfo" nillable="true" type="tns:BulkRouteInfo" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfBulkRouteInfo">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfBulkRouteInfo" nillable="true" type="tns:ArrayOfBulkRouteInfo" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="BulkRouteInfoResult">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="routeInfo" nillable="true" type="tns:RouteInfo" />
            </xsd:sequence>
            <xsd:attribute name="errorCode" type="tns:ErrorCode" use="required" />
            <xsd:attribute name="errorDescription" type="xsd:string" use="optional" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfBulkRouteInfoResult">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="BulkRouteInfoResult" nillable="true" type="tns:BulkRouteInfoResult" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfBulkRouteInfoResult">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfBulkRouteInfoResult" nillable="true" type="tns:ArrayOfBulkRouteInfoResult" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="SpeedLimit">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence />
            <xsd:attribute name="condition" type="xsd:string" use="optional" />
            <xsd:attribute name="limitVelocity" type="xsd:int" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfSpeedLimit">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="SpeedLimit" nillable="true" type="tns:SpeedLimit" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfSpeedLimit">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfSpeedLimit" nillable="true" type="tns:ArrayOfSpeedLimit" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="SpeedLimits">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="wrappedSpeedLimit" nillable="true" type="tns:ArrayOfSpeedLimit" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfSpeedLimits">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="SpeedLimits" nillable="true" type="tns:SpeedLimits" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfSpeedLimits">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfSpeedLimits" nillable="true" type="tns:ArrayOfSpeedLimits" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="PolygonCalculationMode">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="NODE_BASED" />
          <xsd:enumeration value="TILE_BASED" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="ArrayOfPolygonCalculationMode">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="PolygonCalculationMode" type="tns:PolygonCalculationMode" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfPolygonCalculationMode">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfPolygonCalculationMode" nillable="true" type="tns:ArrayOfPolygonCalculationMode" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="CENEmissionConversionFactors">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="conversionFactors" nillable="true" type="tns:CENEmissions" />
            </xsd:sequence>
            <xsd:attribute name="biofuelPercent" type="xsd:int" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfCENEmissionConversionFactors">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="CENEmissionConversionFactors" nillable="true" type="tns:CENEmissionConversionFactors" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfCENEmissionConversionFactors">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfCENEmissionConversionFactors" nillable="true" type="tns:ArrayOfCENEmissionConversionFactors" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="TourOptions">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="driverSettings" nillable="true" type="tns:DriverSettings" />
              <xsd:element minOccurs="0" maxOccurs="1" name="wrappedOperatingIntervals" nillable="true" type="tns:ArrayOfInterval" />
              <xsd:element minOccurs="0" maxOccurs="1" name="regulations" nillable="true" type="tns:RegulationsBase" />
              <xsd:element minOccurs="0" maxOccurs="1" name="tourRestrictions" nillable="true" type="tns:TourRestrictions" />
            </xsd:sequence>
            <xsd:attribute name="restrictToSingleOperatingInterval" type="xsd:boolean" use="required" />
            <xsd:attribute name="startIntervalLength" type="xsd:int" use="optional" />
            <xsd:attribute name="useCase" type="xsd:string" use="optional" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfTourOptions">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="TourOptions" nillable="true" type="tns:TourOptions" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfTourOptions">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfTourOptions" nillable="true" type="tns:ArrayOfTourOptions" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="AdvancedTour">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:ExtendedRoute">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="recreationPeriods" nillable="true" type="tns:RecreationPeriods" />
              <xsd:element minOccurs="0" maxOccurs="1" name="wrappedTourEvents" nillable="true" type="tns:ArrayOfTourEvent" />
              <xsd:element minOccurs="0" maxOccurs="1" name="wrappedTourPointResults" nillable="true" type="tns:ArrayOfTourPointResult" />
            </xsd:sequence>
            <xsd:attribute name="defermentPotential" type="xsd:int" use="required" />
            <xsd:attribute name="genuineWaitingPeriod" type="xsd:int" use="required" />
            <xsd:attribute name="isViolated" type="xsd:boolean" use="required" />
            <xsd:attribute name="remainingPeriods" type="xsd:string" use="optional" />
            <xsd:attribute name="startTime" type="xsd:dateTime" use="optional" />
            <xsd:attribute name="tourPeriod" type="xsd:int" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfAdvancedTour">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="AdvancedTour" nillable="true" type="tns:AdvancedTour" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfAdvancedTour">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfAdvancedTour" nillable="true" type="tns:ArrayOfAdvancedTour" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="TourEvent">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="wrappedDescriptions" nillable="true" type="ns2:ArrayOfString" />
              <xsd:element minOccurs="0" maxOccurs="1" name="wrappedViolations" nillable="true" type="ns2:ArrayOfString" />
            </xsd:sequence>
            <xsd:attribute name="period" type="xsd:int" use="required" />
            <xsd:attribute name="segmentIndex" type="xsd:int" use="required" />
            <xsd:attribute name="startTime" type="xsd:dateTime" use="optional" />
            <xsd:attribute name="tourPointIndex" type="xsd:int" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfTourEvent">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="TourEvent" nillable="true" type="tns:TourEvent" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfTourEvent">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfTourEvent" nillable="true" type="tns:ArrayOfTourEvent" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="TourEventDescription">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="DRIVING" />
          <xsd:enumeration value="SERVICE" />
          <xsd:enumeration value="WAITING" />
          <xsd:enumeration value="NOT_OPERATING" />
          <xsd:enumeration value="BREAK" />
          <xsd:enumeration value="DAILY_REST" />
          <xsd:enumeration value="WEEKLY_REST" />
          <xsd:enumeration value="IS_IN_SERVICE_INTERVAL" />
          <xsd:enumeration value="WORKING" />
          <xsd:enumeration value="WORKING_BREAK" />
          <xsd:enumeration value="WORKING_REST" />
          <xsd:enumeration value="INTERVAL_BREAK" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="ArrayOfTourEventDescription">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="TourEventDescription" type="tns:TourEventDescription" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfTourEventDescription">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfTourEventDescription" nillable="true" type="tns:ArrayOfTourEventDescription" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="TourEventViolation">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="OPERATING_INTERVAL_VIOLATION" />
          <xsd:enumeration value="SERVICE_INTERVAL_VIOLATION" />
          <xsd:enumeration value="MAXIMUM_TOUR_PERIOD_VIOLATION" />
          <xsd:enumeration value="TRANSPORT_PERIOD_VIOLATION" />
          <xsd:enumeration value="REGULATION_VIOLATION" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="ArrayOfTourEventViolation">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="TourEventViolation" type="tns:TourEventViolation" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfTourEventViolation">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfTourEventViolation" nillable="true" type="tns:ArrayOfTourEventViolation" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="TourPointResult">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="recreationPeriodsAtTourPoint" nillable="true" type="tns:RecreationPeriods" />
              <xsd:element minOccurs="0" maxOccurs="1" name="recreationPeriodsOnRoad" nillable="true" type="tns:RecreationPeriods" />
            </xsd:sequence>
            <xsd:attribute name="arrivalTime" type="xsd:dateTime" use="optional" />
            <xsd:attribute name="departureTime" type="xsd:dateTime" use="optional" />
            <xsd:attribute name="endServiceTime" type="xsd:dateTime" use="optional" />
            <xsd:attribute name="genuineWaitingPeriod" type="xsd:int" use="required" />
            <xsd:attribute name="startServiceTime" type="xsd:dateTime" use="optional" />
            <xsd:attribute name="stationIndex" type="xsd:int" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfTourPointResult">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="TourPointResult" nillable="true" type="tns:TourPointResult" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfTourPointResult">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfTourPointResult" nillable="true" type="tns:ArrayOfTourPointResult" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="RecreationPeriods">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence />
            <xsd:attribute name="breakPeriod" type="xsd:int" use="required" />
            <xsd:attribute name="dailyRestPeriod" type="xsd:int" use="required" />
            <xsd:attribute name="weeklyRestPeriod" type="xsd:int" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfRecreationPeriods">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="RecreationPeriods" nillable="true" type="tns:RecreationPeriods" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfRecreationPeriods">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfRecreationPeriods" nillable="true" type="tns:ArrayOfRecreationPeriods" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="TransportPeriodRestriction">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence />
            <xsd:attribute name="destinationTourPointIndex" type="xsd:int" use="required" />
            <xsd:attribute name="maxPeriodBetweenServices" type="xsd:int" use="required" />
            <xsd:attribute name="startTourPointIndex" type="xsd:int" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfTransportPeriodRestriction">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="TransportPeriodRestriction" nillable="true" type="tns:TransportPeriodRestriction" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfTransportPeriodRestriction">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfTransportPeriodRestriction" nillable="true" type="tns:ArrayOfTransportPeriodRestriction" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="Route">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence>
              <xsd:element minOccurs="1" maxOccurs="1" name="wrappedBoundingRectangles" nillable="true" type="tns:ArrayOfBoundingRectangle" />
              <xsd:element minOccurs="0" maxOccurs="1" name="cenEmissions" nillable="true" type="tns:CENEmissionScenarios" />
              <xsd:element minOccurs="0" maxOccurs="1" name="dynamicInfo" nillable="true" type="tns:DynamicInfo" />
              <xsd:element minOccurs="0" maxOccurs="1" name="emissions" nillable="true" type="tns:Emissions" />
              <xsd:element minOccurs="0" maxOccurs="1" name="info" nillable="true" type="tns:RouteInfo" />
              <xsd:element minOccurs="1" maxOccurs="1" name="wrappedManoeuvreGroup" nillable="true" type="tns:ArrayOfManoeuvreGroup" />
              <xsd:element minOccurs="1" maxOccurs="1" name="wrappedManoeuvres" nillable="true" type="tns:ArrayOfRouteManoeuvre" />
              <xsd:element minOccurs="1" maxOccurs="1" name="wrappedNodes" nillable="true" type="tns:ArrayOfUniqueGeoID" />
              <xsd:element minOccurs="0" maxOccurs="1" name="polygon" nillable="true" type="ns0:LineString" />
              <xsd:element minOccurs="1" maxOccurs="1" name="wrappedSegments" nillable="true" type="tns:ArrayOfRouteListSegment" />
              <xsd:element minOccurs="1" maxOccurs="1" name="wrappedStations" nillable="true" type="tns:ArrayOfWayPoint" />
              <xsd:element minOccurs="1" maxOccurs="1" name="wrappedTexts" nillable="true" type="ns2:ArrayOfString" />
              <xsd:element minOccurs="0" maxOccurs="1" name="totalRectangle" nillable="true" type="tns:BoundingRectangle" />
              <xsd:element minOccurs="0" maxOccurs="1" name="vehicleRelatedEmissions" nillable="true" type="tns:Emissions" />
            </xsd:sequence>
            <xsd:attribute name="binaryPathDesc" type="xsd:string" use="optional" />
            <xsd:attribute name="extSegments" type="xsd:string" use="optional" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfRoute">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="Route" nillable="true" type="tns:Route" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfRoute">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfRoute" nillable="true" type="tns:ArrayOfRoute" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="TourRestrictions">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="wrappedTransportPeriodRestrictions" nillable="true" type="tns:ArrayOfTransportPeriodRestriction" />
            </xsd:sequence>
            <xsd:attribute name="maxTourPeriod" type="xsd:int" use="optional" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfTourRestrictions">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="TourRestrictions" nillable="true" type="tns:TourRestrictions" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfTourRestrictions">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfTourRestrictions" nillable="true" type="tns:ArrayOfTourRestrictions" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="BreakIntervals">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="wrappedIntervals" nillable="true" type="tns:ArrayOfInterval" />
            </xsd:sequence>
            <xsd:attribute name="breakPeriod" type="xsd:int" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfBreakIntervals">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="BreakIntervals" nillable="true" type="tns:BreakIntervals" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfBreakIntervals">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfBreakIntervals" nillable="true" type="tns:ArrayOfBreakIntervals" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="CO2DecreeFrance2011">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:CENEmissions">
            <xsd:sequence />
            <xsd:attribute name="co2Well2Tank" type="xsd:double" use="required" />
            <xsd:attribute name="co2Well2Wheel" type="xsd:double" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfCO2DecreeFrance2011">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="CO2DecreeFrance2011" nillable="true" type="tns:CO2DecreeFrance2011" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfCO2DecreeFrance2011">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfCO2DecreeFrance2011" nillable="true" type="tns:ArrayOfCO2DecreeFrance2011" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="AustraliaNGA2011">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:CENEmissions">
            <xsd:sequence />
            <xsd:attribute name="ch4Tank2Wheel" type="xsd:double" use="required" />
            <xsd:attribute name="co2Tank2Wheel" type="xsd:double" use="required" />
            <xsd:attribute name="co2eTank2Wheel" type="xsd:double" use="required" />
            <xsd:attribute name="co2eWell2Tank" type="xsd:double" use="optional" />
            <xsd:attribute name="energyUseTank2Wheel" type="xsd:double" use="required" />
            <xsd:attribute name="fuelConsumption" type="xsd:double" use="required" />
            <xsd:attribute name="n2oTank2Wheel" type="xsd:double" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfAustraliaNGA2011">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="AustraliaNGA2011" nillable="true" type="tns:AustraliaNGA2011" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfAustraliaNGA2011">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfAustraliaNGA2011" nillable="true" type="tns:ArrayOfAustraliaNGA2011" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="DriverRegulations">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:RegulationsBase">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="breakIntervals" nillable="true" type="tns:BreakIntervals" />
              <xsd:element minOccurs="0" maxOccurs="1" name="breakRule" nillable="true" type="tns:BreakRule" />
              <xsd:element minOccurs="0" maxOccurs="1" name="dailyRestRule" nillable="true" type="tns:DailyRestRule" />
              <xsd:element minOccurs="0" maxOccurs="1" name="weeklyRestRule" nillable="true" type="tns:WeeklyRestRule" />
              <xsd:element minOccurs="0" maxOccurs="1" name="workingRule" nillable="true" type="tns:WorkingRule" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfDriverRegulations">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="DriverRegulations" nillable="true" type="tns:DriverRegulations" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfDriverRegulations">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfDriverRegulations" nillable="true" type="tns:ArrayOfDriverRegulations" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="RegulationsBase" abstract="true">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfRegulationsBase">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="RegulationsBase" nillable="true" type="tns:RegulationsBase" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfRegulationsBase">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfRegulationsBase" nillable="true" type="tns:ArrayOfRegulationsBase" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="DriverSettings">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence />
            <xsd:attribute name="breakRuleAUSDisabled" type="xsd:boolean" use="optional" />
            <xsd:attribute name="breakRuleDisabled" type="xsd:boolean" use="optional" />
            <xsd:attribute name="dailyRestRuleAUSDisabled" type="xsd:boolean" use="optional" />
            <xsd:attribute name="dailyRestRuleDisabled" type="xsd:boolean" use="optional" />
            <xsd:attribute name="remainingPeriods" type="xsd:string" use="optional" />
            <xsd:attribute name="weeklyRestRuleAUSDisabled" type="xsd:boolean" use="optional" />
            <xsd:attribute name="weeklyRestRuleDisabled" type="xsd:boolean" use="optional" />
            <xsd:attribute name="workingRuleDisabled" type="xsd:boolean" use="optional" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfDriverSettings">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="DriverSettings" nillable="true" type="tns:DriverSettings" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfDriverSettings">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfDriverSettings" nillable="true" type="tns:ArrayOfDriverSettings" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="BreakRule">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence />
            <xsd:attribute name="breakPeriod1" type="xsd:int" use="required" />
            <xsd:attribute name="breakPeriod2" type="xsd:int" use="required" />
            <xsd:attribute name="drivingPeriod" type="xsd:int" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfBreakRule">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="BreakRule" nillable="true" type="tns:BreakRule" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfBreakRule">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfBreakRule" nillable="true" type="tns:ArrayOfBreakRule" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="DailyRestRule">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence />
            <xsd:attribute name="extendedDrivingPeriod" type="xsd:int" use="required" />
            <xsd:attribute name="firstSplitRestPeriod" type="xsd:int" use="required" />
            <xsd:attribute name="maximumPeriodBetweenEndOfDailyRests" type="xsd:int" use="required" />
            <xsd:attribute name="numberOfExtendedDrivingPeriods" type="xsd:int" use="required" />
            <xsd:attribute name="numberOfReducedRestPeriods" type="xsd:int" use="required" />
            <xsd:attribute name="reducedRestPeriod" type="xsd:int" use="required" />
            <xsd:attribute name="regularDrivingPeriod" type="xsd:int" use="required" />
            <xsd:attribute name="regularRestPeriod" type="xsd:int" use="required" />
            <xsd:attribute name="secondSplitRestPeriod" type="xsd:int" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfDailyRestRule">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="DailyRestRule" nillable="true" type="tns:DailyRestRule" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfDailyRestRule">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfDailyRestRule" nillable="true" type="tns:ArrayOfDailyRestRule" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="WeeklyRestRule">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence />
            <xsd:attribute name="maximumBiweeklyDrivingPeriod" type="xsd:int" use="required" />
            <xsd:attribute name="maximumPeriodBetweenWeeklyRests" type="xsd:int" use="required" />
            <xsd:attribute name="maximumWeeklyDrivingPeriod" type="xsd:int" use="required" />
            <xsd:attribute name="weeklyRestPeriod" type="xsd:int" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfWeeklyRestRule">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="WeeklyRestRule" nillable="true" type="tns:WeeklyRestRule" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfWeeklyRestRule">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfWeeklyRestRule" nillable="true" type="tns:ArrayOfWeeklyRestRule" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="WorkingRule">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence />
            <xsd:attribute name="breakPeriod" type="xsd:int" use="required" />
            <xsd:attribute name="dailyRestPeriod" type="xsd:int" use="required" />
            <xsd:attribute name="extendedBreakPeriod" type="xsd:int" use="required" />
            <xsd:attribute name="maxWorkingPeriodPerWeek" type="xsd:int" use="required" />
            <xsd:attribute name="maxWorkingPeriodWithoutBreak" type="xsd:int" use="required" />
            <xsd:attribute name="maxWorkingPeriodWithoutDailyRest" type="xsd:int" use="required" />
            <xsd:attribute name="maxWorkingPeriodWithoutExtendedBreak" type="xsd:int" use="required" />
            <xsd:attribute name="minPartialBreakLength" type="xsd:int" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfWorkingRule">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="WorkingRule" nillable="true" type="tns:WorkingRule" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfWorkingRule">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfWorkingRule" nillable="true" type="tns:ArrayOfWorkingRule" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="FeatureDescription">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence />
            <xsd:attribute name="description" type="xsd:string" use="optional" />
            <xsd:attribute name="themeId" type="xsd:string" use="optional" />
            <xsd:attribute name="timeDomain" type="xsd:string" use="optional" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfFeatureDescription">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="FeatureDescription" nillable="true" type="tns:FeatureDescription" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfFeatureDescription">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfFeatureDescription" nillable="true" type="tns:ArrayOfFeatureDescription" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="EmissionsHBEFA32">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:Emissions">
            <xsd:sequence />
            <xsd:attribute name="fossilCarbonDioxide" type="xsd:double" use="required" />
            <xsd:attribute name="nitrogenDioxide" type="xsd:double" use="required" />
            <xsd:attribute name="particleNumber" type="xsd:double" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfEmissionsHBEFA32">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="EmissionsHBEFA32" nillable="true" type="tns:EmissionsHBEFA32" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfEmissionsHBEFA32">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfEmissionsHBEFA32" nillable="true" type="tns:ArrayOfEmissionsHBEFA32" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="DriverRegulationsAUS">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:RegulationsBase">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="breakRule" nillable="true" type="tns:BreakRuleAUS" />
              <xsd:element minOccurs="0" maxOccurs="1" name="dailyRestRule" nillable="true" type="tns:DailyRestRuleAUS" />
              <xsd:element minOccurs="0" maxOccurs="1" name="weeklyRestRule" nillable="true" type="tns:WeeklyRestRuleAUS" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfDriverRegulationsAUS">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="DriverRegulationsAUS" nillable="true" type="tns:DriverRegulationsAUS" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfDriverRegulationsAUS">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfDriverRegulationsAUS" nillable="true" type="tns:ArrayOfDriverRegulationsAUS" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="BreakRuleAUS">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence />
            <xsd:attribute name="breakPeriod" type="xsd:int" use="required" />
            <xsd:attribute name="observationPeriodForFourBreaks" type="xsd:int" use="required" />
            <xsd:attribute name="observationPeriodForOneBreak" type="xsd:int" use="required" />
            <xsd:attribute name="observationPeriodForTwoBreaks" type="xsd:int" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfBreakRuleAUS">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="BreakRuleAUS" nillable="true" type="tns:BreakRuleAUS" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfBreakRuleAUS">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfBreakRuleAUS" nillable="true" type="tns:ArrayOfBreakRuleAUS" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="DailyRestRuleAUS">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence />
            <xsd:attribute name="dailyRestPeriod" type="xsd:int" use="required" />
            <xsd:attribute name="maximumDailyWorkingPeriod" type="xsd:int" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfDailyRestRuleAUS">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="DailyRestRuleAUS" nillable="true" type="tns:DailyRestRuleAUS" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfDailyRestRuleAUS">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfDailyRestRuleAUS" nillable="true" type="tns:ArrayOfDailyRestRuleAUS" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="WeeklyRestRuleAUS">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence />
            <xsd:attribute name="maximumWeeklyWorkingPeriod" type="xsd:int" use="required" />
            <xsd:attribute name="weeklyRestPeriod" type="xsd:int" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfWeeklyRestRuleAUS">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="WeeklyRestRuleAUS" nillable="true" type="tns:WeeklyRestRuleAUS" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfWeeklyRestRuleAUS">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfWeeklyRestRuleAUS" nillable="true" type="tns:ArrayOfWeeklyRestRuleAUS" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="UKDefra2014">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:CENEmissions">
            <xsd:sequence />
            <xsd:attribute name="ch4Tank2Wheel" type="xsd:double" use="required" />
            <xsd:attribute name="co2Tank2Wheel" type="xsd:double" use="required" />
            <xsd:attribute name="co2eTank2Wheel" type="xsd:double" use="required" />
            <xsd:attribute name="co2eWell2Wheel" type="xsd:double" use="optional" />
            <xsd:attribute name="energyUseTank2Wheel" type="xsd:double" use="required" />
            <xsd:attribute name="n2oTank2Wheel" type="xsd:double" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfUKDefra2014">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="UKDefra2014" nillable="true" type="tns:UKDefra2014" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfUKDefra2014">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfUKDefra2014" nillable="true" type="tns:ArrayOfUKDefra2014" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="CENEmissions2012">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:CENEmissions">
            <xsd:sequence />
            <xsd:attribute name="co2eTank2Wheel" type="xsd:double" use="required" />
            <xsd:attribute name="co2eWell2Tank" type="xsd:double" use="required" />
            <xsd:attribute name="co2eWell2Wheel" type="xsd:double" use="required" />
            <xsd:attribute name="energyUseTank2Wheel" type="xsd:double" use="required" />
            <xsd:attribute name="energyUseWell2Tank" type="xsd:double" use="required" />
            <xsd:attribute name="energyUseWell2Wheel" type="xsd:double" use="required" />
            <xsd:attribute name="fuelConsumption" type="xsd:double" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfCENEmissions2012">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="CENEmissions2012" nillable="true" type="tns:CENEmissions2012" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfCENEmissions2012">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfCENEmissions2012" nillable="true" type="tns:ArrayOfCENEmissions2012" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="AustraliaNGA2015">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:CENEmissions">
            <xsd:sequence />
            <xsd:attribute name="ch4Tank2Wheel" type="xsd:double" use="required" />
            <xsd:attribute name="co2Tank2Wheel" type="xsd:double" use="required" />
            <xsd:attribute name="co2eTank2Wheel" type="xsd:double" use="required" />
            <xsd:attribute name="co2eWell2Tank" type="xsd:double" use="optional" />
            <xsd:attribute name="energyUseTank2Wheel" type="xsd:double" use="required" />
            <xsd:attribute name="fuelConsumption" type="xsd:double" use="required" />
            <xsd:attribute name="n2oTank2Wheel" type="xsd:double" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfAustraliaNGA2015">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="AustraliaNGA2015" nillable="true" type="tns:AustraliaNGA2015" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfAustraliaNGA2015">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfAustraliaNGA2015" nillable="true" type="tns:ArrayOfAustraliaNGA2015" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="CO2EDecreeFrance2017">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:CENEmissions">
            <xsd:sequence />
            <xsd:attribute name="co2eWell2Tank" type="xsd:double" use="required" />
            <xsd:attribute name="co2eWell2Wheel" type="xsd:double" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfCO2EDecreeFrance2017">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="CO2EDecreeFrance2017" nillable="true" type="tns:CO2EDecreeFrance2017" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfCO2EDecreeFrance2017">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfCO2EDecreeFrance2017" nillable="true" type="tns:ArrayOfCO2EDecreeFrance2017" />
        </xsd:sequence>
      </xsd:complexType>
    </xsd:schema>
    <xsd:schema xmlns:ns2="http://xroute.xserver.ptvag.com" xmlns:soap11-enc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:tns="http://types.xroute.xserver.ptvag.com" xmlns:ns1="http://xroute.xserver.ptvag.com" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns0="http://types.xroute.xserver.ptvag.com" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:common="http://common.xserver.ptvag.com" xmlns:ns3="http://baseservices.service.jabba.ptvag.com" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" elementFormDefault="qualified" targetNamespace="http://types.xroute.xserver.ptvag.com">
      <xsd:complexType name="calculateAdvancedTour">
        <xsd:sequence>
          <xsd:element name="ArrayOfWaypointDesc_1" nillable="true" type="ns2:ArrayOfWaypointDesc" />
          <xsd:element name="TourOptions_2" nillable="true" type="ns2:TourOptions" />
          <xsd:element name="ArrayOfRoutingOption_3" nillable="true" type="ns2:ArrayOfRoutingOption" />
          <xsd:element name="ArrayOfExceptionPath_4" nillable="true" type="ns2:ArrayOfExceptionPath" />
          <xsd:element name="ResultListOptions_5" nillable="true" type="ns2:ResultListOptions" />
          <xsd:element name="CountryInfoOptions_6" nillable="true" type="ns2:CountryInfoOptions" />
          <xsd:element name="CallerContext_7" nillable="true" type="ns3:CallerContext" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="calculateAdvancedTourResponse">
        <xsd:sequence>
          <xsd:element name="result" nillable="true" type="ns2:AdvancedTour" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="calculateBulkRouteInfo">
        <xsd:sequence>
          <xsd:element name="ArrayOfArrayOfWaypointDesc_1" nillable="true" type="ns2:ArrayOfArrayOfWaypointDesc" />
          <xsd:element name="ArrayOfRoutingOption_2" nillable="true" type="ns2:ArrayOfRoutingOption" />
          <xsd:element name="ArrayOfExceptionPath_3" nillable="true" type="ns2:ArrayOfExceptionPath" />
          <xsd:element name="CallerContext_4" nillable="true" type="ns3:CallerContext" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="calculateBulkRouteInfoResponse">
        <xsd:sequence>
          <xsd:element name="result" nillable="true" type="ns2:BulkRouteInfo" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="calculateExtendedRoute">
        <xsd:sequence>
          <xsd:element name="ArrayOfWaypointDesc_1" nillable="true" type="ns2:ArrayOfWaypointDesc" />
          <xsd:element name="ArrayOfRoutingOption_2" nillable="true" type="ns2:ArrayOfRoutingOption" />
          <xsd:element name="ArrayOfExceptionPath_3" nillable="true" type="ns2:ArrayOfExceptionPath" />
          <xsd:element name="ResultListOptions_4" nillable="true" type="ns2:ResultListOptions" />
          <xsd:element name="CountryInfoOptions_5" nillable="true" type="ns2:CountryInfoOptions" />
          <xsd:element name="CallerContext_6" nillable="true" type="ns3:CallerContext" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="calculateExtendedRouteResponse">
        <xsd:sequence>
          <xsd:element name="result" nillable="true" type="ns2:ExtendedRoute" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="calculateIsochrones">
        <xsd:sequence>
          <xsd:element name="WaypointDesc_1" nillable="true" type="ns2:WaypointDesc" />
          <xsd:element name="ArrayOfRoutingOption_2" nillable="true" type="ns2:ArrayOfRoutingOption" />
          <xsd:element name="IsochroneOptions_3" nillable="true" type="ns2:IsochroneOptions" />
          <xsd:element name="CallerContext_4" nillable="true" type="ns3:CallerContext" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="calculateIsochronesResponse">
        <xsd:sequence>
          <xsd:element name="result" nillable="true" type="ns2:Isochrone" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="calculateMatrixInfo">
        <xsd:sequence>
          <xsd:element name="ArrayOfWaypointDesc_1" nillable="true" type="ns2:ArrayOfWaypointDesc" />
          <xsd:element name="ArrayOfWaypointDesc_2" nillable="true" type="ns2:ArrayOfWaypointDesc" />
          <xsd:element name="ArrayOfRoutingOption_3" nillable="true" type="ns2:ArrayOfRoutingOption" />
          <xsd:element name="MatrixOptions_4" nillable="true" type="ns2:MatrixOptions" />
          <xsd:element name="CallerContext_5" nillable="true" type="ns3:CallerContext" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="calculateMatrixInfoResponse">
        <xsd:sequence>
          <xsd:element name="result" nillable="true" type="ns2:MatrixInfo" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="calculateReachableObjects">
        <xsd:sequence>
          <xsd:element name="WaypointDesc_1" nillable="true" type="ns2:WaypointDesc" />
          <xsd:element name="String_2" nillable="true" type="xsd:string" />
          <xsd:element name="ArrayOfWaypointDesc_3" nillable="true" type="ns2:ArrayOfWaypointDesc" />
          <xsd:element name="ArrayOfRoutingOption_4" nillable="true" type="ns2:ArrayOfRoutingOption" />
          <xsd:element name="ExpansionDescription_5" nillable="true" type="ns2:ExpansionDescription" />
          <xsd:element name="CallerContext_6" nillable="true" type="ns3:CallerContext" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="calculateReachableObjectsResponse">
        <xsd:sequence>
          <xsd:element name="result" nillable="true" type="ns2:Reach" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="calculateRoute">
        <xsd:sequence>
          <xsd:element name="ArrayOfWaypointDesc_1" nillable="true" type="ns2:ArrayOfWaypointDesc" />
          <xsd:element name="ArrayOfRoutingOption_2" nillable="true" type="ns2:ArrayOfRoutingOption" />
          <xsd:element name="ArrayOfExceptionPath_3" nillable="true" type="ns2:ArrayOfExceptionPath" />
          <xsd:element name="ResultListOptions_4" nillable="true" type="ns2:ResultListOptions" />
          <xsd:element name="CallerContext_5" nillable="true" type="ns3:CallerContext" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="calculateRouteResponse">
        <xsd:sequence>
          <xsd:element name="result" nillable="true" type="ns2:Route" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="calculateRouteInfo">
        <xsd:sequence>
          <xsd:element name="ArrayOfWaypointDesc_1" nillable="true" type="ns2:ArrayOfWaypointDesc" />
          <xsd:element name="ArrayOfRoutingOption_2" nillable="true" type="ns2:ArrayOfRoutingOption" />
          <xsd:element name="ArrayOfExceptionPath_3" nillable="true" type="ns2:ArrayOfExceptionPath" />
          <xsd:element name="CallerContext_4" nillable="true" type="ns3:CallerContext" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="calculateRouteInfoResponse">
        <xsd:sequence>
          <xsd:element name="result" nillable="true" type="ns2:RouteInfo" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="calculateTour">
        <xsd:sequence>
          <xsd:element name="ArrayOfWaypointDesc_1" nillable="true" type="ns2:ArrayOfWaypointDesc" />
          <xsd:element name="ArrayOfRoutingOption_2" nillable="true" type="ns2:ArrayOfRoutingOption" />
          <xsd:element name="ArrayOfExceptionPath_3" nillable="true" type="ns2:ArrayOfExceptionPath" />
          <xsd:element name="ResultListOptions_4" nillable="true" type="ns2:ResultListOptions" />
          <xsd:element name="CountryInfoOptions_5" nillable="true" type="ns2:CountryInfoOptions" />
          <xsd:element name="CallerContext_6" nillable="true" type="ns3:CallerContext" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="calculateTourResponse">
        <xsd:sequence>
          <xsd:element name="result" nillable="true" type="ns2:Tour" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="fetchBulkRouteInfo">
        <xsd:sequence>
          <xsd:element name="String_1" nillable="true" type="xsd:string" />
          <xsd:element name="CallerContext_2" nillable="true" type="ns3:CallerContext" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="fetchBulkRouteInfoResponse">
        <xsd:sequence>
          <xsd:element name="result" nillable="true" type="ns2:BulkRouteInfo" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="fetchMatrixInfo">
        <xsd:sequence>
          <xsd:element name="String_1" nillable="true" type="xsd:string" />
          <xsd:element name="CallerContext_2" nillable="true" type="ns3:CallerContext" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="fetchMatrixInfoResponse">
        <xsd:sequence>
          <xsd:element name="result" nillable="true" type="ns2:MatrixInfo" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="searchForReachableObjects">
        <xsd:sequence>
          <xsd:element name="WaypointDesc_1" nillable="true" type="ns2:WaypointDesc" />
          <xsd:element name="String_2" nillable="true" type="xsd:string" />
          <xsd:element name="ArrayOfRoutingOption_3" nillable="true" type="ns2:ArrayOfRoutingOption" />
          <xsd:element name="ReachableObjectsOptions_4" nillable="true" type="ns2:ReachableObjectsOptions" />
          <xsd:element name="ArrayOfExceptionPath_5" nillable="true" type="ns2:ArrayOfExceptionPath" />
          <xsd:element name="CallerContext_6" nillable="true" type="ns3:CallerContext" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="searchForReachableObjectsResponse">
        <xsd:sequence>
          <xsd:element name="result" nillable="true" type="ns2:ReachableObjects" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="startCalculateBulkRouteInfo">
        <xsd:sequence>
          <xsd:element name="ArrayOfArrayOfWaypointDesc_1" nillable="true" type="ns2:ArrayOfArrayOfWaypointDesc" />
          <xsd:element name="ArrayOfRoutingOption_2" nillable="true" type="ns2:ArrayOfRoutingOption" />
          <xsd:element name="ArrayOfExceptionPath_3" nillable="true" type="ns2:ArrayOfExceptionPath" />
          <xsd:element name="CallerContext_4" nillable="true" type="ns3:CallerContext" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="startCalculateBulkRouteInfoResponse">
        <xsd:sequence>
          <xsd:element name="result" nillable="true" type="common:Job" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="startCalculateMatrixInfo">
        <xsd:sequence>
          <xsd:element name="ArrayOfWaypointDesc_1" nillable="true" type="ns2:ArrayOfWaypointDesc" />
          <xsd:element name="ArrayOfWaypointDesc_2" nillable="true" type="ns2:ArrayOfWaypointDesc" />
          <xsd:element name="ArrayOfRoutingOption_3" nillable="true" type="ns2:ArrayOfRoutingOption" />
          <xsd:element name="MatrixOptions_4" nillable="true" type="ns2:MatrixOptions" />
          <xsd:element name="CallerContext_5" nillable="true" type="ns3:CallerContext" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="startCalculateMatrixInfoResponse">
        <xsd:sequence>
          <xsd:element name="result" nillable="true" type="common:Job" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="watchJob">
        <xsd:sequence>
          <xsd:element name="String_1" nillable="true" type="xsd:string" />
          <xsd:element name="WatchOptions_2" nillable="true" type="common:WatchOptions" />
          <xsd:element name="CallerContext_3" nillable="true" type="ns3:CallerContext" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="watchJobResponse">
        <xsd:sequence>
          <xsd:element name="result" nillable="true" type="common:Job" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="stopJob">
        <xsd:sequence>
          <xsd:element name="String_1" nillable="true" type="xsd:string" />
          <xsd:element name="CallerContext_2" nillable="true" type="ns3:CallerContext" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="stopJobResponse">
        <xsd:sequence>
          <xsd:element name="result" nillable="true" type="common:Job" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="deleteJob">
        <xsd:sequence>
          <xsd:element name="String_1" nillable="true" type="xsd:string" />
          <xsd:element name="CallerContext_2" nillable="true" type="ns3:CallerContext" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="deleteJobResponse">
        <xsd:sequence>
          <xsd:element name="result" nillable="true" type="common:Job" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="calculateAdvancedTour" type="tns:calculateAdvancedTour" />
      <xsd:element name="calculateAdvancedTourResponse" type="tns:calculateAdvancedTourResponse" />
      <xsd:element name="calculateBulkRouteInfo" type="tns:calculateBulkRouteInfo" />
      <xsd:element name="calculateBulkRouteInfoResponse" type="tns:calculateBulkRouteInfoResponse" />
      <xsd:element name="calculateExtendedRoute" type="tns:calculateExtendedRoute" />
      <xsd:element name="calculateExtendedRouteResponse" type="tns:calculateExtendedRouteResponse" />
      <xsd:element name="calculateIsochrones" type="tns:calculateIsochrones" />
      <xsd:element name="calculateIsochronesResponse" type="tns:calculateIsochronesResponse" />
      <xsd:element name="calculateMatrixInfo" type="tns:calculateMatrixInfo" />
      <xsd:element name="calculateMatrixInfoResponse" type="tns:calculateMatrixInfoResponse" />
      <xsd:element name="calculateReachableObjects" type="tns:calculateReachableObjects" />
      <xsd:element name="calculateReachableObjectsResponse" type="tns:calculateReachableObjectsResponse" />
      <xsd:element name="calculateRoute" type="tns:calculateRoute" />
      <xsd:element name="calculateRouteResponse" type="tns:calculateRouteResponse" />
      <xsd:element name="calculateRouteInfo" type="tns:calculateRouteInfo" />
      <xsd:element name="calculateRouteInfoResponse" type="tns:calculateRouteInfoResponse" />
      <xsd:element name="calculateTour" type="tns:calculateTour" />
      <xsd:element name="calculateTourResponse" type="tns:calculateTourResponse" />
      <xsd:element name="fetchBulkRouteInfo" type="tns:fetchBulkRouteInfo" />
      <xsd:element name="fetchBulkRouteInfoResponse" type="tns:fetchBulkRouteInfoResponse" />
      <xsd:element name="fetchMatrixInfo" type="tns:fetchMatrixInfo" />
      <xsd:element name="fetchMatrixInfoResponse" type="tns:fetchMatrixInfoResponse" />
      <xsd:element name="searchForReachableObjects" type="tns:searchForReachableObjects" />
      <xsd:element name="searchForReachableObjectsResponse" type="tns:searchForReachableObjectsResponse" />
      <xsd:element name="startCalculateBulkRouteInfo" type="tns:startCalculateBulkRouteInfo" />
      <xsd:element name="startCalculateBulkRouteInfoResponse" type="tns:startCalculateBulkRouteInfoResponse" />
      <xsd:element name="startCalculateMatrixInfo" type="tns:startCalculateMatrixInfo" />
      <xsd:element name="startCalculateMatrixInfoResponse" type="tns:startCalculateMatrixInfoResponse" />
      <xsd:element name="watchJob" type="tns:watchJob" />
      <xsd:element name="watchJobResponse" type="tns:watchJobResponse" />
      <xsd:element name="deleteJob" type="tns:deleteJob" />
      <xsd:element name="deleteJobResponse" type="tns:deleteJobResponse" />
      <xsd:element name="stopJob" type="tns:stopJob" />
      <xsd:element name="stopJobResponse" type="tns:stopJobResponse" />
    </xsd:schema>
  </types>
  <message name="XRouteWS_calculateMatrixInfo">
    <part name="parameters" element="ns0:calculateMatrixInfo" />
  </message>
  <message name="XRouteWS_startCalculateBulkRouteInfoResponse">
    <part name="parameters" element="ns0:startCalculateBulkRouteInfoResponse" />
  </message>
  <message name="XRouteWS_fetchBulkRouteInfoResponse">
    <part name="parameters" element="ns0:fetchBulkRouteInfoResponse" />
  </message>
  <message name="XRouteWS_calculateExtendedRouteResponse">
    <part name="parameters" element="ns0:calculateExtendedRouteResponse" />
  </message>
  <message name="XRouteWS_startCalculateMatrixInfoResponse">
    <part name="parameters" element="ns0:startCalculateMatrixInfoResponse" />
  </message>
  <message name="XRouteWS_calculateExtendedRoute">
    <part name="parameters" element="ns0:calculateExtendedRoute" />
  </message>
  <message name="XRouteWS_startCalculateBulkRouteInfo">
    <part name="parameters" element="ns0:startCalculateBulkRouteInfo" />
  </message>
  <message name="DatabaseException">
    <part name="DatabaseException" element="ns3:DatabaseException" />
  </message>
  <message name="XRouteWS_calculateReachableObjects">
    <part name="parameters" element="ns0:calculateReachableObjects" />
  </message>
  <message name="XRouteWS_calculateAdvancedTour">
    <part name="parameters" element="ns0:calculateAdvancedTour" />
  </message>
  <message name="XRouteWS_calculateRouteResponse">
    <part name="parameters" element="ns0:calculateRouteResponse" />
  </message>
  <message name="XRouteWS_watchJob">
    <part name="parameters" element="ns0:watchJob" />
  </message>
  <message name="XRouteWS_watchJobResponse">
    <part name="parameters" element="ns0:watchJobResponse" />
  </message>
  <message name="XServiceException">
    <part name="XServiceException" element="ns2:XServiceException" />
  </message>
  <message name="XRouteWS_calculateMatrixInfoResponse">
    <part name="parameters" element="ns0:calculateMatrixInfoResponse" />
  </message>
  <message name="XRouteWS_calculateTour">
    <part name="parameters" element="ns0:calculateTour" />
  </message>
  <message name="UnexpectedException">
    <part name="UnexpectedException" element="ns3:UnexpectedException" />
  </message>
  <message name="XRouteWS_calculateBulkRouteInfoResponse">
    <part name="parameters" element="ns0:calculateBulkRouteInfoResponse" />
  </message>
  <message name="XRouteWS_startCalculateMatrixInfo">
    <part name="parameters" element="ns0:startCalculateMatrixInfo" />
  </message>
  <message name="OptimisticRollbackException">
    <part name="OptimisticRollbackException" element="ns3:OptimisticRollbackException" />
  </message>
  <message name="XRouteException">
    <part name="XRouteException" element="ns1:XRouteException" />
  </message>
  <message name="XRouteWS_fetchMatrixInfoResponse">
    <part name="parameters" element="ns0:fetchMatrixInfoResponse" />
  </message>
  <message name="XRouteWS_deleteJob">
    <part name="parameters" element="ns0:deleteJob" />
  </message>
  <message name="TableNotFoundException">
    <part name="TableNotFoundException" element="ns3:TableNotFoundException" />
  </message>
  <message name="XRouteWS_calculateRouteInfo">
    <part name="parameters" element="ns0:calculateRouteInfo" />
  </message>
  <message name="XRouteWS_fetchBulkRouteInfo">
    <part name="parameters" element="ns0:fetchBulkRouteInfo" />
  </message>
  <message name="SystemException">
    <part name="SystemException" element="ns3:SystemException" />
  </message>
  <message name="XRouteWS_calculateTourResponse">
    <part name="parameters" element="ns0:calculateTourResponse" />
  </message>
  <message name="ConstraintViolationException">
    <part name="ConstraintViolationException" element="ns3:ConstraintViolationException" />
  </message>
  <message name="XRouteWS_calculateIsochronesResponse">
    <part name="parameters" element="ns0:calculateIsochronesResponse" />
  </message>
  <message name="XRouteWS_fetchMatrixInfo">
    <part name="parameters" element="ns0:fetchMatrixInfo" />
  </message>
  <message name="XRouteWS_stopJobResponse">
    <part name="parameters" element="ns0:stopJobResponse" />
  </message>
  <message name="XRouteWS_searchForReachableObjects">
    <part name="parameters" element="ns0:searchForReachableObjects" />
  </message>
  <message name="XRouteWS_deleteJobResponse">
    <part name="parameters" element="ns0:deleteJobResponse" />
  </message>
  <message name="XRouteWS_calculateRouteInfoResponse">
    <part name="parameters" element="ns0:calculateRouteInfoResponse" />
  </message>
  <message name="XRouteWS_stopJob">
    <part name="parameters" element="ns0:stopJob" />
  </message>
  <message name="XRouteWS_searchForReachableObjectsResponse">
    <part name="parameters" element="ns0:searchForReachableObjectsResponse" />
  </message>
  <message name="XRouteWS_calculateAdvancedTourResponse">
    <part name="parameters" element="ns0:calculateAdvancedTourResponse" />
  </message>
  <message name="XRouteWS_calculateRoute">
    <part name="parameters" element="ns0:calculateRoute" />
  </message>
  <message name="XRouteWS_calculateIsochrones">
    <part name="parameters" element="ns0:calculateIsochrones" />
  </message>
  <message name="XRouteWS_calculateReachableObjectsResponse">
    <part name="parameters" element="ns0:calculateReachableObjectsResponse" />
  </message>
  <message name="XRouteWS_calculateBulkRouteInfo">
    <part name="parameters" element="ns0:calculateBulkRouteInfo" />
  </message>
  <portType name="XRouteWS">
    <operation name="calculateAdvancedTour">
      <input message="tns:XRouteWS_calculateAdvancedTour" />
      <output message="tns:XRouteWS_calculateAdvancedTourResponse" />
      <fault name="XServiceException" message="tns:XServiceException" />
      <fault name="TableNotFoundException" message="tns:TableNotFoundException" />
      <fault name="UnexpectedException" message="tns:UnexpectedException" />
      <fault name="SystemException" message="tns:SystemException" />
      <fault name="OptimisticRollbackException" message="tns:OptimisticRollbackException" />
      <fault name="ConstraintViolationException" message="tns:ConstraintViolationException" />
      <fault name="XRouteException" message="tns:XRouteException" />
      <fault name="DatabaseException" message="tns:DatabaseException" />
    </operation>
    <operation name="calculateBulkRouteInfo">
      <input message="tns:XRouteWS_calculateBulkRouteInfo" />
      <output message="tns:XRouteWS_calculateBulkRouteInfoResponse" />
      <fault name="XServiceException" message="tns:XServiceException" />
      <fault name="TableNotFoundException" message="tns:TableNotFoundException" />
      <fault name="UnexpectedException" message="tns:UnexpectedException" />
      <fault name="SystemException" message="tns:SystemException" />
      <fault name="OptimisticRollbackException" message="tns:OptimisticRollbackException" />
      <fault name="ConstraintViolationException" message="tns:ConstraintViolationException" />
      <fault name="XRouteException" message="tns:XRouteException" />
      <fault name="DatabaseException" message="tns:DatabaseException" />
    </operation>
    <operation name="calculateExtendedRoute">
      <input message="tns:XRouteWS_calculateExtendedRoute" />
      <output message="tns:XRouteWS_calculateExtendedRouteResponse" />
      <fault name="XServiceException" message="tns:XServiceException" />
      <fault name="TableNotFoundException" message="tns:TableNotFoundException" />
      <fault name="UnexpectedException" message="tns:UnexpectedException" />
      <fault name="SystemException" message="tns:SystemException" />
      <fault name="OptimisticRollbackException" message="tns:OptimisticRollbackException" />
      <fault name="ConstraintViolationException" message="tns:ConstraintViolationException" />
      <fault name="XRouteException" message="tns:XRouteException" />
      <fault name="DatabaseException" message="tns:DatabaseException" />
    </operation>
    <operation name="calculateIsochrones">
      <input message="tns:XRouteWS_calculateIsochrones" />
      <output message="tns:XRouteWS_calculateIsochronesResponse" />
      <fault name="XServiceException" message="tns:XServiceException" />
      <fault name="TableNotFoundException" message="tns:TableNotFoundException" />
      <fault name="UnexpectedException" message="tns:UnexpectedException" />
      <fault name="SystemException" message="tns:SystemException" />
      <fault name="OptimisticRollbackException" message="tns:OptimisticRollbackException" />
      <fault name="ConstraintViolationException" message="tns:ConstraintViolationException" />
      <fault name="XRouteException" message="tns:XRouteException" />
      <fault name="DatabaseException" message="tns:DatabaseException" />
    </operation>
    <operation name="calculateMatrixInfo">
      <input message="tns:XRouteWS_calculateMatrixInfo" />
      <output message="tns:XRouteWS_calculateMatrixInfoResponse" />
      <fault name="XServiceException" message="tns:XServiceException" />
      <fault name="TableNotFoundException" message="tns:TableNotFoundException" />
      <fault name="UnexpectedException" message="tns:UnexpectedException" />
      <fault name="SystemException" message="tns:SystemException" />
      <fault name="OptimisticRollbackException" message="tns:OptimisticRollbackException" />
      <fault name="ConstraintViolationException" message="tns:ConstraintViolationException" />
      <fault name="XRouteException" message="tns:XRouteException" />
      <fault name="DatabaseException" message="tns:DatabaseException" />
    </operation>
    <operation name="calculateReachableObjects">
      <input message="tns:XRouteWS_calculateReachableObjects" />
      <output message="tns:XRouteWS_calculateReachableObjectsResponse" />
      <fault name="XServiceException" message="tns:XServiceException" />
      <fault name="TableNotFoundException" message="tns:TableNotFoundException" />
      <fault name="UnexpectedException" message="tns:UnexpectedException" />
      <fault name="SystemException" message="tns:SystemException" />
      <fault name="OptimisticRollbackException" message="tns:OptimisticRollbackException" />
      <fault name="ConstraintViolationException" message="tns:ConstraintViolationException" />
      <fault name="XRouteException" message="tns:XRouteException" />
      <fault name="DatabaseException" message="tns:DatabaseException" />
    </operation>
    <operation name="calculateRoute">
      <input message="tns:XRouteWS_calculateRoute" />
      <output message="tns:XRouteWS_calculateRouteResponse" />
      <fault name="XServiceException" message="tns:XServiceException" />
      <fault name="TableNotFoundException" message="tns:TableNotFoundException" />
      <fault name="UnexpectedException" message="tns:UnexpectedException" />
      <fault name="SystemException" message="tns:SystemException" />
      <fault name="OptimisticRollbackException" message="tns:OptimisticRollbackException" />
      <fault name="ConstraintViolationException" message="tns:ConstraintViolationException" />
      <fault name="XRouteException" message="tns:XRouteException" />
      <fault name="DatabaseException" message="tns:DatabaseException" />
    </operation>
    <operation name="calculateRouteInfo">
      <input message="tns:XRouteWS_calculateRouteInfo" />
      <output message="tns:XRouteWS_calculateRouteInfoResponse" />
      <fault name="XServiceException" message="tns:XServiceException" />
      <fault name="TableNotFoundException" message="tns:TableNotFoundException" />
      <fault name="UnexpectedException" message="tns:UnexpectedException" />
      <fault name="SystemException" message="tns:SystemException" />
      <fault name="OptimisticRollbackException" message="tns:OptimisticRollbackException" />
      <fault name="ConstraintViolationException" message="tns:ConstraintViolationException" />
      <fault name="XRouteException" message="tns:XRouteException" />
      <fault name="DatabaseException" message="tns:DatabaseException" />
    </operation>
    <operation name="calculateTour">
      <input message="tns:XRouteWS_calculateTour" />
      <output message="tns:XRouteWS_calculateTourResponse" />
      <fault name="XServiceException" message="tns:XServiceException" />
      <fault name="TableNotFoundException" message="tns:TableNotFoundException" />
      <fault name="UnexpectedException" message="tns:UnexpectedException" />
      <fault name="SystemException" message="tns:SystemException" />
      <fault name="OptimisticRollbackException" message="tns:OptimisticRollbackException" />
      <fault name="ConstraintViolationException" message="tns:ConstraintViolationException" />
      <fault name="XRouteException" message="tns:XRouteException" />
      <fault name="DatabaseException" message="tns:DatabaseException" />
    </operation>
    <operation name="fetchBulkRouteInfo">
      <input message="tns:XRouteWS_fetchBulkRouteInfo" />
      <output message="tns:XRouteWS_fetchBulkRouteInfoResponse" />
      <fault name="XServiceException" message="tns:XServiceException" />
      <fault name="UnexpectedException" message="tns:UnexpectedException" />
      <fault name="SystemException" message="tns:SystemException" />
      <fault name="XRouteException" message="tns:XRouteException" />
    </operation>
    <operation name="fetchMatrixInfo">
      <input message="tns:XRouteWS_fetchMatrixInfo" />
      <output message="tns:XRouteWS_fetchMatrixInfoResponse" />
      <fault name="XServiceException" message="tns:XServiceException" />
      <fault name="UnexpectedException" message="tns:UnexpectedException" />
      <fault name="SystemException" message="tns:SystemException" />
      <fault name="XRouteException" message="tns:XRouteException" />
    </operation>
    <operation name="searchForReachableObjects">
      <input message="tns:XRouteWS_searchForReachableObjects" />
      <output message="tns:XRouteWS_searchForReachableObjectsResponse" />
      <fault name="XServiceException" message="tns:XServiceException" />
      <fault name="TableNotFoundException" message="tns:TableNotFoundException" />
      <fault name="UnexpectedException" message="tns:UnexpectedException" />
      <fault name="SystemException" message="tns:SystemException" />
      <fault name="OptimisticRollbackException" message="tns:OptimisticRollbackException" />
      <fault name="ConstraintViolationException" message="tns:ConstraintViolationException" />
      <fault name="XRouteException" message="tns:XRouteException" />
      <fault name="DatabaseException" message="tns:DatabaseException" />
    </operation>
    <operation name="startCalculateBulkRouteInfo">
      <input message="tns:XRouteWS_startCalculateBulkRouteInfo" />
      <output message="tns:XRouteWS_startCalculateBulkRouteInfoResponse" />
      <fault name="XServiceException" message="tns:XServiceException" />
      <fault name="TableNotFoundException" message="tns:TableNotFoundException" />
      <fault name="UnexpectedException" message="tns:UnexpectedException" />
      <fault name="SystemException" message="tns:SystemException" />
      <fault name="OptimisticRollbackException" message="tns:OptimisticRollbackException" />
      <fault name="ConstraintViolationException" message="tns:ConstraintViolationException" />
      <fault name="XRouteException" message="tns:XRouteException" />
      <fault name="DatabaseException" message="tns:DatabaseException" />
    </operation>
    <operation name="startCalculateMatrixInfo">
      <input message="tns:XRouteWS_startCalculateMatrixInfo" />
      <output message="tns:XRouteWS_startCalculateMatrixInfoResponse" />
      <fault name="XServiceException" message="tns:XServiceException" />
      <fault name="TableNotFoundException" message="tns:TableNotFoundException" />
      <fault name="UnexpectedException" message="tns:UnexpectedException" />
      <fault name="SystemException" message="tns:SystemException" />
      <fault name="OptimisticRollbackException" message="tns:OptimisticRollbackException" />
      <fault name="ConstraintViolationException" message="tns:ConstraintViolationException" />
      <fault name="XRouteException" message="tns:XRouteException" />
      <fault name="DatabaseException" message="tns:DatabaseException" />
    </operation>
    <operation name="watchJob">
      <input message="tns:XRouteWS_watchJob" />
      <output message="tns:XRouteWS_watchJobResponse" />
      <fault name="UnexpectedException" message="tns:UnexpectedException" />
      <fault name="SystemException" message="tns:SystemException" />
    </operation>
    <operation name="deleteJob">
      <input message="tns:XRouteWS_deleteJob" />
      <output message="tns:XRouteWS_deleteJobResponse" />
      <fault name="UnexpectedException" message="tns:UnexpectedException" />
      <fault name="SystemException" message="tns:SystemException" />
    </operation>
    <operation name="stopJob">
      <input message="tns:XRouteWS_stopJob" />
      <output message="tns:XRouteWS_stopJobResponse" />
      <fault name="UnexpectedException" message="tns:UnexpectedException" />
      <fault name="SystemException" message="tns:SystemException" />
    </operation>
  </portType>
  <binding name="XRouteWSBinding" type="tns:XRouteWS">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" />
    <operation name="calculateAdvancedTour">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="XServiceException">
        <soap:fault use="literal" name="XServiceException" namespace="" />
      </fault>
      <fault name="TableNotFoundException">
        <soap:fault use="literal" name="TableNotFoundException" namespace="" />
      </fault>
      <fault name="UnexpectedException">
        <soap:fault use="literal" name="UnexpectedException" namespace="" />
      </fault>
      <fault name="SystemException">
        <soap:fault use="literal" name="SystemException" namespace="" />
      </fault>
      <fault name="OptimisticRollbackException">
        <soap:fault use="literal" name="OptimisticRollbackException" namespace="" />
      </fault>
      <fault name="ConstraintViolationException">
        <soap:fault use="literal" name="ConstraintViolationException" namespace="" />
      </fault>
      <fault name="XRouteException">
        <soap:fault use="literal" name="XRouteException" namespace="" />
      </fault>
      <fault name="DatabaseException">
        <soap:fault use="literal" name="DatabaseException" namespace="" />
      </fault>
    </operation>
    <operation name="calculateBulkRouteInfo">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="XServiceException">
        <soap:fault use="literal" name="XServiceException" namespace="" />
      </fault>
      <fault name="TableNotFoundException">
        <soap:fault use="literal" name="TableNotFoundException" namespace="" />
      </fault>
      <fault name="UnexpectedException">
        <soap:fault use="literal" name="UnexpectedException" namespace="" />
      </fault>
      <fault name="SystemException">
        <soap:fault use="literal" name="SystemException" namespace="" />
      </fault>
      <fault name="OptimisticRollbackException">
        <soap:fault use="literal" name="OptimisticRollbackException" namespace="" />
      </fault>
      <fault name="ConstraintViolationException">
        <soap:fault use="literal" name="ConstraintViolationException" namespace="" />
      </fault>
      <fault name="XRouteException">
        <soap:fault use="literal" name="XRouteException" namespace="" />
      </fault>
      <fault name="DatabaseException">
        <soap:fault use="literal" name="DatabaseException" namespace="" />
      </fault>
    </operation>
    <operation name="calculateExtendedRoute">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="XServiceException">
        <soap:fault use="literal" name="XServiceException" namespace="" />
      </fault>
      <fault name="TableNotFoundException">
        <soap:fault use="literal" name="TableNotFoundException" namespace="" />
      </fault>
      <fault name="UnexpectedException">
        <soap:fault use="literal" name="UnexpectedException" namespace="" />
      </fault>
      <fault name="SystemException">
        <soap:fault use="literal" name="SystemException" namespace="" />
      </fault>
      <fault name="OptimisticRollbackException">
        <soap:fault use="literal" name="OptimisticRollbackException" namespace="" />
      </fault>
      <fault name="ConstraintViolationException">
        <soap:fault use="literal" name="ConstraintViolationException" namespace="" />
      </fault>
      <fault name="XRouteException">
        <soap:fault use="literal" name="XRouteException" namespace="" />
      </fault>
      <fault name="DatabaseException">
        <soap:fault use="literal" name="DatabaseException" namespace="" />
      </fault>
    </operation>
    <operation name="calculateIsochrones">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="XServiceException">
        <soap:fault use="literal" name="XServiceException" namespace="" />
      </fault>
      <fault name="TableNotFoundException">
        <soap:fault use="literal" name="TableNotFoundException" namespace="" />
      </fault>
      <fault name="UnexpectedException">
        <soap:fault use="literal" name="UnexpectedException" namespace="" />
      </fault>
      <fault name="SystemException">
        <soap:fault use="literal" name="SystemException" namespace="" />
      </fault>
      <fault name="OptimisticRollbackException">
        <soap:fault use="literal" name="OptimisticRollbackException" namespace="" />
      </fault>
      <fault name="ConstraintViolationException">
        <soap:fault use="literal" name="ConstraintViolationException" namespace="" />
      </fault>
      <fault name="XRouteException">
        <soap:fault use="literal" name="XRouteException" namespace="" />
      </fault>
      <fault name="DatabaseException">
        <soap:fault use="literal" name="DatabaseException" namespace="" />
      </fault>
    </operation>
    <operation name="calculateMatrixInfo">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="XServiceException">
        <soap:fault use="literal" name="XServiceException" namespace="" />
      </fault>
      <fault name="TableNotFoundException">
        <soap:fault use="literal" name="TableNotFoundException" namespace="" />
      </fault>
      <fault name="UnexpectedException">
        <soap:fault use="literal" name="UnexpectedException" namespace="" />
      </fault>
      <fault name="SystemException">
        <soap:fault use="literal" name="SystemException" namespace="" />
      </fault>
      <fault name="OptimisticRollbackException">
        <soap:fault use="literal" name="OptimisticRollbackException" namespace="" />
      </fault>
      <fault name="ConstraintViolationException">
        <soap:fault use="literal" name="ConstraintViolationException" namespace="" />
      </fault>
      <fault name="XRouteException">
        <soap:fault use="literal" name="XRouteException" namespace="" />
      </fault>
      <fault name="DatabaseException">
        <soap:fault use="literal" name="DatabaseException" namespace="" />
      </fault>
    </operation>
    <operation name="calculateReachableObjects">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="XServiceException">
        <soap:fault use="literal" name="XServiceException" namespace="" />
      </fault>
      <fault name="TableNotFoundException">
        <soap:fault use="literal" name="TableNotFoundException" namespace="" />
      </fault>
      <fault name="UnexpectedException">
        <soap:fault use="literal" name="UnexpectedException" namespace="" />
      </fault>
      <fault name="SystemException">
        <soap:fault use="literal" name="SystemException" namespace="" />
      </fault>
      <fault name="OptimisticRollbackException">
        <soap:fault use="literal" name="OptimisticRollbackException" namespace="" />
      </fault>
      <fault name="ConstraintViolationException">
        <soap:fault use="literal" name="ConstraintViolationException" namespace="" />
      </fault>
      <fault name="XRouteException">
        <soap:fault use="literal" name="XRouteException" namespace="" />
      </fault>
      <fault name="DatabaseException">
        <soap:fault use="literal" name="DatabaseException" namespace="" />
      </fault>
    </operation>
    <operation name="calculateRoute">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="XServiceException">
        <soap:fault use="literal" name="XServiceException" namespace="" />
      </fault>
      <fault name="TableNotFoundException">
        <soap:fault use="literal" name="TableNotFoundException" namespace="" />
      </fault>
      <fault name="UnexpectedException">
        <soap:fault use="literal" name="UnexpectedException" namespace="" />
      </fault>
      <fault name="SystemException">
        <soap:fault use="literal" name="SystemException" namespace="" />
      </fault>
      <fault name="OptimisticRollbackException">
        <soap:fault use="literal" name="OptimisticRollbackException" namespace="" />
      </fault>
      <fault name="ConstraintViolationException">
        <soap:fault use="literal" name="ConstraintViolationException" namespace="" />
      </fault>
      <fault name="XRouteException">
        <soap:fault use="literal" name="XRouteException" namespace="" />
      </fault>
      <fault name="DatabaseException">
        <soap:fault use="literal" name="DatabaseException" namespace="" />
      </fault>
    </operation>
    <operation name="calculateRouteInfo">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="XServiceException">
        <soap:fault use="literal" name="XServiceException" namespace="" />
      </fault>
      <fault name="TableNotFoundException">
        <soap:fault use="literal" name="TableNotFoundException" namespace="" />
      </fault>
      <fault name="UnexpectedException">
        <soap:fault use="literal" name="UnexpectedException" namespace="" />
      </fault>
      <fault name="SystemException">
        <soap:fault use="literal" name="SystemException" namespace="" />
      </fault>
      <fault name="OptimisticRollbackException">
        <soap:fault use="literal" name="OptimisticRollbackException" namespace="" />
      </fault>
      <fault name="ConstraintViolationException">
        <soap:fault use="literal" name="ConstraintViolationException" namespace="" />
      </fault>
      <fault name="XRouteException">
        <soap:fault use="literal" name="XRouteException" namespace="" />
      </fault>
      <fault name="DatabaseException">
        <soap:fault use="literal" name="DatabaseException" namespace="" />
      </fault>
    </operation>
    <operation name="calculateTour">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="XServiceException">
        <soap:fault use="literal" name="XServiceException" namespace="" />
      </fault>
      <fault name="TableNotFoundException">
        <soap:fault use="literal" name="TableNotFoundException" namespace="" />
      </fault>
      <fault name="UnexpectedException">
        <soap:fault use="literal" name="UnexpectedException" namespace="" />
      </fault>
      <fault name="SystemException">
        <soap:fault use="literal" name="SystemException" namespace="" />
      </fault>
      <fault name="OptimisticRollbackException">
        <soap:fault use="literal" name="OptimisticRollbackException" namespace="" />
      </fault>
      <fault name="ConstraintViolationException">
        <soap:fault use="literal" name="ConstraintViolationException" namespace="" />
      </fault>
      <fault name="XRouteException">
        <soap:fault use="literal" name="XRouteException" namespace="" />
      </fault>
      <fault name="DatabaseException">
        <soap:fault use="literal" name="DatabaseException" namespace="" />
      </fault>
    </operation>
    <operation name="fetchBulkRouteInfo">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="XServiceException">
        <soap:fault use="literal" name="XServiceException" namespace="" />
      </fault>
      <fault name="UnexpectedException">
        <soap:fault use="literal" name="UnexpectedException" namespace="" />
      </fault>
      <fault name="SystemException">
        <soap:fault use="literal" name="SystemException" namespace="" />
      </fault>
      <fault name="XRouteException">
        <soap:fault use="literal" name="XRouteException" namespace="" />
      </fault>
    </operation>
    <operation name="fetchMatrixInfo">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="XServiceException">
        <soap:fault use="literal" name="XServiceException" namespace="" />
      </fault>
      <fault name="UnexpectedException">
        <soap:fault use="literal" name="UnexpectedException" namespace="" />
      </fault>
      <fault name="SystemException">
        <soap:fault use="literal" name="SystemException" namespace="" />
      </fault>
      <fault name="XRouteException">
        <soap:fault use="literal" name="XRouteException" namespace="" />
      </fault>
    </operation>
    <operation name="searchForReachableObjects">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="XServiceException">
        <soap:fault use="literal" name="XServiceException" namespace="" />
      </fault>
      <fault name="TableNotFoundException">
        <soap:fault use="literal" name="TableNotFoundException" namespace="" />
      </fault>
      <fault name="UnexpectedException">
        <soap:fault use="literal" name="UnexpectedException" namespace="" />
      </fault>
      <fault name="SystemException">
        <soap:fault use="literal" name="SystemException" namespace="" />
      </fault>
      <fault name="OptimisticRollbackException">
        <soap:fault use="literal" name="OptimisticRollbackException" namespace="" />
      </fault>
      <fault name="ConstraintViolationException">
        <soap:fault use="literal" name="ConstraintViolationException" namespace="" />
      </fault>
      <fault name="XRouteException">
        <soap:fault use="literal" name="XRouteException" namespace="" />
      </fault>
      <fault name="DatabaseException">
        <soap:fault use="literal" name="DatabaseException" namespace="" />
      </fault>
    </operation>
    <operation name="startCalculateBulkRouteInfo">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="XServiceException">
        <soap:fault use="literal" name="XServiceException" namespace="" />
      </fault>
      <fault name="TableNotFoundException">
        <soap:fault use="literal" name="TableNotFoundException" namespace="" />
      </fault>
      <fault name="UnexpectedException">
        <soap:fault use="literal" name="UnexpectedException" namespace="" />
      </fault>
      <fault name="SystemException">
        <soap:fault use="literal" name="SystemException" namespace="" />
      </fault>
      <fault name="OptimisticRollbackException">
        <soap:fault use="literal" name="OptimisticRollbackException" namespace="" />
      </fault>
      <fault name="ConstraintViolationException">
        <soap:fault use="literal" name="ConstraintViolationException" namespace="" />
      </fault>
      <fault name="XRouteException">
        <soap:fault use="literal" name="XRouteException" namespace="" />
      </fault>
      <fault name="DatabaseException">
        <soap:fault use="literal" name="DatabaseException" namespace="" />
      </fault>
    </operation>
    <operation name="startCalculateMatrixInfo">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="XServiceException">
        <soap:fault use="literal" name="XServiceException" namespace="" />
      </fault>
      <fault name="TableNotFoundException">
        <soap:fault use="literal" name="TableNotFoundException" namespace="" />
      </fault>
      <fault name="UnexpectedException">
        <soap:fault use="literal" name="UnexpectedException" namespace="" />
      </fault>
      <fault name="SystemException">
        <soap:fault use="literal" name="SystemException" namespace="" />
      </fault>
      <fault name="OptimisticRollbackException">
        <soap:fault use="literal" name="OptimisticRollbackException" namespace="" />
      </fault>
      <fault name="ConstraintViolationException">
        <soap:fault use="literal" name="ConstraintViolationException" namespace="" />
      </fault>
      <fault name="XRouteException">
        <soap:fault use="literal" name="XRouteException" namespace="" />
      </fault>
      <fault name="DatabaseException">
        <soap:fault use="literal" name="DatabaseException" namespace="" />
      </fault>
    </operation>
    <operation name="watchJob">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="UnexpectedException">
        <soap:fault use="literal" name="UnexpectedException" namespace="" />
      </fault>
      <fault name="SystemException">
        <soap:fault use="literal" name="SystemException" namespace="" />
      </fault>
    </operation>
    <operation name="deleteJob">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="UnexpectedException">
        <soap:fault use="literal" name="UnexpectedException" namespace="" />
      </fault>
      <fault name="SystemException">
        <soap:fault use="literal" name="SystemException" namespace="" />
      </fault>
    </operation>
    <operation name="stopJob">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="UnexpectedException">
        <soap:fault use="literal" name="UnexpectedException" namespace="" />
      </fault>
      <fault name="SystemException">
        <soap:fault use="literal" name="SystemException" namespace="" />
      </fault>
    </operation>
  </binding>
  <service name="XRouteWSService">
    <port name="XRouteWSPort" binding="tns:XRouteWSBinding">
      <soap:address location="https://xroute-eu-n-test.cloud.ptvgroup.com:443/xroute/ws/XRoute" />
    </port>
  </service>
</definitions>