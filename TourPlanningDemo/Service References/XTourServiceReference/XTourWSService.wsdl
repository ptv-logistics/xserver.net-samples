<?xml version="1.0" encoding="utf-8"?>
<definitions xmlns:ns2="http://common.xserver.ptvag.com" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://jwsdp.xtour.xserver.ptvag.com" xmlns:ns1="http://xtour.xserver.ptvag.com" xmlns:ns0="http://types.xtour.xserver.ptvag.com" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:ns3="http://exception.core.jabba.ptvag.com" name="XTourWSService" targetNamespace="http://jwsdp.xtour.xserver.ptvag.com" xmlns="http://schemas.xmlsoap.org/wsdl/">
  <types>
    <xsd:schema xmlns:tns="http://exception.core.jabba.ptvag.com" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns0="http://wrappertypes.service.jabba.ptvag.com" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:ns3="http://exception.core.jabba.ptvag.com" elementFormDefault="qualified" targetNamespace="http://exception.core.jabba.ptvag.com">
      <xsd:complexType name="StackElement">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="1" name="cause" nillable="true" type="tns:StackElement" />
          <xsd:element minOccurs="1" maxOccurs="1" name="wrappedContext" nillable="true" type="ns0:ArrayOfString" />
        </xsd:sequence>
        <xsd:attribute name="className" type="xsd:string" use="optional" />
        <xsd:attribute name="errorKey" type="xsd:string" use="optional" />
        <xsd:attribute name="message" type="xsd:string" use="optional" />
      </xsd:complexType>
      <xsd:complexType name="DatabaseException">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:SystemException">
            <xsd:sequence />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:element name="DatabaseException" type="tns:DatabaseException" />
      <xsd:complexType name="ParameterNotSetException">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:IllegalParameterException">
            <xsd:sequence />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:element name="ParameterNotSetException" type="tns:ParameterNotSetException" />
      <xsd:complexType name="IllegalParameterException">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:BusinessException">
            <xsd:sequence />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:element name="IllegalParameterException" type="tns:IllegalParameterException" />
      <xsd:complexType name="UnexpectedException">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:SystemException">
            <xsd:sequence />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:element name="UnexpectedException" type="tns:UnexpectedException" />
      <xsd:complexType name="OptimisticRollbackException">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:SystemException">
            <xsd:sequence />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:element name="OptimisticRollbackException" type="tns:OptimisticRollbackException" />
      <xsd:complexType name="ConstraintViolationException">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:DatabaseException">
            <xsd:sequence />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:element name="ConstraintViolationException" type="tns:ConstraintViolationException" />
      <xsd:complexType name="TableNotFoundException">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:DatabaseException">
            <xsd:sequence />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:element name="TableNotFoundException" type="tns:TableNotFoundException" />
      <xsd:complexType name="RemoteAccessException">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:SystemException">
            <xsd:sequence />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:element name="RemoteAccessException" type="tns:RemoteAccessException" />
      <xsd:complexType name="BaseException">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="1" name="stackElement" nillable="true" type="tns:StackElement" />
        </xsd:sequence>
        <xsd:attribute name="transactionId" type="xsd:string" use="optional" />
      </xsd:complexType>
      <xsd:element name="BaseException" type="tns:BaseException" />
      <xsd:complexType name="SystemException">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:BaseException">
            <xsd:sequence />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:element name="SystemException" type="tns:SystemException" />
      <xsd:complexType name="BusinessException">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:BaseException">
            <xsd:sequence />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:element name="BusinessException" type="tns:BusinessException" />
      <xsd:complexType name="CreateException">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:SystemException">
            <xsd:sequence />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:element name="CreateException" type="tns:CreateException" />
      <xsd:complexType name="RemoveException">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:SystemException">
            <xsd:sequence />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:element name="RemoveException" type="tns:RemoveException" />
      <xsd:complexType name="FinderException">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:SystemException">
            <xsd:sequence />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:element name="FinderException" type="tns:FinderException" />
      <xsd:complexType name="ObjectNotFoundException">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:FinderException">
            <xsd:sequence />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:element name="ObjectNotFoundException" type="tns:ObjectNotFoundException" />
      <xsd:complexType name="DuplicateKeyException">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:CreateException">
            <xsd:sequence />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:element name="DuplicateKeyException" type="tns:DuplicateKeyException" />
    </xsd:schema>
    <xsd:schema xmlns:soap11-enc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:tns="http://value.core.jabba.ptvag.com" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="http://value.core.jabba.ptvag.com">
      <xsd:complexType name="TransientVO" abstract="true">
        <xsd:sequence />
      </xsd:complexType>
    </xsd:schema>
    <xsd:schema xmlns:tns="http://baseservices.service.jabba.ptvag.com" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns0="http://value.core.jabba.ptvag.com" xmlns="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="http://baseservices.service.jabba.ptvag.com">
      <xsd:import namespace="http://value.core.jabba.ptvag.com" />
      <xsd:complexType name="CallerContext">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns0:TransientVO">
            <xsd:sequence>
              <xsd:element minOccurs="1" maxOccurs="1" name="wrappedProperties" nillable="true" type="tns:ArrayOfCallerContextProperty" />
            </xsd:sequence>
            <xsd:attribute name="log1" type="xsd:string" use="optional" />
            <xsd:attribute name="log2" type="xsd:string" use="optional" />
            <xsd:attribute name="log3" type="xsd:string" use="optional" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="CallerContextProperty">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns0:TransientVO">
            <xsd:sequence />
            <xsd:attribute name="key" type="xsd:string" use="optional" />
            <xsd:attribute name="value" type="xsd:string" use="optional" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfCallerContextProperty">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="CallerContextProperty" nillable="true" type="tns:CallerContextProperty" />
        </xsd:sequence>
      </xsd:complexType>
    </xsd:schema>
    <xsd:schema xmlns:tns="http://wrappertypes.service.jabba.ptvag.com" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="http://wrappertypes.service.jabba.ptvag.com">
      <xsd:complexType name="ArrayOfCalendar">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="Calendar" nillable="true" type="xsd:dateTime" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfCalendar">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfCalendar" nillable="true" type="tns:ArrayOfCalendar" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfString">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="String" nillable="true" type="xsd:string" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfString">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfString" nillable="true" type="tns:ArrayOfString" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfByte">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfByte" nillable="true" type="xsd:base64Binary" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfShort">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="Short" type="xsd:short" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfShort">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfShort" nillable="true" type="tns:ArrayOfShort" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfInt">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="Int" type="xsd:int" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfInt">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfInt" nillable="true" type="tns:ArrayOfInt" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfLong">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="Long" type="xsd:long" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfLong">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfLong" nillable="true" type="tns:ArrayOfLong" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfFloat">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="Float" type="xsd:float" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfFloat">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfFloat" nillable="true" type="tns:ArrayOfFloat" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfDouble">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="Double" type="xsd:double" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfDouble">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfDouble" nillable="true" type="tns:ArrayOfDouble" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfBoolean">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="Boolean" type="xsd:boolean" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfBoolean">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfBoolean" nillable="true" type="tns:ArrayOfBoolean" />
        </xsd:sequence>
      </xsd:complexType>
    </xsd:schema>
    <xsd:schema xmlns:ns2="http://exception.core.jabba.ptvag.com" xmlns:tns="http://common.xserver.ptvag.com" xmlns:ns1="http://wrappertypes.service.jabba.ptvag.com" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns0="http://value.core.jabba.ptvag.com" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:ns3="http://exception.core.jabba.ptvag.com" elementFormDefault="qualified" targetNamespace="http://common.xserver.ptvag.com">
      <xsd:import namespace="http://wrappertypes.service.jabba.ptvag.com" />
      <xsd:import namespace="http://exception.core.jabba.ptvag.com" />
      <xsd:import namespace="http://value.core.jabba.ptvag.com" />
      <xsd:complexType name="RequestOptions">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns0:TransientVO">
            <xsd:sequence>
              <xsd:element minOccurs="1" maxOccurs="1" name="wrappedResponseGeometry" nillable="true" type="tns:ArrayOfGeometryEncoding" />
            </xsd:sequence>
            <xsd:attribute name="coordFormat" type="tns:CoordFormat" use="required" />
            <xsd:attribute name="profile" type="xsd:string" use="optional" />
            <xsd:attribute name="profileXMLSnippet" type="xsd:string" use="optional" />
            <xsd:attribute name="srId" type="xsd:string" use="optional" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfRequestOptions">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="RequestOptions" nillable="true" type="tns:RequestOptions" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfRequestOptions">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfRequestOptions" nillable="true" type="tns:ArrayOfRequestOptions" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="GeometryEncoding">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="PLAIN" />
          <xsd:enumeration value="WKB" />
          <xsd:enumeration value="WKT" />
          <xsd:enumeration value="KML" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="ArrayOfGeometryEncoding">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="GeometryEncoding" type="tns:GeometryEncoding" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfGeometryEncoding">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfGeometryEncoding" nillable="true" type="tns:ArrayOfGeometryEncoding" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="CoordFormat">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="OG_GEODECIMAL" />
          <xsd:enumeration value="PTV_MERCATOR" />
          <xsd:enumeration value="PTV_GEOMINSEC" />
          <xsd:enumeration value="PTV_GEODECIMAL" />
          <xsd:enumeration value="PTV_CONFORM" />
          <xsd:enumeration value="PTV_SUPERCONFORM" />
          <xsd:enumeration value="PTV_SMARTUNITS" />
          <xsd:enumeration value="OG_SRID" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="ArrayOfCoordFormat">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="CoordFormat" type="tns:CoordFormat" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfCoordFormat">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfCoordFormat" nillable="true" type="tns:ArrayOfCoordFormat" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="BoundingBox">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns0:TransientVO">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="leftTop" nillable="true" type="tns:Point" />
              <xsd:element minOccurs="0" maxOccurs="1" name="rightBottom" nillable="true" type="tns:Point" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfBoundingBox">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="BoundingBox" nillable="true" type="tns:BoundingBox" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfBoundingBox">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfBoundingBox" nillable="true" type="tns:ArrayOfBoundingBox" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="EncodedGeometry" abstract="true">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:EncodedGeometryBase">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="kml" nillable="true" type="tns:KML" />
            </xsd:sequence>
            <xsd:attribute name="wkb" type="xsd:base64Binary" use="optional" />
            <xsd:attribute name="wkt" type="xsd:string" use="optional" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfEncodedGeometry">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="EncodedGeometry" nillable="true" type="tns:EncodedGeometry" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfEncodedGeometry">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfEncodedGeometry" nillable="true" type="tns:ArrayOfEncodedGeometry" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="LinearRing">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:EncodedGeometry">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="linearRing" nillable="true" type="tns:PlainLinearRing" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfLinearRing">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="LinearRing" nillable="true" type="tns:LinearRing" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfLinearRing">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfLinearRing" nillable="true" type="tns:ArrayOfLinearRing" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="PlainLinearRing">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:PlainGeometryBase">
            <xsd:sequence>
              <xsd:element minOccurs="1" maxOccurs="1" name="wrappedPoints" nillable="true" type="tns:ArrayOfPlainPoint" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfPlainLinearRing">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="PlainLinearRing" nillable="true" type="tns:PlainLinearRing" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfPlainLinearRing">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfPlainLinearRing" nillable="true" type="tns:ArrayOfPlainLinearRing" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="Polygon">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:EncodedGeometry">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="polygon" nillable="true" type="tns:PlainPolygon" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfPolygon">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="Polygon" nillable="true" type="tns:Polygon" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfPolygon">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfPolygon" nillable="true" type="tns:ArrayOfPolygon" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="PlainPolygon">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:PlainGeometryBase">
            <xsd:sequence>
              <xsd:element minOccurs="1" maxOccurs="1" name="wrappedLinearRings" nillable="true" type="tns:ArrayOfPlainLinearRing" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfPlainPolygon">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="PlainPolygon" nillable="true" type="tns:PlainPolygon" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfPlainPolygon">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfPlainPolygon" nillable="true" type="tns:ArrayOfPlainPolygon" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="LineString">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:EncodedGeometry">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="lineString" nillable="true" type="tns:PlainLineString" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfLineString">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="LineString" nillable="true" type="tns:LineString" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfLineString">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfLineString" nillable="true" type="tns:ArrayOfLineString" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="PlainLineString">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:PlainGeometryBase">
            <xsd:sequence>
              <xsd:element minOccurs="1" maxOccurs="1" name="wrappedPoints" nillable="true" type="tns:ArrayOfPlainPoint" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfPlainLineString">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="PlainLineString" nillable="true" type="tns:PlainLineString" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfPlainLineString">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfPlainLineString" nillable="true" type="tns:ArrayOfPlainLineString" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="Point">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:EncodedGeometry">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="point" nillable="true" type="tns:PlainPoint" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfPoint">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="Point" nillable="true" type="tns:Point" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfPoint">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfPoint" nillable="true" type="tns:ArrayOfPoint" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="XServiceException">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns2:BusinessException">
            <xsd:sequence />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:element name="XServiceException" type="tns:XServiceException" />
      <xsd:complexType name="PlainMultiPoint">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:PlainGeometryBase">
            <xsd:sequence>
              <xsd:element minOccurs="1" maxOccurs="1" name="wrappedPoints" nillable="true" type="tns:ArrayOfPlainPoint" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfPlainMultiPoint">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="PlainMultiPoint" nillable="true" type="tns:PlainMultiPoint" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfPlainMultiPoint">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfPlainMultiPoint" nillable="true" type="tns:ArrayOfPlainMultiPoint" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="PlainMultiLineString">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:PlainGeometryBase">
            <xsd:sequence>
              <xsd:element minOccurs="1" maxOccurs="1" name="wrappedLineStrings" nillable="true" type="tns:ArrayOfPlainLineString" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfPlainMultiLineString">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="PlainMultiLineString" nillable="true" type="tns:PlainMultiLineString" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfPlainMultiLineString">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfPlainMultiLineString" nillable="true" type="tns:ArrayOfPlainMultiLineString" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="PlainMultiPolygon">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:PlainGeometryBase">
            <xsd:sequence>
              <xsd:element minOccurs="1" maxOccurs="1" name="wrappedPolygons" nillable="true" type="tns:ArrayOfPlainPolygon" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfPlainMultiPolygon">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="PlainMultiPolygon" nillable="true" type="tns:PlainMultiPolygon" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfPlainMultiPolygon">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfPlainMultiPolygon" nillable="true" type="tns:ArrayOfPlainMultiPolygon" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="PlainGeometryCollection">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:PlainGeometryBase">
            <xsd:sequence>
              <xsd:element minOccurs="1" maxOccurs="1" name="wrappedGeometries" nillable="true" type="tns:ArrayOfPlainGeometryBase" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfPlainGeometryCollection">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="PlainGeometryCollection" nillable="true" type="tns:PlainGeometryCollection" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfPlainGeometryCollection">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfPlainGeometryCollection" nillable="true" type="tns:ArrayOfPlainGeometryCollection" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="MultiPoint">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:EncodedGeometry">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="multiPoint" nillable="true" type="tns:PlainMultiPoint" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfMultiPoint">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="MultiPoint" nillable="true" type="tns:MultiPoint" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfMultiPoint">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfMultiPoint" nillable="true" type="tns:ArrayOfMultiPoint" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="MultiLineString">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:EncodedGeometry">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="multiLineString" nillable="true" type="tns:PlainMultiLineString" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfMultiLineString">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="MultiLineString" nillable="true" type="tns:MultiLineString" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfMultiLineString">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfMultiLineString" nillable="true" type="tns:ArrayOfMultiLineString" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="MultiPolygon">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:EncodedGeometry">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="multiPolygon" nillable="true" type="tns:PlainMultiPolygon" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfMultiPolygon">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="MultiPolygon" nillable="true" type="tns:MultiPolygon" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfMultiPolygon">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfMultiPolygon" nillable="true" type="tns:ArrayOfMultiPolygon" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="GeometryCollection">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:EncodedGeometry">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="geometryCollection" nillable="true" type="tns:PlainGeometryCollection" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfGeometryCollection">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="GeometryCollection" nillable="true" type="tns:GeometryCollection" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfGeometryCollection">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfGeometryCollection" nillable="true" type="tns:ArrayOfGeometryCollection" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="PlainGeometryBase">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns0:TransientVO">
            <xsd:sequence />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfPlainGeometryBase">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="PlainGeometryBase" nillable="true" type="tns:PlainGeometryBase" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfPlainGeometryBase">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfPlainGeometryBase" nillable="true" type="tns:ArrayOfPlainGeometryBase" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="PlainPoint">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:PlainGeometryBase">
            <xsd:sequence />
            <xsd:attribute name="x" type="xsd:double" use="required" />
            <xsd:attribute name="y" type="xsd:double" use="required" />
            <xsd:attribute name="z" type="xsd:double" use="optional" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfPlainPoint">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="PlainPoint" nillable="true" type="tns:PlainPoint" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfPlainPoint">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfPlainPoint" nillable="true" type="tns:ArrayOfPlainPoint" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="EncodedGeometryBase" abstract="true">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns0:TransientVO">
            <xsd:sequence />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfEncodedGeometryBase">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="EncodedGeometryBase" nillable="true" type="tns:EncodedGeometryBase" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfEncodedGeometryBase">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfEncodedGeometryBase" nillable="true" type="tns:ArrayOfEncodedGeometryBase" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="ErrorCode">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="REQUEST_INVALID_WKT" />
          <xsd:enumeration value="REQUEST_INVALID_WKB" />
          <xsd:enumeration value="REQUEST_INVALID_KML" />
          <xsd:enumeration value="KML_PLACEMARK_NOT_FOUND" />
          <xsd:enumeration value="CONVERT_GEOMETRY_OBJECT" />
          <xsd:enumeration value="CONVERT_COORDINATE_FORMAT" />
          <xsd:enumeration value="GEOMETRY_ENCODING" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="ArrayOfErrorCode">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ErrorCode" type="tns:ErrorCode" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfErrorCode">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfErrorCode" nillable="true" type="tns:ArrayOfErrorCode" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="KML">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns0:TransientVO">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="wrappedPlacemarks" nillable="true" type="ns1:ArrayOfString" />
            </xsd:sequence>
            <xsd:attribute name="kml" type="xsd:string" use="optional" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfKML">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="KML" nillable="true" type="tns:KML" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfKML">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfKML" nillable="true" type="tns:ArrayOfKML" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="JobStatus">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="QUEUING" />
          <xsd:enumeration value="RUNNING" />
          <xsd:enumeration value="STOPPING" />
          <xsd:enumeration value="SUCCEEDED" />
          <xsd:enumeration value="FAILED" />
          <xsd:enumeration value="DELETED" />
          <xsd:enumeration value="UNKNOWN" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="ArrayOfJobStatus">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="JobStatus" type="tns:JobStatus" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfJobStatus">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfJobStatus" nillable="true" type="tns:ArrayOfJobStatus" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="Job">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns0:TransientVO">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="progress" nillable="true" type="tns:JobProgress" />
            </xsd:sequence>
            <xsd:attribute name="elapsedTime" type="xsd:int" use="required" />
            <xsd:attribute name="id" type="xsd:string" use="optional" />
            <xsd:attribute name="status" type="tns:JobStatus" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfJob">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="Job" nillable="true" type="tns:Job" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfJob">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfJob" nillable="true" type="tns:ArrayOfJob" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="JobProgress" abstract="true">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns0:TransientVO">
            <xsd:sequence />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfJobProgress">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="JobProgress" nillable="true" type="tns:JobProgress" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfJobProgress">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfJobProgress" nillable="true" type="tns:ArrayOfJobProgress" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="BulkProgress">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:JobProgress">
            <xsd:sequence />
            <xsd:attribute name="failed" type="xsd:int" use="required" />
            <xsd:attribute name="remaining" type="xsd:int" use="required" />
            <xsd:attribute name="successful" type="xsd:int" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfBulkProgress">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="BulkProgress" nillable="true" type="tns:BulkProgress" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfBulkProgress">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfBulkProgress" nillable="true" type="tns:ArrayOfBulkProgress" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="DistanceMatrixProgress">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:JobProgress">
            <xsd:sequence />
            <xsd:attribute name="currentRowIndex" type="xsd:int" use="required" />
            <xsd:attribute name="lastRowIndex" type="xsd:int" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfDistanceMatrixProgress">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="DistanceMatrixProgress" nillable="true" type="tns:DistanceMatrixProgress" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfDistanceMatrixProgress">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfDistanceMatrixProgress" nillable="true" type="tns:ArrayOfDistanceMatrixProgress" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="WatchOptions">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns0:TransientVO">
            <xsd:sequence />
            <xsd:attribute name="maximumPollingPeriod" type="xsd:int" use="optional" />
            <xsd:attribute name="progressUpdatePeriod" type="xsd:int" use="optional" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfWatchOptions">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="WatchOptions" nillable="true" type="tns:WatchOptions" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfWatchOptions">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfWatchOptions" nillable="true" type="tns:ArrayOfWatchOptions" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="PlanProgress">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:JobProgress">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="distanceMatrixCalculationProgress" nillable="true" type="tns:DistanceMatrixCalculationProgress" />
              <xsd:element minOccurs="0" maxOccurs="1" name="improvementProgress" nillable="true" type="tns:ImprovementProgress" />
            </xsd:sequence>
            <xsd:attribute name="action" type="xsd:string" use="optional" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfPlanProgress">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="PlanProgress" nillable="true" type="tns:PlanProgress" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfPlanProgress">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfPlanProgress" nillable="true" type="tns:ArrayOfPlanProgress" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="DistanceMatrixCalculationProgress">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns0:TransientVO">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="currentDistanceMatrixProgress" nillable="true" type="tns:DistanceMatrixProgress" />
            </xsd:sequence>
            <xsd:attribute name="currentDimaIndex" type="xsd:int" use="required" />
            <xsd:attribute name="dimaId" type="xsd:int" use="required" />
            <xsd:attribute name="lastDimaIndex" type="xsd:int" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfDistanceMatrixCalculationProgress">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="DistanceMatrixCalculationProgress" nillable="true" type="tns:DistanceMatrixCalculationProgress" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfDistanceMatrixCalculationProgress">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfDistanceMatrixCalculationProgress" nillable="true" type="tns:ArrayOfDistanceMatrixCalculationProgress" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ImprovementProgress">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns0:TransientVO">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="bestPlan" nillable="true" type="tns:KeyFigures" />
              <xsd:element minOccurs="0" maxOccurs="1" name="currentPlan" nillable="true" type="tns:KeyFigures" />
              <xsd:element minOccurs="0" maxOccurs="1" name="initialPlan" nillable="true" type="tns:KeyFigures" />
            </xsd:sequence>
            <xsd:attribute name="availableMachineTime" type="xsd:int" use="required" />
            <xsd:attribute name="iterationIndex" type="xsd:int" use="required" />
            <xsd:attribute name="numberOfImprovements" type="xsd:int" use="required" />
            <xsd:attribute name="usedMachineTime" type="xsd:int" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfImprovementProgress">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ImprovementProgress" nillable="true" type="tns:ImprovementProgress" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfImprovementProgress">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfImprovementProgress" nillable="true" type="tns:ArrayOfImprovementProgress" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="KeyFigures">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns0:TransientVO">
            <xsd:sequence />
            <xsd:attribute name="costOfObjectiveFunction" type="xsd:int" use="required" />
            <xsd:attribute name="numberOfInfeasibleOrders" type="xsd:int" use="required" />
            <xsd:attribute name="numberOfScheduledOrders" type="xsd:int" use="required" />
            <xsd:attribute name="numberOfScheduledVehicles" type="xsd:int" use="required" />
            <xsd:attribute name="numberOfUnscheduledOrders" type="xsd:int" use="required" />
            <xsd:attribute name="totalChainCost" type="xsd:int" use="required" />
            <xsd:attribute name="totalChainPeriod" type="xsd:int" use="required" />
            <xsd:attribute name="totalTourCost" type="xsd:int" use="required" />
            <xsd:attribute name="totalTourCount" type="xsd:int" use="required" />
            <xsd:attribute name="totalTourDistance" type="xsd:int" use="required" />
            <xsd:attribute name="totalTourDrivingPeriod" type="xsd:int" use="required" />
            <xsd:attribute name="totalTourPeriod" type="xsd:int" use="required" />
            <xsd:attribute name="totalTourWaitingPeriod" type="xsd:int" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfKeyFigures">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="KeyFigures" nillable="true" type="tns:KeyFigures" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfKeyFigures">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfKeyFigures" nillable="true" type="tns:ArrayOfKeyFigures" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="OptimizationProgress">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns0:TransientVO">
            <xsd:sequence />
            <xsd:attribute name="currentLoopIndex" type="xsd:int" use="required" />
            <xsd:attribute name="lastLoopIndex" type="xsd:int" use="required" />
            <xsd:attribute name="progress" type="xsd:int" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfOptimizationProgress">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="OptimizationProgress" nillable="true" type="tns:OptimizationProgress" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfOptimizationProgress">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfOptimizationProgress" nillable="true" type="tns:ArrayOfOptimizationProgress" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ClusterProgress">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:JobProgress">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="distanceMatrixProgress" nillable="true" type="tns:DistanceMatrixProgress" />
              <xsd:element minOccurs="0" maxOccurs="1" name="optimizationProgress" nillable="true" type="tns:OptimizationProgress" />
            </xsd:sequence>
            <xsd:attribute name="action" type="xsd:string" use="optional" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfClusterProgress">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ClusterProgress" nillable="true" type="tns:ClusterProgress" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfClusterProgress">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfClusterProgress" nillable="true" type="tns:ArrayOfClusterProgress" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="TerritoryProgress">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:JobProgress">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="distanceMatrixProgress" nillable="true" type="tns:DistanceMatrixProgress" />
            </xsd:sequence>
            <xsd:attribute name="action" type="xsd:string" use="optional" />
            <xsd:attribute name="optimizationProgress" type="xsd:int" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfTerritoryProgress">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="TerritoryProgress" nillable="true" type="tns:TerritoryProgress" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfTerritoryProgress">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfTerritoryProgress" nillable="true" type="tns:ArrayOfTerritoryProgress" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ZoneLoadingProgress">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:JobProgress">
            <xsd:sequence />
            <xsd:attribute name="action" type="xsd:string" use="optional" />
            <xsd:attribute name="optimizationProgress" type="xsd:int" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfZoneLoadingProgress">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ZoneLoadingProgress" nillable="true" type="tns:ZoneLoadingProgress" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfZoneLoadingProgress">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfZoneLoadingProgress" nillable="true" type="tns:ArrayOfZoneLoadingProgress" />
        </xsd:sequence>
      </xsd:complexType>
    </xsd:schema>
    <xsd:schema xmlns:ns2="http://wrappertypes.service.jabba.ptvag.com" xmlns:tns="http://xtour.xserver.ptvag.com" xmlns:ns1="http://value.core.jabba.ptvag.com" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns0="http://common.xserver.ptvag.com" xmlns="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="http://xtour.xserver.ptvag.com">
      <xsd:import namespace="http://wrappertypes.service.jabba.ptvag.com" />
      <xsd:import namespace="http://exception.core.jabba.ptvag.com" />
      <xsd:import namespace="http://common.xserver.ptvag.com" />
      <xsd:import namespace="http://value.core.jabba.ptvag.com" />
      <xsd:complexType name="XTourException">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns3:BusinessException">
            <xsd:sequence />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:element name="XTourException" type="tns:XTourException" />
      <xsd:complexType name="DistanceMatrixByReference">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:DistanceMatrixCalculation">
            <xsd:sequence />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfDistanceMatrixByReference">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="DistanceMatrixByReference" nillable="true" type="tns:DistanceMatrixByReference" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfDistanceMatrixByReference">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfDistanceMatrixByReference" nillable="true" type="tns:ArrayOfDistanceMatrixByReference" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="ErrorCode">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="LICENSE_ERROR" />
          <xsd:enumeration value="PROFILESETTINGS_ERROR" />
          <xsd:enumeration value="MODULE_ERROR" />
          <xsd:enumeration value="ENGINE_ERROR" />
          <xsd:enumeration value="REQUIREDPARAMETER_ERROR" />
          <xsd:enumeration value="INVALIDPARAMETER_ERROR" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="ArrayOfErrorCode">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ErrorCode" type="tns:ErrorCode" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfErrorCode">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfErrorCode" nillable="true" type="tns:ArrayOfErrorCode" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="Restrictions">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="nightTourRestrictions" nillable="true" type="tns:NightTourRestrictions" />
              <xsd:element minOccurs="0" maxOccurs="1" name="tourRestrictions" nillable="true" type="tns:TourRestrictions" />
            </xsd:sequence>
            <xsd:attribute name="maxTourCount" type="xsd:int" use="optional" />
            <xsd:attribute name="maxTransportPointCountPerTour" type="xsd:int" use="optional" />
            <xsd:attribute name="mergeTransportPointCountPerSite" type="xsd:boolean" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfRestrictions">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="Restrictions" nillable="true" type="tns:Restrictions" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfRestrictions">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfRestrictions" nillable="true" type="tns:ArrayOfRestrictions" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="LoadingFunction">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="quantityDependentPeriods" nillable="true" type="tns:QuantityDependentPeriods" />
            </xsd:sequence>
            <xsd:attribute name="exponent" type="xsd:int" use="optional" />
            <xsd:attribute name="fixedPeriod" type="xsd:int" use="required" />
            <xsd:attribute name="fixedSitePeriod" type="xsd:int" use="optional" />
            <xsd:attribute name="id" type="xsd:int" use="required" />
            <xsd:attribute name="maxPeriod" type="xsd:int" use="optional" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfLoadingFunction">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="LoadingFunction" nillable="true" type="tns:LoadingFunction" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfLoadingFunction">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfLoadingFunction" nillable="true" type="tns:ArrayOfLoadingFunction" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="QuantityDependentPeriods">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="wrappedSecondsPerQuantityUnit" nillable="true" type="ns2:ArrayOfDouble" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfQuantityDependentPeriods">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="QuantityDependentPeriods" nillable="true" type="tns:QuantityDependentPeriods" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfQuantityDependentPeriods">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfQuantityDependentPeriods" nillable="true" type="tns:ArrayOfQuantityDependentPeriods" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="PlanningParams" abstract="true">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="wrappedDistanceMatrixCalculation" nillable="true" type="tns:ArrayOfDistanceMatrixCalculation" />
              <xsd:element minOccurs="0" maxOccurs="1" name="wrappedLoadingFunctions" nillable="true" type="tns:ArrayOfLoadingFunction" />
              <xsd:element minOccurs="0" maxOccurs="1" name="wrappedProductIncompatibilities" nillable="true" type="tns:ArrayOfProductIncompatibility" />
              <xsd:element minOccurs="0" maxOccurs="1" name="wrappedRegulations" nillable="true" type="tns:ArrayOfRegulationsBase" />
              <xsd:element minOccurs="0" maxOccurs="1" name="restrictions" nillable="true" type="tns:Restrictions" />
            </xsd:sequence>
            <xsd:attribute name="avoidEarlyRecreations" type="xsd:boolean" use="required" />
            <xsd:attribute name="coDriverTransportPointLoadingFactor" type="xsd:double" use="optional" />
            <xsd:attribute name="coDriverTransportPointsInSeparateTours" type="xsd:boolean" use="required" />
            <xsd:attribute name="directDistanceFactor" type="xsd:double" use="optional" />
            <xsd:attribute name="directVelocity" type="xsd:int" use="optional" />
            <xsd:attribute name="enableMultiCompartmentConstraint" type="xsd:boolean" use="required" />
            <xsd:attribute name="indexOfBlockedQuantity" type="xsd:int" use="optional" />
            <xsd:attribute name="indexOfBlockingQuantity" type="xsd:int" use="optional" />
            <xsd:attribute name="useDirectDistanceFallback" type="xsd:boolean" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfPlanningParams">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="PlanningParams" nillable="true" type="tns:PlanningParams" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfPlanningParams">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfPlanningParams" nillable="true" type="tns:ArrayOfPlanningParams" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="BalancingGoal">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="TOUR_PERIOD" />
          <xsd:enumeration value="QUANTITY" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="ArrayOfBalancingGoal">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="BalancingGoal" type="tns:BalancingGoal" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfBalancingGoal">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfBalancingGoal" nillable="true" type="tns:ArrayOfBalancingGoal" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="StandardParams">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:PlanningParams">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="goalImportance" nillable="true" type="tns:GoalImportance" />
            </xsd:sequence>
            <xsd:attribute name="availableMachineTime" type="xsd:int" use="optional" />
            <xsd:attribute name="basicConstructionMethod" type="xsd:string" use="optional" />
            <xsd:attribute name="constructionStep" type="xsd:boolean" use="optional" />
            <xsd:attribute name="endSequencingStep" type="xsd:boolean" use="optional" />
            <xsd:attribute name="improvementMethod" type="xsd:string" use="optional" />
            <xsd:attribute name="improvementStep" type="xsd:boolean" use="optional" />
            <xsd:attribute name="maximumNumberOfUnscheduledOrdersToBeAnalyzed" type="xsd:int" use="optional" />
            <xsd:attribute name="middleSequencingStep" type="xsd:boolean" use="optional" />
            <xsd:attribute name="sequencingMethod" type="xsd:string" use="optional" />
            <xsd:attribute name="startSequencingStep" type="xsd:boolean" use="optional" />
            <xsd:attribute name="tourReductionStep" type="xsd:boolean" use="optional" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfStandardParams">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="StandardParams" nillable="true" type="tns:StandardParams" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfStandardParams">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfStandardParams" nillable="true" type="tns:ArrayOfStandardParams" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="BalancingParams">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:StandardParams">
            <xsd:sequence />
            <xsd:attribute name="balancingConstructionMethod" type="xsd:string" use="optional" />
            <xsd:attribute name="balancingGoal" type="tns:BalancingGoal" use="required" />
            <xsd:attribute name="balancingImportance" type="xsd:int" use="optional" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfBalancingParams">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="BalancingParams" nillable="true" type="tns:BalancingParams" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfBalancingParams">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfBalancingParams" nillable="true" type="tns:ArrayOfBalancingParams" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="AreaParams">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:StandardParams">
            <xsd:sequence />
            <xsd:attribute name="allowMultipleToursPerArea" type="xsd:boolean" use="optional" />
            <xsd:attribute name="ignoreAreaNumbersInImprovementStep" type="xsd:boolean" use="optional" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfAreaParams">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="AreaParams" nillable="true" type="tns:AreaParams" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfAreaParams">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfAreaParams" nillable="true" type="tns:ArrayOfAreaParams" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="SequencingParams">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:PlanningParams">
            <xsd:sequence />
            <xsd:attribute name="availableMachineTime" type="xsd:int" use="optional" />
            <xsd:attribute name="fixedEndTransportPoints" type="xsd:int" use="optional" />
            <xsd:attribute name="fixedStartTransportPoints" type="xsd:int" use="optional" />
            <xsd:attribute name="maximumNumberOfUnscheduledOrdersToBeAnalyzed" type="xsd:int" use="optional" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfSequencingParams">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="SequencingParams" nillable="true" type="tns:SequencingParams" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfSequencingParams">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfSequencingParams" nillable="true" type="tns:ArrayOfSequencingParams" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="SequencingTransportAB">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:SequencingTransportOrder">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="quantities" nillable="true" type="tns:Quantities" />
              <xsd:element minOccurs="0" maxOccurs="1" name="transportPointA" nillable="true" type="tns:TransportPoint" />
              <xsd:element minOccurs="0" maxOccurs="1" name="transportPointB" nillable="true" type="tns:TransportPoint" />
            </xsd:sequence>
            <xsd:attribute name="maxTransportPeriod" type="xsd:int" use="optional" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfSequencingTransportAB">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="SequencingTransportAB" nillable="true" type="tns:SequencingTransportAB" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfSequencingTransportAB">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfSequencingTransportAB" nillable="true" type="tns:ArrayOfSequencingTransportAB" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="AbstractTransportOrder" abstract="true">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence />
            <xsd:attribute name="id" type="xsd:int" use="required" />
            <xsd:attribute name="priority" type="xsd:int" use="optional" />
            <xsd:attribute name="productId" type="xsd:int" use="optional" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfAbstractTransportOrder">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="AbstractTransportOrder" nillable="true" type="tns:AbstractTransportOrder" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfAbstractTransportOrder">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfAbstractTransportOrder" nillable="true" type="tns:ArrayOfAbstractTransportOrder" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="OpeningIntervalConstraint">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="START_OF_SERVICE" />
          <xsd:enumeration value="COMPLETE_SERVICE" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="ArrayOfOpeningIntervalConstraint">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="OpeningIntervalConstraint" type="tns:OpeningIntervalConstraint" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfOpeningIntervalConstraint">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfOpeningIntervalConstraint" nillable="true" type="tns:ArrayOfOpeningIntervalConstraint" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="SequencingTransportDepot">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:SequencingTransportOrder">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="deliveryQuantities" nillable="true" type="tns:Quantities" />
              <xsd:element minOccurs="0" maxOccurs="1" name="pickupQuantities" nillable="true" type="tns:Quantities" />
              <xsd:element minOccurs="0" maxOccurs="1" name="transportPoint" nillable="true" type="tns:TransportPoint" />
            </xsd:sequence>
            <xsd:attribute name="depotAvailabilityForDeliveries" type="xsd:int" use="optional" />
            <xsd:attribute name="depotAvailabilityForPickups" type="xsd:int" use="optional" />
            <xsd:attribute name="maxTransportPeriodForDeliveries" type="xsd:int" use="optional" />
            <xsd:attribute name="maxTransportPeriodForPickups" type="xsd:int" use="optional" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfSequencingTransportDepot">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="SequencingTransportDepot" nillable="true" type="tns:SequencingTransportDepot" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfSequencingTransportDepot">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfSequencingTransportDepot" nillable="true" type="tns:ArrayOfSequencingTransportDepot" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="TransportOrder" abstract="true">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:AbstractTransportOrder">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="maxLoadingArea" nillable="true" type="tns:LoadingArea" />
              <xsd:element minOccurs="0" maxOccurs="1" name="minLoadingArea" nillable="true" type="tns:LoadingArea" />
              <xsd:element minOccurs="0" maxOccurs="1" name="wrappedVehicleCategories" nillable="true" type="ns2:ArrayOfInt" />
              <xsd:element minOccurs="0" maxOccurs="1" name="wrappedVehicleExclusions" nillable="true" type="ns2:ArrayOfInt" />
              <xsd:element minOccurs="0" maxOccurs="1" name="wrappedVehicleRequirements" nillable="true" type="ns2:ArrayOfInt" />
            </xsd:sequence>
            <xsd:attribute name="areaNumber" type="xsd:int" use="optional" />
            <xsd:attribute name="trailerLoadingForbidden" type="xsd:boolean" use="required" />
            <xsd:attribute name="vehicleId" type="xsd:int" use="optional" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfTransportOrder">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="TransportOrder" nillable="true" type="tns:TransportOrder" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfTransportOrder">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfTransportOrder" nillable="true" type="tns:ArrayOfTransportOrder" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="TransportPoint">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:LogisticPoint">
            <xsd:sequence />
            <xsd:attribute name="allowServiceSplit" type="xsd:boolean" use="required" />
            <xsd:attribute name="areaNumberPosition" type="xsd:int" use="optional" />
            <xsd:attribute name="coDriverRequired" type="xsd:boolean" use="required" />
            <xsd:attribute name="openingIntervalConstraint" type="tns:OpeningIntervalConstraint" use="required" />
            <xsd:attribute name="servicePeriod" type="xsd:int" use="required" />
            <xsd:attribute name="tourSection" type="xsd:int" use="required" />
            <xsd:attribute name="useServicePeriodForRecreation" type="xsd:boolean" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfTransportPoint">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="TransportPoint" nillable="true" type="tns:TransportPoint" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfTransportPoint">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfTransportPoint" nillable="true" type="tns:ArrayOfTransportPoint" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="Depot">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:LogisticPoint">
            <xsd:sequence />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfDepot">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="Depot" nillable="true" type="tns:Depot" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfDepot">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfDepot" nillable="true" type="tns:ArrayOfDepot" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="TransportAB">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:TransportOrder">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="quantities" nillable="true" type="tns:Quantities" />
              <xsd:element minOccurs="0" maxOccurs="1" name="transportPointA" nillable="true" type="tns:TransportPoint" />
              <xsd:element minOccurs="0" maxOccurs="1" name="transportPointB" nillable="true" type="tns:TransportPoint" />
            </xsd:sequence>
            <xsd:attribute name="maxTransportPeriod" type="xsd:int" use="optional" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfTransportAB">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="TransportAB" nillable="true" type="tns:TransportAB" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfTransportAB">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfTransportAB" nillable="true" type="tns:ArrayOfTransportAB" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="SequencingTransportOrder" abstract="true">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:AbstractTransportOrder">
            <xsd:sequence />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfSequencingTransportOrder">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="SequencingTransportOrder" nillable="true" type="tns:SequencingTransportOrder" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfSequencingTransportOrder">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfSequencingTransportOrder" nillable="true" type="tns:ArrayOfSequencingTransportOrder" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="TransportDepot">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:TransportOrder">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="deliveryQuantities" nillable="true" type="tns:Quantities" />
              <xsd:element minOccurs="0" maxOccurs="1" name="wrappedDepotIds" nillable="true" type="ns2:ArrayOfInt" />
              <xsd:element minOccurs="0" maxOccurs="1" name="pickupQuantities" nillable="true" type="tns:Quantities" />
              <xsd:element minOccurs="0" maxOccurs="1" name="transportPoint" nillable="true" type="tns:TransportPoint" />
            </xsd:sequence>
            <xsd:attribute name="depotAvailabilityForDeliveries" type="xsd:int" use="optional" />
            <xsd:attribute name="depotAvailabilityForPickups" type="xsd:int" use="optional" />
            <xsd:attribute name="maxTransportPeriodForDeliveries" type="xsd:int" use="optional" />
            <xsd:attribute name="maxTransportPeriodForPickups" type="xsd:int" use="optional" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfTransportDepot">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="TransportDepot" nillable="true" type="tns:TransportDepot" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfTransportDepot">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfTransportDepot" nillable="true" type="tns:ArrayOfTransportDepot" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="LogisticPoint" abstract="true">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="location" nillable="true" type="ns0:Point" />
              <xsd:element minOccurs="0" maxOccurs="1" name="wrappedOpeningIntervals" nillable="true" type="tns:ArrayOfInterval" />
            </xsd:sequence>
            <xsd:attribute name="description" type="xsd:string" use="optional" />
            <xsd:attribute name="extraSitePeriod" type="xsd:int" use="optional" />
            <xsd:attribute name="id" type="xsd:int" use="required" />
            <xsd:attribute name="siteId" type="xsd:int" use="optional" />
            <xsd:attribute name="unloadingFunctionId" type="xsd:int" use="optional" />
            <xsd:attribute name="uploadingFunctionId" type="xsd:int" use="optional" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfLogisticPoint">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="LogisticPoint" nillable="true" type="tns:LogisticPoint" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfLogisticPoint">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfLogisticPoint" nillable="true" type="tns:ArrayOfLogisticPoint" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="Interval">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence />
            <xsd:attribute name="from" type="xsd:int" use="required" />
            <xsd:attribute name="till" type="xsd:int" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfInterval">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="Interval" nillable="true" type="tns:Interval" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfInterval">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfInterval" nillable="true" type="tns:ArrayOfInterval" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="Vehicle">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:BaseVehicle">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="wrappedAreaNumbers" nillable="true" type="ns2:ArrayOfInt" />
              <xsd:element minOccurs="0" maxOccurs="1" name="endLocation" nillable="true" type="ns0:Point" />
              <xsd:element minOccurs="0" maxOccurs="1" name="maxLoadingArea" nillable="true" type="tns:LoadingArea" />
              <xsd:element minOccurs="0" maxOccurs="1" name="minLoadingArea" nillable="true" type="tns:LoadingArea" />
              <xsd:element minOccurs="0" maxOccurs="1" name="restrictions" nillable="true" type="tns:VehicleRestrictions" />
              <xsd:element minOccurs="0" maxOccurs="1" name="startLocation" nillable="true" type="ns0:Point" />
              <xsd:element minOccurs="0" maxOccurs="1" name="wrappedTransportEquipments" nillable="true" type="ns2:ArrayOfInt" />
            </xsd:sequence>
            <xsd:attribute name="category" type="xsd:int" use="optional" />
            <xsd:attribute name="description" type="xsd:string" use="optional" />
            <xsd:attribute name="id" type="xsd:int" use="required" />
            <xsd:attribute name="ignoreIntermediatePeriodBeforeFirstTour" type="xsd:boolean" use="required" />
            <xsd:attribute name="intermediatePeriod" type="xsd:int" use="optional" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfVehicle">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="Vehicle" nillable="true" type="tns:Vehicle" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfVehicle">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfVehicle" nillable="true" type="tns:ArrayOfVehicle" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="AbstractCosts" abstract="true">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence />
            <xsd:attribute name="costsPerKm" type="xsd:double" use="required" />
            <xsd:attribute name="fixedCosts" type="xsd:double" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfAbstractCosts">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="AbstractCosts" nillable="true" type="tns:AbstractCosts" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfAbstractCosts">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfAbstractCosts" nillable="true" type="tns:ArrayOfAbstractCosts" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="SequencingVehicle">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:BaseVehicle">
            <xsd:sequence />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfSequencingVehicle">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="SequencingVehicle" nillable="true" type="tns:SequencingVehicle" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfSequencingVehicle">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfSequencingVehicle" nillable="true" type="tns:ArrayOfSequencingVehicle" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="TourPointType">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="TRANSPORT_POINT" />
          <xsd:enumeration value="DEPOT" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="ArrayOfTourPointType">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="TourPointType" type="tns:TourPointType" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfTourPointType">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfTourPointType" nillable="true" type="tns:ArrayOfTourPointType" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="Plan">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="wrappedChains" nillable="true" type="tns:ArrayOfChain" />
              <xsd:element minOccurs="0" maxOccurs="1" name="result" nillable="true" type="tns:PlanResult" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfPlan">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="Plan" nillable="true" type="tns:Plan" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfPlan">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfPlan" nillable="true" type="tns:ArrayOfPlan" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="SequencingTourResult">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:AbstractTourResult">
            <xsd:sequence />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfSequencingTourResult">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="SequencingTourResult" nillable="true" type="tns:SequencingTourResult" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfSequencingTourResult">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfSequencingTourResult" nillable="true" type="tns:ArrayOfSequencingTourResult" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="PlanResult">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="wrappedScheduledOrderIds" nillable="true" type="ns2:ArrayOfInt" />
              <xsd:element minOccurs="0" maxOccurs="1" name="wrappedScheduledVehicleIds" nillable="true" type="ns2:ArrayOfInt" />
              <xsd:element minOccurs="0" maxOccurs="1" name="wrappedUnscheduledOrderAnalysisResults" nillable="true" type="tns:ArrayOfUnscheduledOrderAnalysisResult" />
              <xsd:element minOccurs="0" maxOccurs="1" name="wrappedUnscheduledOrderIds" nillable="true" type="ns2:ArrayOfInt" />
              <xsd:element minOccurs="0" maxOccurs="1" name="wrappedUnscheduledVehicleIds" nillable="true" type="ns2:ArrayOfInt" />
            </xsd:sequence>
            <xsd:attribute name="totalChainCosts" type="xsd:double" use="required" />
            <xsd:attribute name="totalTourCosts" type="xsd:double" use="required" />
            <xsd:attribute name="totalTourCount" type="xsd:int" use="required" />
            <xsd:attribute name="totalTourDistance" type="xsd:int" use="required" />
            <xsd:attribute name="totalTourDrivingPeriod" type="xsd:int" use="required" />
            <xsd:attribute name="totalTourPeriod" type="xsd:int" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfPlanResult">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="PlanResult" nillable="true" type="tns:PlanResult" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfPlanResult">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfPlanResult" nillable="true" type="tns:ArrayOfPlanResult" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="SequencingPlan">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="result" nillable="true" type="tns:SequencingPlanResult" />
              <xsd:element minOccurs="0" maxOccurs="1" name="tour" nillable="true" type="tns:SequencingTour" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfSequencingPlan">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="SequencingPlan" nillable="true" type="tns:SequencingPlan" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfSequencingPlan">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfSequencingPlan" nillable="true" type="tns:ArrayOfSequencingPlan" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="SequencingTourPoint">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:AbstractTourPoint">
            <xsd:sequence />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfSequencingTourPoint">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="SequencingTourPoint" nillable="true" type="tns:SequencingTourPoint" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfSequencingTourPoint">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfSequencingTourPoint" nillable="true" type="tns:ArrayOfSequencingTourPoint" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="Chain">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="result" nillable="true" type="tns:ChainResult" />
              <xsd:element minOccurs="0" maxOccurs="1" name="wrappedTours" nillable="true" type="tns:ArrayOfTour" />
            </xsd:sequence>
            <xsd:attribute name="vehicleId" type="xsd:int" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfChain">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="Chain" nillable="true" type="tns:Chain" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfChain">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfChain" nillable="true" type="tns:ArrayOfChain" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ChainResult">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="wrappedTourEvents" nillable="true" type="tns:ArrayOfTourEvent" />
            </xsd:sequence>
            <xsd:attribute name="chainCosts" type="xsd:double" use="required" />
            <xsd:attribute name="distanceFromStartLocation" type="xsd:int" use="required" />
            <xsd:attribute name="distanceToEndLocation" type="xsd:int" use="required" />
            <xsd:attribute name="drivingPeriod" type="xsd:int" use="required" />
            <xsd:attribute name="endTime" type="xsd:int" use="required" />
            <xsd:attribute name="periodFromStartLocation" type="xsd:int" use="required" />
            <xsd:attribute name="periodToEndLocation" type="xsd:int" use="required" />
            <xsd:attribute name="remainingPeriods" type="xsd:string" use="optional" />
            <xsd:attribute name="vehicleDescription" type="xsd:string" use="optional" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfChainResult">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ChainResult" nillable="true" type="tns:ChainResult" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfChainResult">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfChainResult" nillable="true" type="tns:ArrayOfChainResult" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="TourPointViolation">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="OPENING_INTERVAL" />
          <xsd:enumeration value="SERVICE_SPLIT" />
          <xsd:enumeration value="MAX_TRANSPORT_PERIOD" />
          <xsd:enumeration value="TRANSPORT_AB_DIRECTION" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="ArrayOfTourPointViolation">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="TourPointViolation" type="tns:TourPointViolation" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfTourPointViolation">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfTourPointViolation" nillable="true" type="tns:ArrayOfTourPointViolation" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="TourPointResult">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="currentQuantities" nillable="true" type="tns:Quantities" />
              <xsd:element minOccurs="1" maxOccurs="1" name="wrappedTourPointViolations" nillable="true" type="ns2:ArrayOfString" />
            </xsd:sequence>
            <xsd:attribute name="arrivalTime" type="xsd:int" use="required" />
            <xsd:attribute name="breakPeriodAtTourPoint" type="xsd:int" use="required" />
            <xsd:attribute name="breakPeriodOnRoad" type="xsd:int" use="required" />
            <xsd:attribute name="delay" type="xsd:int" use="required" />
            <xsd:attribute name="departureTime" type="xsd:int" use="required" />
            <xsd:attribute name="drivingDistance" type="xsd:int" use="required" />
            <xsd:attribute name="drivingPeriod" type="xsd:int" use="required" />
            <xsd:attribute name="earliness" type="xsd:int" use="required" />
            <xsd:attribute name="endServiceTime" type="xsd:int" use="required" />
            <xsd:attribute name="orderId" type="xsd:int" use="optional" />
            <xsd:attribute name="restPeriodAtTourPoint" type="xsd:int" use="required" />
            <xsd:attribute name="restPeriodOnRoad" type="xsd:int" use="required" />
            <xsd:attribute name="servicePeriod" type="xsd:int" use="required" />
            <xsd:attribute name="startDistance" type="xsd:int" use="required" />
            <xsd:attribute name="startServiceTime" type="xsd:int" use="required" />
            <xsd:attribute name="waitingPeriod" type="xsd:int" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfTourPointResult">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="TourPointResult" nillable="true" type="tns:TourPointResult" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfTourPointResult">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfTourPointResult" nillable="true" type="tns:ArrayOfTourPointResult" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="Tour">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:AbstractTour">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="restrictions" nillable="true" type="tns:TourRestrictions" />
              <xsd:element minOccurs="0" maxOccurs="1" name="result" nillable="true" type="tns:TourResult" />
              <xsd:element minOccurs="0" maxOccurs="1" name="wrappedTourPoints" nillable="true" type="tns:ArrayOfTourPoint" />
            </xsd:sequence>
            <xsd:attribute name="areaNumber" type="xsd:int" use="optional" />
            <xsd:attribute name="description" type="xsd:string" use="optional" />
            <xsd:attribute name="id" type="xsd:int" use="required" />
            <xsd:attribute name="ignoreIntermediatePeriodOfPreviousTour" type="xsd:boolean" use="required" />
            <xsd:attribute name="tourPointFixation" type="tns:TourPointFixation" use="required" />
            <xsd:attribute name="trailerFixed" type="xsd:boolean" use="optional" />
            <xsd:attribute name="trailerId" type="xsd:int" use="optional" />
            <xsd:attribute name="trainId" type="xsd:int" use="optional" />
            <xsd:attribute name="vehicleFixed" type="xsd:boolean" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfTour">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="Tour" nillable="true" type="tns:Tour" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfTour">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfTour" nillable="true" type="tns:ArrayOfTour" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="TourViolation">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="ORDER_VEHICLE_ID" />
          <xsd:enumeration value="ORDER_VEHICLE_CATEGORY" />
          <xsd:enumeration value="ORDER_VEHICLE_REQUIREMENT" />
          <xsd:enumeration value="ORDER_VEHICLE_EXCLUSION" />
          <xsd:enumeration value="ORDER_AREA_NUMBER" />
          <xsd:enumeration value="ORDER_DEPOT_ID" />
          <xsd:enumeration value="TOUR_POINT_OPENING_INTERVAL" />
          <xsd:enumeration value="TOUR_POINT_SERVICE_SPLIT" />
          <xsd:enumeration value="TOUR_POINT_MAX_TRANSPORT_PERIOD" />
          <xsd:enumeration value="TOUR_POINT_TOUR_SECTION" />
          <xsd:enumeration value="TOUR_POINT_AREA_NUMBER_POSITION" />
          <xsd:enumeration value="VEHICLE_DEPOT_ID" />
          <xsd:enumeration value="VEHICLE_AREA_NUMBER" />
          <xsd:enumeration value="VEHICLE_OPERATING_INTERVAL" />
          <xsd:enumeration value="VEHICLE_CAPACITY" />
          <xsd:enumeration value="VEHICLE_MAX_TOUR_COUNT_PER_CHAIN" />
          <xsd:enumeration value="VEHICLE_MAX_DRIVING_PERIOD_PER_CHAIN" />
          <xsd:enumeration value="VEHICLE_MAX_TRANSPORT_POINT_COUNT_PER_TOUR" />
          <xsd:enumeration value="TRAILER_LOADING_VIOLATION" />
          <xsd:enumeration value="MAX_TRANSPORT_POINT_COUNT_PER_TOUR" />
          <xsd:enumeration value="MAX_PERIOD_PER_TOUR" />
          <xsd:enumeration value="MAX_DRIVING_PERIOD_PER_TOUR" />
          <xsd:enumeration value="MAX_DISTANCE_PER_TOUR" />
          <xsd:enumeration value="MAX_DISTANCE_FROM_FIRST_TO_LAST_TRANSPORT_POINT_PER_TOUR" />
          <xsd:enumeration value="MAX_DISTANCE_BETWEEN_TRANSPORT_POINTS" />
          <xsd:enumeration value="FIXED_START_TIME" />
          <xsd:enumeration value="SINGLE_OPERATION_INTERVAL" />
          <xsd:enumeration value="AVAILABILITY" />
          <xsd:enumeration value="TRANSPORT_AB_COMPLEMENT" />
          <xsd:enumeration value="TRANSPORT_AB_DIRECTION" />
          <xsd:enumeration value="TOUR_POINT_NO_CODRIVER_VEHICLE" />
          <xsd:enumeration value="TOUR_POINT_CODRIVER_NO_SEPARATE_TOUR" />
          <xsd:enumeration value="TOUR_POINT_LOADING_AREA" />
          <xsd:enumeration value="TOUR_POINT_FIXATION" />
          <xsd:enumeration value="BREAK_AND_REST_REGULATION" />
          <xsd:enumeration value="INCOMPATIBLE_PRODUCTS" />
          <xsd:enumeration value="ONLY_ONE_TOUR_PER_VEHICLE_INTERVAL" />
          <xsd:enumeration value="INTERMEDIATE_PERIOD" />
          <xsd:enumeration value="INACCESSIBLE_RELATIONS_USED" />
          <xsd:enumeration value="MAX_PERIOD_PER_NIGHT_TOUR" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="ArrayOfTourViolation">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="TourViolation" type="tns:TourViolation" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfTourViolation">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfTourViolation" nillable="true" type="tns:ArrayOfTourViolation" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="TourPoint">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:AbstractTourPoint">
            <xsd:sequence />
            <xsd:attribute name="remainPlanned" type="xsd:boolean" use="required" />
            <xsd:attribute name="tourFixed" type="xsd:boolean" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfTourPoint">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="TourPoint" nillable="true" type="tns:TourPoint" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfTourPoint">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfTourPoint" nillable="true" type="tns:ArrayOfTourPoint" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="SequencingTour">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:AbstractTour">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="result" nillable="true" type="tns:SequencingTourResult" />
              <xsd:element minOccurs="0" maxOccurs="1" name="wrappedTourPoints" nillable="true" type="tns:ArrayOfSequencingTourPoint" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfSequencingTour">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="SequencingTour" nillable="true" type="tns:SequencingTour" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfSequencingTour">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfSequencingTour" nillable="true" type="tns:ArrayOfSequencingTour" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="TourPointFixation">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="NONE" />
          <xsd:enumeration value="NO_TOUR_POINT_OUT" />
          <xsd:enumeration value="NO_TOUR_POINT_IN_AND_OUT" />
          <xsd:enumeration value="COMPLETELY_FIXED" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="ArrayOfTourPointFixation">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="TourPointFixation" type="tns:TourPointFixation" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfTourPointFixation">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfTourPointFixation" nillable="true" type="tns:ArrayOfTourPointFixation" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="TourResult">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:AbstractTourResult">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="maxLoadingArea" nillable="true" type="tns:LoadingArea" />
              <xsd:element minOccurs="0" maxOccurs="1" name="minLoadingArea" nillable="true" type="tns:LoadingArea" />
              <xsd:element minOccurs="0" maxOccurs="1" name="wrappedVehicleExclusions" nillable="true" type="ns2:ArrayOfInt" />
              <xsd:element minOccurs="0" maxOccurs="1" name="wrappedVehicleRequirements" nillable="true" type="ns2:ArrayOfInt" />
            </xsd:sequence>
            <xsd:attribute name="trailerDescription" type="xsd:string" use="optional" />
            <xsd:attribute name="trainDescription" type="xsd:string" use="optional" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfTourResult">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="TourResult" nillable="true" type="tns:TourResult" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfTourResult">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfTourResult" nillable="true" type="tns:ArrayOfTourResult" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="AbstractTour" abstract="true">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence />
            <xsd:attribute name="startTimeEarliest" type="xsd:int" use="optional" />
            <xsd:attribute name="startTimeFixed" type="xsd:boolean" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfAbstractTour">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="AbstractTour" nillable="true" type="tns:AbstractTour" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfAbstractTour">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfAbstractTour" nillable="true" type="tns:ArrayOfAbstractTour" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="AbstractTourPoint" abstract="true">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="result" nillable="true" type="tns:TourPointResult" />
            </xsd:sequence>
            <xsd:attribute name="description" type="xsd:string" use="optional" />
            <xsd:attribute name="id" type="xsd:int" use="required" />
            <xsd:attribute name="type" type="tns:TourPointType" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfAbstractTourPoint">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="AbstractTourPoint" nillable="true" type="tns:AbstractTourPoint" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfAbstractTourPoint">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfAbstractTourPoint" nillable="true" type="tns:ArrayOfAbstractTourPoint" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="AbstractTourResult" abstract="true">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="deliveryQuantities" nillable="true" type="tns:Quantities" />
              <xsd:element minOccurs="0" maxOccurs="1" name="maxQuantities" nillable="true" type="tns:Quantities" />
              <xsd:element minOccurs="0" maxOccurs="1" name="pickupQuantities" nillable="true" type="tns:Quantities" />
              <xsd:element minOccurs="0" maxOccurs="1" name="totalCosts" nillable="true" type="tns:TotalCosts" />
              <xsd:element minOccurs="1" maxOccurs="1" name="wrappedViolations" nillable="true" type="ns2:ArrayOfString" />
            </xsd:sequence>
            <xsd:attribute name="breakPeriod" type="xsd:int" use="required" />
            <xsd:attribute name="coDriverRequired" type="xsd:boolean" use="required" />
            <xsd:attribute name="depotAvailabilityForDeliveries" type="xsd:int" use="optional" />
            <xsd:attribute name="depotAvailabilityForPickups" type="xsd:int" use="optional" />
            <xsd:attribute name="depotUnloadingPeriod" type="xsd:int" use="required" />
            <xsd:attribute name="depotUploadingPeriod" type="xsd:int" use="required" />
            <xsd:attribute name="distance" type="xsd:int" use="required" />
            <xsd:attribute name="distanceFromFirstToLastTransportPoint" type="xsd:int" use="required" />
            <xsd:attribute name="drivingPeriod" type="xsd:int" use="required" />
            <xsd:attribute name="earliness" type="xsd:int" use="required" />
            <xsd:attribute name="maxDistanceBetweenTransportPoints" type="xsd:int" use="required" />
            <xsd:attribute name="period" type="xsd:int" use="required" />
            <xsd:attribute name="remainingPeriods" type="xsd:string" use="optional" />
            <xsd:attribute name="restPeriod" type="xsd:int" use="required" />
            <xsd:attribute name="servicePeriod" type="xsd:int" use="required" />
            <xsd:attribute name="startTime" type="xsd:int" use="required" />
            <xsd:attribute name="startTimeLatest" type="xsd:int" use="required" />
            <xsd:attribute name="tourChanged" type="xsd:boolean" use="required" />
            <xsd:attribute name="transportPointCount" type="xsd:int" use="required" />
            <xsd:attribute name="waitingPeriod" type="xsd:int" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfAbstractTourResult">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="AbstractTourResult" nillable="true" type="tns:AbstractTourResult" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfAbstractTourResult">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfAbstractTourResult" nillable="true" type="tns:ArrayOfAbstractTourResult" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="BaseVehicle" abstract="true">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:AbstractVehicle">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="capacities" nillable="true" type="tns:Capacities" />
              <xsd:element minOccurs="0" maxOccurs="1" name="costs" nillable="true" type="tns:VehicleCosts" />
              <xsd:element minOccurs="0" maxOccurs="1" name="driverSettings" nillable="true" type="tns:DriverSettings" />
            </xsd:sequence>
            <xsd:attribute name="coDriverStatus" type="tns:CoDriverStatus" use="required" />
            <xsd:attribute name="departureTimeFixed" type="xsd:int" use="optional" />
            <xsd:attribute name="depotUnloadingFunctionId" type="xsd:int" use="optional" />
            <xsd:attribute name="depotUploadingFunctionId" type="xsd:int" use="optional" />
            <xsd:attribute name="dimaId" type="xsd:int" use="optional" />
            <xsd:attribute name="drivingPeriodFactor" type="xsd:double" use="optional" />
            <xsd:attribute name="ignoreProductIncompatibilities" type="xsd:boolean" use="optional" />
            <xsd:attribute name="ignoreTransportPointServicePeriod" type="xsd:boolean" use="required" />
            <xsd:attribute name="isPreloaded" type="xsd:boolean" use="required" />
            <xsd:attribute name="minimumFreeCapacityForBlockingCompartment" type="xsd:int" use="optional" />
            <xsd:attribute name="servicePeriodFactor" type="xsd:double" use="optional" />
            <xsd:attribute name="toursMustFitIntoSingleOperatingInterval" type="xsd:boolean" use="required" />
            <xsd:attribute name="transportPointUnloadingFunctionId" type="xsd:int" use="optional" />
            <xsd:attribute name="transportPointUploadingFunctionId" type="xsd:int" use="optional" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfBaseVehicle">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="BaseVehicle" nillable="true" type="tns:BaseVehicle" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfBaseVehicle">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfBaseVehicle" nillable="true" type="tns:ArrayOfBaseVehicle" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="DistanceMatrixByRoad">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:DistanceMatrixCalculation">
            <xsd:sequence />
            <xsd:attribute name="deleteAfterUsage" type="xsd:boolean" use="required" />
            <xsd:attribute name="deleteBeforeUsage" type="xsd:boolean" use="required" />
            <xsd:attribute name="enforceHighPerformanceRouting" type="xsd:boolean" use="optional" />
            <xsd:attribute name="profileName" type="xsd:string" use="optional" />
            <xsd:attribute name="referenceTime" type="xsd:dateTime" use="optional" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfDistanceMatrixByRoad">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="DistanceMatrixByRoad" nillable="true" type="tns:DistanceMatrixByRoad" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfDistanceMatrixByRoad">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfDistanceMatrixByRoad" nillable="true" type="tns:ArrayOfDistanceMatrixByRoad" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="DistanceMatrixCalculation" abstract="true">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence />
            <xsd:attribute name="dimaId" type="xsd:int" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfDistanceMatrixCalculation">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="DistanceMatrixCalculation" nillable="true" type="tns:DistanceMatrixCalculation" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfDistanceMatrixCalculation">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfDistanceMatrixCalculation" nillable="true" type="tns:ArrayOfDistanceMatrixCalculation" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="AbstractVehicle" abstract="true">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="wrappedOperatingIntervals" nillable="true" type="tns:ArrayOfInterval" />
            </xsd:sequence>
            <xsd:attribute name="depotIdEnd" type="xsd:int" use="required" />
            <xsd:attribute name="depotIdStart" type="xsd:int" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfAbstractVehicle">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="AbstractVehicle" nillable="true" type="tns:AbstractVehicle" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfAbstractVehicle">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfAbstractVehicle" nillable="true" type="tns:ArrayOfAbstractVehicle" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="Fleet">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="wrappedTrailers" nillable="true" type="tns:ArrayOfTrailer" />
              <xsd:element minOccurs="0" maxOccurs="1" name="wrappedTrains" nillable="true" type="tns:ArrayOfTrain" />
              <xsd:element minOccurs="0" maxOccurs="1" name="wrappedVehicles" nillable="true" type="tns:ArrayOfVehicle" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfFleet">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="Fleet" nillable="true" type="tns:Fleet" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfFleet">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfFleet" nillable="true" type="tns:ArrayOfFleet" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="Trailer">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:AbstractVehicle">
            <xsd:sequence />
            <xsd:attribute name="description" type="xsd:string" use="optional" />
            <xsd:attribute name="id" type="xsd:int" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfTrailer">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="Trailer" nillable="true" type="tns:Trailer" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfTrailer">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfTrailer" nillable="true" type="tns:ArrayOfTrailer" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="Train">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="capacities" nillable="true" type="tns:Capacities" />
              <xsd:element minOccurs="0" maxOccurs="1" name="costs" nillable="true" type="tns:Costs" />
              <xsd:element minOccurs="0" maxOccurs="1" name="maxLoadingArea" nillable="true" type="tns:LoadingArea" />
              <xsd:element minOccurs="0" maxOccurs="1" name="minLoadingArea" nillable="true" type="tns:LoadingArea" />
              <xsd:element minOccurs="0" maxOccurs="1" name="wrappedTrailerIds" nillable="true" type="ns2:ArrayOfInt" />
              <xsd:element minOccurs="0" maxOccurs="1" name="wrappedTransportEquipments" nillable="true" type="ns2:ArrayOfInt" />
              <xsd:element minOccurs="0" maxOccurs="1" name="wrappedVehicleIds" nillable="true" type="ns2:ArrayOfInt" />
            </xsd:sequence>
            <xsd:attribute name="category" type="xsd:int" use="optional" />
            <xsd:attribute name="description" type="xsd:string" use="optional" />
            <xsd:attribute name="dimaId" type="xsd:int" use="optional" />
            <xsd:attribute name="drivingPeriodFactor" type="xsd:double" use="optional" />
            <xsd:attribute name="id" type="xsd:int" use="required" />
            <xsd:attribute name="maxTransportPointCountPerTour" type="xsd:int" use="optional" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfTrain">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="Train" nillable="true" type="tns:Train" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfTrain">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfTrain" nillable="true" type="tns:ArrayOfTrain" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="Costs">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:AbstractCosts">
            <xsd:sequence />
            <xsd:attribute name="costsPerHourDriverOnly" type="xsd:double" use="required" />
            <xsd:attribute name="costsPerHourWithCoDriver" type="xsd:double" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfCosts">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="Costs" nillable="true" type="tns:Costs" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfCosts">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfCosts" nillable="true" type="tns:ArrayOfCosts" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="VehicleCosts">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:Costs">
            <xsd:sequence />
            <xsd:attribute name="costsPerChain" type="xsd:double" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfVehicleCosts">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="VehicleCosts" nillable="true" type="tns:VehicleCosts" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfVehicleCosts">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfVehicleCosts" nillable="true" type="tns:ArrayOfVehicleCosts" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="TotalCosts">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:AbstractCosts">
            <xsd:sequence />
            <xsd:attribute name="costsPerHour" type="xsd:double" use="required" />
            <xsd:attribute name="totalCosts" type="xsd:double" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfTotalCosts">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="TotalCosts" nillable="true" type="tns:TotalCosts" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfTotalCosts">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfTotalCosts" nillable="true" type="tns:ArrayOfTotalCosts" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="TourRestrictions">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence />
            <xsd:attribute name="maxDistance" type="xsd:int" use="optional" />
            <xsd:attribute name="maxDistanceBetweenTransportPoints" type="xsd:int" use="optional" />
            <xsd:attribute name="maxDistanceFromFirstToLastTransportPoint" type="xsd:int" use="optional" />
            <xsd:attribute name="maxDrivingPeriod" type="xsd:int" use="optional" />
            <xsd:attribute name="maxPeriod" type="xsd:int" use="optional" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfTourRestrictions">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="TourRestrictions" nillable="true" type="tns:TourRestrictions" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfTourRestrictions">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfTourRestrictions" nillable="true" type="tns:ArrayOfTourRestrictions" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="Quantities">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="wrappedQuantities" nillable="true" type="ns2:ArrayOfInt" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfQuantities">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="Quantities" nillable="true" type="tns:Quantities" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfQuantities">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfQuantities" nillable="true" type="tns:ArrayOfQuantities" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="Capacities">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="wrappedCapacities" nillable="true" type="tns:ArrayOfQuantities" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfCapacities">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="Capacities" nillable="true" type="tns:Capacities" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfCapacities">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfCapacities" nillable="true" type="tns:ArrayOfCapacities" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="VehicleRestrictions">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence />
            <xsd:attribute name="maxDistancePerTour" type="xsd:int" use="optional" />
            <xsd:attribute name="maxDrivingPeriodPerChain" type="xsd:int" use="optional" />
            <xsd:attribute name="maxTourCountPerChain" type="xsd:int" use="optional" />
            <xsd:attribute name="maxTransportPointCountPerTour" type="xsd:int" use="optional" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfVehicleRestrictions">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="VehicleRestrictions" nillable="true" type="tns:VehicleRestrictions" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfVehicleRestrictions">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfVehicleRestrictions" nillable="true" type="tns:ArrayOfVehicleRestrictions" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="SequencingPlanResult">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="wrappedScheduledOrderIds" nillable="true" type="ns2:ArrayOfInt" />
              <xsd:element minOccurs="0" maxOccurs="1" name="wrappedTourEvents" nillable="true" type="tns:ArrayOfTourEvent" />
              <xsd:element minOccurs="0" maxOccurs="1" name="wrappedUnscheduledOrderAnalysisResults" nillable="true" type="tns:ArrayOfUnscheduledOrderAnalysisResult" />
              <xsd:element minOccurs="0" maxOccurs="1" name="wrappedUnscheduledOrderIds" nillable="true" type="ns2:ArrayOfInt" />
            </xsd:sequence>
            <xsd:attribute name="remainingPeriods" type="xsd:string" use="optional" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfSequencingPlanResult">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="SequencingPlanResult" nillable="true" type="tns:SequencingPlanResult" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfSequencingPlanResult">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfSequencingPlanResult" nillable="true" type="tns:ArrayOfSequencingPlanResult" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="AmendingParams">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:StandardParams">
            <xsd:sequence />
            <xsd:attribute name="maximumAdditionalDistance" type="xsd:int" use="optional" />
            <xsd:attribute name="vehicleChangeAllowed" type="xsd:boolean" use="optional" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfAmendingParams">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="AmendingParams" nillable="true" type="tns:AmendingParams" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfAmendingParams">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfAmendingParams" nillable="true" type="tns:ArrayOfAmendingParams" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="VehicleSchedulingParams">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:PlanningParams">
            <xsd:sequence />
            <xsd:attribute name="availableMachineTime" type="xsd:int" use="optional" />
            <xsd:attribute name="goal" type="tns:VehicleSchedulingGoal" use="required" />
            <xsd:attribute name="optimizeSchedulingQuality" type="xsd:boolean" use="optional" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfVehicleSchedulingParams">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="VehicleSchedulingParams" nillable="true" type="tns:VehicleSchedulingParams" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfVehicleSchedulingParams">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfVehicleSchedulingParams" nillable="true" type="tns:ArrayOfVehicleSchedulingParams" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="VehicleSchedulingGoal">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="MINIMUM_CHAIN_COUNT" />
          <xsd:enumeration value="MINIMUM_COST" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="ArrayOfVehicleSchedulingGoal">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="VehicleSchedulingGoal" type="tns:VehicleSchedulingGoal" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfVehicleSchedulingGoal">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfVehicleSchedulingGoal" nillable="true" type="tns:ArrayOfVehicleSchedulingGoal" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="UnscheduledOrderAnalysisParams">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:CalculationParams">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="wrappedUnscheduledOrderIdsToBeAnalyzed" nillable="true" type="ns2:ArrayOfInt" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfUnscheduledOrderAnalysisParams">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="UnscheduledOrderAnalysisParams" nillable="true" type="tns:UnscheduledOrderAnalysisParams" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfUnscheduledOrderAnalysisParams">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfUnscheduledOrderAnalysisParams" nillable="true" type="tns:ArrayOfUnscheduledOrderAnalysisParams" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="UnscheduledOrderAnalysisResult">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="wrappedTourViolations" nillable="true" type="tns:ArrayOfTourViolations" />
              <xsd:element minOccurs="0" maxOccurs="1" name="wrappedVehicleViolations" nillable="true" type="tns:ArrayOfVehicleViolations" />
            </xsd:sequence>
            <xsd:attribute name="orderId" type="xsd:int" use="required" />
            <xsd:attribute name="status" type="tns:UnscheduledStopStatus" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfUnscheduledOrderAnalysisResult">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="UnscheduledOrderAnalysisResult" nillable="true" type="tns:UnscheduledOrderAnalysisResult" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfUnscheduledOrderAnalysisResult">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfUnscheduledOrderAnalysisResult" nillable="true" type="tns:ArrayOfUnscheduledOrderAnalysisResult" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="VehicleViolations">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="wrappedViolations" nillable="true" type="ns2:ArrayOfString" />
            </xsd:sequence>
            <xsd:attribute name="trailerId" type="xsd:int" use="required" />
            <xsd:attribute name="trainId" type="xsd:int" use="required" />
            <xsd:attribute name="vehicleId" type="xsd:int" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfVehicleViolations">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="VehicleViolations" nillable="true" type="tns:VehicleViolations" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfVehicleViolations">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfVehicleViolations" nillable="true" type="tns:ArrayOfVehicleViolations" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="TourViolations">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="wrappedViolations" nillable="true" type="ns2:ArrayOfString" />
            </xsd:sequence>
            <xsd:attribute name="tourId" type="xsd:int" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfTourViolations">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="TourViolations" nillable="true" type="tns:TourViolations" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfTourViolations">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfTourViolations" nillable="true" type="tns:ArrayOfTourViolations" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="UnscheduledStopStatus">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="FEASIBLE" />
          <xsd:enumeration value="UNSCHEDULED_DUE_TO_PLAN" />
          <xsd:enumeration value="UNSCHEDULED_DUE_TO_VEHICLES" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="ArrayOfUnscheduledStopStatus">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="UnscheduledStopStatus" type="tns:UnscheduledStopStatus" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfUnscheduledStopStatus">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfUnscheduledStopStatus" nillable="true" type="tns:ArrayOfUnscheduledStopStatus" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="InsertOrderProposal">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="insertInstruction" nillable="true" type="tns:InsertOrderInstruction" />
            </xsd:sequence>
            <xsd:attribute name="arrivalTime" type="xsd:int" use="required" />
            <xsd:attribute name="chainPositionChanged" type="xsd:boolean" use="required" />
            <xsd:attribute name="departureTime" type="xsd:int" use="required" />
            <xsd:attribute name="endServiceTime" type="xsd:int" use="required" />
            <xsd:attribute name="insertCost" type="xsd:double" use="required" />
            <xsd:attribute name="insertTourDistance" type="xsd:int" use="required" />
            <xsd:attribute name="insertTourDrivingPeriod" type="xsd:int" use="required" />
            <xsd:attribute name="insertTourPeriod" type="xsd:int" use="required" />
            <xsd:attribute name="startServiceTime" type="xsd:int" use="required" />
            <xsd:attribute name="vehicleChanged" type="xsd:boolean" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfInsertOrderProposal">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="InsertOrderProposal" nillable="true" type="tns:InsertOrderProposal" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfInsertOrderProposal">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfInsertOrderProposal" nillable="true" type="tns:ArrayOfInsertOrderProposal" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="InsertOrderInstruction">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence />
            <xsd:attribute name="chainPosition" type="xsd:int" use="required" />
            <xsd:attribute name="orderId" type="xsd:int" use="required" />
            <xsd:attribute name="partnerPositionNumber" type="xsd:int" use="optional" />
            <xsd:attribute name="positionNumber" type="xsd:int" use="required" />
            <xsd:attribute name="tourId" type="xsd:int" use="required" />
            <xsd:attribute name="trailerId" type="xsd:int" use="required" />
            <xsd:attribute name="trainId" type="xsd:int" use="required" />
            <xsd:attribute name="truckId" type="xsd:int" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfInsertOrderInstruction">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="InsertOrderInstruction" nillable="true" type="tns:InsertOrderInstruction" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfInsertOrderInstruction">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfInsertOrderInstruction" nillable="true" type="tns:ArrayOfInsertOrderInstruction" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="FindToursForOrderParams">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:PlanningParams">
            <xsd:sequence />
            <xsd:attribute name="maximumAdditionalDistance" type="xsd:int" use="optional" />
            <xsd:attribute name="newTourAllowed" type="xsd:boolean" use="required" />
            <xsd:attribute name="newTourCostFactor" type="xsd:double" use="required" />
            <xsd:attribute name="vehicleChangeAllowed" type="xsd:boolean" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfFindToursForOrderParams">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="FindToursForOrderParams" nillable="true" type="tns:FindToursForOrderParams" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfFindToursForOrderParams">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfFindToursForOrderParams" nillable="true" type="tns:ArrayOfFindToursForOrderParams" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="FindOrdersForTourParams">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:PlanningParams">
            <xsd:sequence />
            <xsd:attribute name="maximumAdditionalDistance" type="xsd:int" use="optional" />
            <xsd:attribute name="vehicleChangeAllowed" type="xsd:boolean" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfFindOrdersForTourParams">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="FindOrdersForTourParams" nillable="true" type="tns:FindOrdersForTourParams" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfFindOrdersForTourParams">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfFindOrdersForTourParams" nillable="true" type="tns:ArrayOfFindOrdersForTourParams" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="AssignVehicleInstruction">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence />
            <xsd:attribute name="chainPosition" type="xsd:int" use="required" />
            <xsd:attribute name="tourId" type="xsd:int" use="required" />
            <xsd:attribute name="trailerId" type="xsd:int" use="required" />
            <xsd:attribute name="trainId" type="xsd:int" use="required" />
            <xsd:attribute name="truckId" type="xsd:int" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfAssignVehicleInstruction">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="AssignVehicleInstruction" nillable="true" type="tns:AssignVehicleInstruction" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfAssignVehicleInstruction">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfAssignVehicleInstruction" nillable="true" type="tns:ArrayOfAssignVehicleInstruction" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="AssignVehicleProposal">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="assignVehicleInstruction" nillable="true" type="tns:AssignVehicleInstruction" />
            </xsd:sequence>
            <xsd:attribute name="assignmentCost" type="xsd:double" use="required" />
            <xsd:attribute name="assignmentTourDistance" type="xsd:int" use="required" />
            <xsd:attribute name="assignmentTourDrivingPeriod" type="xsd:int" use="required" />
            <xsd:attribute name="assignmentTourPeriod" type="xsd:int" use="required" />
            <xsd:attribute name="endDepotId" type="xsd:int" use="required" />
            <xsd:attribute name="endDepotInserted" type="xsd:boolean" use="required" />
            <xsd:attribute name="scheduledVehicle" type="xsd:boolean" use="required" />
            <xsd:attribute name="startDepotId" type="xsd:int" use="required" />
            <xsd:attribute name="startDepotInserted" type="xsd:boolean" use="required" />
            <xsd:attribute name="startTime" type="xsd:int" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfAssignVehicleProposal">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="AssignVehicleProposal" nillable="true" type="tns:AssignVehicleProposal" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfAssignVehicleProposal">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfAssignVehicleProposal" nillable="true" type="tns:ArrayOfAssignVehicleProposal" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="FindVehiclesForTourParams">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:PlanningParams">
            <xsd:sequence />
            <xsd:attribute name="depotInsertionAllowed" type="xsd:boolean" use="required" />
            <xsd:attribute name="scheduledVehiclesAllowed" type="xsd:boolean" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfFindVehiclesForTourParams">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="FindVehiclesForTourParams" nillable="true" type="tns:FindVehiclesForTourParams" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfFindVehiclesForTourParams">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfFindVehiclesForTourParams" nillable="true" type="tns:ArrayOfFindVehiclesForTourParams" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="FindToursForVehicleParams">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:PlanningParams">
            <xsd:sequence />
            <xsd:attribute name="depotInsertionAllowed" type="xsd:boolean" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfFindToursForVehicleParams">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="FindToursForVehicleParams" nillable="true" type="tns:FindToursForVehicleParams" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfFindToursForVehicleParams">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfFindToursForVehicleParams" nillable="true" type="tns:ArrayOfFindToursForVehicleParams" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="LoadingArea">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence />
            <xsd:attribute name="height" type="xsd:int" use="required" />
            <xsd:attribute name="length" type="xsd:int" use="required" />
            <xsd:attribute name="weight" type="xsd:int" use="required" />
            <xsd:attribute name="width" type="xsd:int" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfLoadingArea">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="LoadingArea" nillable="true" type="tns:LoadingArea" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfLoadingArea">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfLoadingArea" nillable="true" type="tns:ArrayOfLoadingArea" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="CoDriverStatus">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="NEVER" />
          <xsd:enumeration value="ALWAYS" />
          <xsd:enumeration value="IF_REQUIRED" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="ArrayOfCoDriverStatus">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="CoDriverStatus" type="tns:CoDriverStatus" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfCoDriverStatus">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfCoDriverStatus" nillable="true" type="tns:ArrayOfCoDriverStatus" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="GoalImportance">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence />
            <xsd:attribute name="chainPeriodRank" type="xsd:int" use="required" />
            <xsd:attribute name="tourCountRank" type="xsd:int" use="required" />
            <xsd:attribute name="tourDistanceRank" type="xsd:int" use="required" />
            <xsd:attribute name="tourDrivingPeriodRank" type="xsd:int" use="required" />
            <xsd:attribute name="tourPeriodRank" type="xsd:int" use="required" />
            <xsd:attribute name="unplannedOrdersRank" type="xsd:int" use="required" />
            <xsd:attribute name="vehicleCountRank" type="xsd:int" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfGoalImportance">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="GoalImportance" nillable="true" type="tns:GoalImportance" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfGoalImportance">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfGoalImportance" nillable="true" type="tns:ArrayOfGoalImportance" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="DriverSettings">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="maximumTourPeriodRestriction" nillable="true" type="tns:MaximumTourPeriodRestriction" />
            </xsd:sequence>
            <xsd:attribute name="breakRuleActive" type="xsd:boolean" use="required" />
            <xsd:attribute name="dailyRestRuleActive" type="xsd:boolean" use="required" />
            <xsd:attribute name="regulationsId" type="xsd:int" use="required" />
            <xsd:attribute name="remainingPeriods" type="xsd:string" use="optional" />
            <xsd:attribute name="weeklyRestRuleActive" type="xsd:boolean" use="required" />
            <xsd:attribute name="workingRuleActive" type="xsd:boolean" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfDriverSettings">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="DriverSettings" nillable="true" type="tns:DriverSettings" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfDriverSettings">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfDriverSettings" nillable="true" type="tns:ArrayOfDriverSettings" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="CalculationParams">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:PlanningParams">
            <xsd:sequence />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfCalculationParams">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="CalculationParams" nillable="true" type="tns:CalculationParams" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfCalculationParams">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfCalculationParams" nillable="true" type="tns:ArrayOfCalculationParams" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="DriverRegulations">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:RegulationsBase">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="breakIntervals" nillable="true" type="tns:BreakIntervals" />
              <xsd:element minOccurs="0" maxOccurs="1" name="breakRule" nillable="true" type="tns:BreakRule" />
              <xsd:element minOccurs="0" maxOccurs="1" name="dailyRestRule" nillable="true" type="tns:DailyRestRule" />
              <xsd:element minOccurs="0" maxOccurs="1" name="weeklyRestRule" nillable="true" type="tns:WeeklyRestRule" />
              <xsd:element minOccurs="0" maxOccurs="1" name="workingRule" nillable="true" type="tns:WorkingRule" />
            </xsd:sequence>
            <xsd:attribute name="beginningOfCalendarWeek" type="xsd:int" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfDriverRegulations">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="DriverRegulations" nillable="true" type="tns:DriverRegulations" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfDriverRegulations">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfDriverRegulations" nillable="true" type="tns:ArrayOfDriverRegulations" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="BreakRule">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence />
            <xsd:attribute name="breakPeriod1" type="xsd:int" use="required" />
            <xsd:attribute name="breakPeriod2" type="xsd:int" use="required" />
            <xsd:attribute name="drivingPeriod" type="xsd:int" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfBreakRule">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="BreakRule" nillable="true" type="tns:BreakRule" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfBreakRule">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfBreakRule" nillable="true" type="tns:ArrayOfBreakRule" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="DailyRestRule">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence />
            <xsd:attribute name="extendedDrivingPeriod" type="xsd:int" use="required" />
            <xsd:attribute name="firstSplitRestPeriod" type="xsd:int" use="required" />
            <xsd:attribute name="maximumPeriodBetweenEndOfDailyRests" type="xsd:int" use="required" />
            <xsd:attribute name="numberOfExtendedDrivingPeriods" type="xsd:int" use="required" />
            <xsd:attribute name="numberOfReducedRestPeriods" type="xsd:int" use="required" />
            <xsd:attribute name="reducedRestPeriod" type="xsd:int" use="required" />
            <xsd:attribute name="regularDrivingPeriod" type="xsd:int" use="required" />
            <xsd:attribute name="regularRestPeriod" type="xsd:int" use="required" />
            <xsd:attribute name="secondSplitRestPeriod" type="xsd:int" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfDailyRestRule">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="DailyRestRule" nillable="true" type="tns:DailyRestRule" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfDailyRestRule">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfDailyRestRule" nillable="true" type="tns:ArrayOfDailyRestRule" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="WeeklyRestRule">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence />
            <xsd:attribute name="maximumBiweeklyDrivingPeriod" type="xsd:int" use="required" />
            <xsd:attribute name="maximumPeriodBetweenWeeklyRests" type="xsd:int" use="required" />
            <xsd:attribute name="maximumWeeklyDrivingPeriod" type="xsd:int" use="required" />
            <xsd:attribute name="weeklyRestPeriod" type="xsd:int" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfWeeklyRestRule">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="WeeklyRestRule" nillable="true" type="tns:WeeklyRestRule" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfWeeklyRestRule">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfWeeklyRestRule" nillable="true" type="tns:ArrayOfWeeklyRestRule" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="WorkingRule">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence />
            <xsd:attribute name="breakPeriod" type="xsd:int" use="required" />
            <xsd:attribute name="dailyRestPeriod" type="xsd:int" use="required" />
            <xsd:attribute name="extendedBreakPeriod" type="xsd:int" use="required" />
            <xsd:attribute name="maxWorkingPeriodPerWeek" type="xsd:int" use="required" />
            <xsd:attribute name="maxWorkingPeriodWithoutBreak" type="xsd:int" use="required" />
            <xsd:attribute name="maxWorkingPeriodWithoutDailyRest" type="xsd:int" use="required" />
            <xsd:attribute name="maxWorkingPeriodWithoutExtendedBreak" type="xsd:int" use="required" />
            <xsd:attribute name="minPartialBreakLength" type="xsd:int" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfWorkingRule">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="WorkingRule" nillable="true" type="tns:WorkingRule" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfWorkingRule">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfWorkingRule" nillable="true" type="tns:ArrayOfWorkingRule" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="BreakIntervals">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="wrappedIntervals" nillable="true" type="tns:ArrayOfInterval" />
            </xsd:sequence>
            <xsd:attribute name="breakPeriod" type="xsd:int" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfBreakIntervals">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="BreakIntervals" nillable="true" type="tns:BreakIntervals" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfBreakIntervals">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfBreakIntervals" nillable="true" type="tns:ArrayOfBreakIntervals" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="RegulationsBase" abstract="true">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence />
            <xsd:attribute name="id" type="xsd:int" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfRegulationsBase">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="RegulationsBase" nillable="true" type="tns:RegulationsBase" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfRegulationsBase">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfRegulationsBase" nillable="true" type="tns:ArrayOfRegulationsBase" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="TourEvent">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="wrappedDescriptions" nillable="true" type="ns2:ArrayOfString" />
              <xsd:element minOccurs="0" maxOccurs="1" name="wrappedViolations" nillable="true" type="ns2:ArrayOfString" />
            </xsd:sequence>
            <xsd:attribute name="logisticPointId" type="xsd:int" use="required" />
            <xsd:attribute name="period" type="xsd:int" use="required" />
            <xsd:attribute name="startTime" type="xsd:int" use="required" />
            <xsd:attribute name="tourIndex" type="xsd:int" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfTourEvent">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="TourEvent" nillable="true" type="tns:TourEvent" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfTourEvent">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfTourEvent" nillable="true" type="tns:ArrayOfTourEvent" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="TourEventDescription">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="DRIVING" />
          <xsd:enumeration value="SERVICE" />
          <xsd:enumeration value="WAITING" />
          <xsd:enumeration value="NOT_OPERATING" />
          <xsd:enumeration value="BREAK" />
          <xsd:enumeration value="DAILY_REST" />
          <xsd:enumeration value="WEEKLY_REST" />
          <xsd:enumeration value="IS_IN_SERVICE_INTERVAL" />
          <xsd:enumeration value="WORKING" />
          <xsd:enumeration value="WORKING_BREAK" />
          <xsd:enumeration value="WORKING_REST" />
          <xsd:enumeration value="INTERVAL_BREAK" />
          <xsd:enumeration value="INTERMEDIATE" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="ArrayOfTourEventDescription">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="TourEventDescription" type="tns:TourEventDescription" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfTourEventDescription">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfTourEventDescription" nillable="true" type="tns:ArrayOfTourEventDescription" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="TourEventViolation">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="OPERATING_INTERVAL_VIOLATION" />
          <xsd:enumeration value="SERVICE_INTERVAL_VIOLATION" />
          <xsd:enumeration value="MAXIMUM_TOUR_PERIOD_VIOLATION" />
          <xsd:enumeration value="DISTANCE_OF_SERVICE_VIOLATION" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="ArrayOfTourEventViolation">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="TourEventViolation" type="tns:TourEventViolation" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfTourEventViolation">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfTourEventViolation" nillable="true" type="tns:ArrayOfTourEventViolation" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ProductIncompatibility">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence />
            <xsd:attribute name="incompatibilityType" type="tns:ProductIncompatibilityType" use="required" />
            <xsd:attribute name="productId1" type="xsd:int" use="required" />
            <xsd:attribute name="productId2" type="xsd:int" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfProductIncompatibility">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ProductIncompatibility" nillable="true" type="tns:ProductIncompatibility" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfProductIncompatibility">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfProductIncompatibility" nillable="true" type="tns:ArrayOfProductIncompatibility" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="ProductIncompatibilityType">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="NOT_ON_SAME_TOUR" />
          <xsd:enumeration value="NOT_AT_SAME_TIME" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="ArrayOfProductIncompatibilityType">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ProductIncompatibilityType" type="tns:ProductIncompatibilityType" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfProductIncompatibilityType">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfProductIncompatibilityType" nillable="true" type="tns:ArrayOfProductIncompatibilityType" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="OvernightParams">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:StandardParams">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="wrappedOvernightStayPattern" nillable="true" type="ns2:ArrayOfBoolean" />
            </xsd:sequence>
            <xsd:attribute name="costPerOvernightStay" type="xsd:double" use="required" />
            <xsd:attribute name="costPerUnplannedCustomer" type="xsd:double" use="required" />
            <xsd:attribute name="maximumNumberOfAllowedOvernightStays" type="xsd:int" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfOvernightParams">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="OvernightParams" nillable="true" type="tns:OvernightParams" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfOvernightParams">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfOvernightParams" nillable="true" type="tns:ArrayOfOvernightParams" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="MaximumTourPeriodRestriction">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence />
            <xsd:attribute name="maximumAllowableTourPeriod" type="xsd:int" use="required" />
            <xsd:attribute name="maximumNetTourPeriod" type="xsd:int" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfMaximumTourPeriodRestriction">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="MaximumTourPeriodRestriction" nillable="true" type="tns:MaximumTourPeriodRestriction" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfMaximumTourPeriodRestriction">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfMaximumTourPeriodRestriction" nillable="true" type="tns:ArrayOfMaximumTourPeriodRestriction" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="NightTourRestrictions">
        <xsd:complexContent mixed="false">
          <xsd:extension base="ns1:TransientVO">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="wrappedNightIntervals" nillable="true" type="tns:ArrayOfInterval" />
            </xsd:sequence>
            <xsd:attribute name="maximumNightTourChainPeriod" type="xsd:int" use="required" />
            <xsd:attribute name="maximumNightTourPeriod" type="xsd:int" use="required" />
            <xsd:attribute name="nightTourThreshold" type="xsd:int" use="required" />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfNightTourRestrictions">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="NightTourRestrictions" nillable="true" type="tns:NightTourRestrictions" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfArrayOfNightTourRestrictions">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ArrayOfNightTourRestrictions" nillable="true" type="tns:ArrayOfNightTourRestrictions" />
        </xsd:sequence>
      </xsd:complexType>
    </xsd:schema>
    <xsd:schema xmlns:ns2="http://xtour.xserver.ptvag.com" xmlns:soap11-enc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:tns="http://types.xtour.xserver.ptvag.com" xmlns:ns1="http://xtour.xserver.ptvag.com" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns0="http://types.xtour.xserver.ptvag.com" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:common="http://common.xserver.ptvag.com" xmlns:ns3="http://baseservices.service.jabba.ptvag.com" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" elementFormDefault="qualified" targetNamespace="http://types.xtour.xserver.ptvag.com">
      <xsd:complexType name="fetchPlan">
        <xsd:sequence>
          <xsd:element name="String_1" nillable="true" type="xsd:string" />
          <xsd:element name="CallerContext_2" nillable="true" type="ns3:CallerContext" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="fetchPlanResponse">
        <xsd:sequence>
          <xsd:element name="result" nillable="true" type="ns2:Plan" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="fetchSequencingPlan">
        <xsd:sequence>
          <xsd:element name="String_1" nillable="true" type="xsd:string" />
          <xsd:element name="CallerContext_2" nillable="true" type="ns3:CallerContext" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="fetchSequencingPlanResponse">
        <xsd:sequence>
          <xsd:element name="result" nillable="true" type="ns2:SequencingPlan" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="findToursForUnscheduledOrder">
        <xsd:sequence>
          <xsd:element name="int_1" type="xsd:int" />
          <xsd:element name="ArrayOfTransportOrder_2" nillable="true" type="ns2:ArrayOfTransportOrder" />
          <xsd:element name="ArrayOfDepot_3" nillable="true" type="ns2:ArrayOfDepot" />
          <xsd:element name="Fleet_4" nillable="true" type="ns2:Fleet" />
          <xsd:element name="FindToursForOrderParams_5" nillable="true" type="ns2:FindToursForOrderParams" />
          <xsd:element name="Plan_6" nillable="true" type="ns2:Plan" />
          <xsd:element name="CallerContext_7" nillable="true" type="ns3:CallerContext" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="findToursForUnscheduledOrderResponse">
        <xsd:sequence>
          <xsd:element name="result" nillable="true" type="ns2:ArrayOfInsertOrderProposal" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="findToursForVehicle">
        <xsd:sequence>
          <xsd:element name="int_1" type="xsd:int" />
          <xsd:element name="ArrayOfTransportOrder_2" nillable="true" type="ns2:ArrayOfTransportOrder" />
          <xsd:element name="ArrayOfDepot_3" nillable="true" type="ns2:ArrayOfDepot" />
          <xsd:element name="Fleet_4" nillable="true" type="ns2:Fleet" />
          <xsd:element name="FindToursForVehicleParams_5" nillable="true" type="ns2:FindToursForVehicleParams" />
          <xsd:element name="Plan_6" nillable="true" type="ns2:Plan" />
          <xsd:element name="CallerContext_7" nillable="true" type="ns3:CallerContext" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="findToursForVehicleResponse">
        <xsd:sequence>
          <xsd:element name="result" nillable="true" type="ns2:ArrayOfAssignVehicleProposal" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="findUnscheduledOrdersForTour">
        <xsd:sequence>
          <xsd:element name="int_1" type="xsd:int" />
          <xsd:element name="ArrayOfTransportOrder_2" nillable="true" type="ns2:ArrayOfTransportOrder" />
          <xsd:element name="ArrayOfDepot_3" nillable="true" type="ns2:ArrayOfDepot" />
          <xsd:element name="Fleet_4" nillable="true" type="ns2:Fleet" />
          <xsd:element name="FindOrdersForTourParams_5" nillable="true" type="ns2:FindOrdersForTourParams" />
          <xsd:element name="Plan_6" nillable="true" type="ns2:Plan" />
          <xsd:element name="CallerContext_7" nillable="true" type="ns3:CallerContext" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="findUnscheduledOrdersForTourResponse">
        <xsd:sequence>
          <xsd:element name="result" nillable="true" type="ns2:ArrayOfInsertOrderProposal" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="findVehiclesForTour">
        <xsd:sequence>
          <xsd:element name="int_1" type="xsd:int" />
          <xsd:element name="ArrayOfTransportOrder_2" nillable="true" type="ns2:ArrayOfTransportOrder" />
          <xsd:element name="ArrayOfDepot_3" nillable="true" type="ns2:ArrayOfDepot" />
          <xsd:element name="Fleet_4" nillable="true" type="ns2:Fleet" />
          <xsd:element name="FindVehiclesForTourParams_5" nillable="true" type="ns2:FindVehiclesForTourParams" />
          <xsd:element name="Plan_6" nillable="true" type="ns2:Plan" />
          <xsd:element name="CallerContext_7" nillable="true" type="ns3:CallerContext" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="findVehiclesForTourResponse">
        <xsd:sequence>
          <xsd:element name="result" nillable="true" type="ns2:ArrayOfAssignVehicleProposal" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="planBasicTours">
        <xsd:sequence>
          <xsd:element name="ArrayOfTransportOrder_1" nillable="true" type="ns2:ArrayOfTransportOrder" />
          <xsd:element name="ArrayOfDepot_2" nillable="true" type="ns2:ArrayOfDepot" />
          <xsd:element name="Fleet_3" nillable="true" type="ns2:Fleet" />
          <xsd:element name="PlanningParams_4" nillable="true" type="ns2:PlanningParams" />
          <xsd:element name="Plan_5" nillable="true" type="ns2:Plan" />
          <xsd:element name="CallerContext_6" nillable="true" type="ns3:CallerContext" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="planBasicToursResponse">
        <xsd:sequence>
          <xsd:element name="result" nillable="true" type="ns2:Plan" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="planOvernightTours">
        <xsd:sequence>
          <xsd:element name="ArrayOfTransportOrder_1" nillable="true" type="ns2:ArrayOfTransportOrder" />
          <xsd:element name="ArrayOfDepot_2" nillable="true" type="ns2:ArrayOfDepot" />
          <xsd:element name="Vehicle_3" nillable="true" type="ns2:Vehicle" />
          <xsd:element name="OvernightParams_4" nillable="true" type="ns2:OvernightParams" />
          <xsd:element name="Plan_5" nillable="true" type="ns2:Plan" />
          <xsd:element name="CallerContext_6" nillable="true" type="ns3:CallerContext" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="planOvernightToursResponse">
        <xsd:sequence>
          <xsd:element name="result" nillable="true" type="ns2:Plan" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="planSequence">
        <xsd:sequence>
          <xsd:element name="ArrayOfSequencingTransportOrder_1" nillable="true" type="ns2:ArrayOfSequencingTransportOrder" />
          <xsd:element name="ArrayOfDepot_2" nillable="true" type="ns2:ArrayOfDepot" />
          <xsd:element name="SequencingVehicle_3" nillable="true" type="ns2:SequencingVehicle" />
          <xsd:element name="SequencingParams_4" nillable="true" type="ns2:SequencingParams" />
          <xsd:element name="SequencingPlan_5" nillable="true" type="ns2:SequencingPlan" />
          <xsd:element name="CallerContext_6" nillable="true" type="ns3:CallerContext" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="planSequenceResponse">
        <xsd:sequence>
          <xsd:element name="result" nillable="true" type="ns2:SequencingPlan" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="startPlanBasicTours">
        <xsd:sequence>
          <xsd:element name="ArrayOfTransportOrder_1" nillable="true" type="ns2:ArrayOfTransportOrder" />
          <xsd:element name="ArrayOfDepot_2" nillable="true" type="ns2:ArrayOfDepot" />
          <xsd:element name="Fleet_3" nillable="true" type="ns2:Fleet" />
          <xsd:element name="PlanningParams_4" nillable="true" type="ns2:PlanningParams" />
          <xsd:element name="Plan_5" nillable="true" type="ns2:Plan" />
          <xsd:element name="CallerContext_6" nillable="true" type="ns3:CallerContext" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="startPlanBasicToursResponse">
        <xsd:sequence>
          <xsd:element name="result" nillable="true" type="common:Job" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="startPlanOvernightTours">
        <xsd:sequence>
          <xsd:element name="ArrayOfTransportOrder_1" nillable="true" type="ns2:ArrayOfTransportOrder" />
          <xsd:element name="ArrayOfDepot_2" nillable="true" type="ns2:ArrayOfDepot" />
          <xsd:element name="Vehicle_3" nillable="true" type="ns2:Vehicle" />
          <xsd:element name="OvernightParams_4" nillable="true" type="ns2:OvernightParams" />
          <xsd:element name="Plan_5" nillable="true" type="ns2:Plan" />
          <xsd:element name="CallerContext_6" nillable="true" type="ns3:CallerContext" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="startPlanOvernightToursResponse">
        <xsd:sequence>
          <xsd:element name="result" nillable="true" type="common:Job" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="startPlanSequence">
        <xsd:sequence>
          <xsd:element name="ArrayOfSequencingTransportOrder_1" nillable="true" type="ns2:ArrayOfSequencingTransportOrder" />
          <xsd:element name="ArrayOfDepot_2" nillable="true" type="ns2:ArrayOfDepot" />
          <xsd:element name="SequencingVehicle_3" nillable="true" type="ns2:SequencingVehicle" />
          <xsd:element name="SequencingParams_4" nillable="true" type="ns2:SequencingParams" />
          <xsd:element name="SequencingPlan_5" nillable="true" type="ns2:SequencingPlan" />
          <xsd:element name="CallerContext_6" nillable="true" type="ns3:CallerContext" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="startPlanSequenceResponse">
        <xsd:sequence>
          <xsd:element name="result" nillable="true" type="common:Job" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="watchJob">
        <xsd:sequence>
          <xsd:element name="String_1" nillable="true" type="xsd:string" />
          <xsd:element name="WatchOptions_2" nillable="true" type="common:WatchOptions" />
          <xsd:element name="CallerContext_3" nillable="true" type="ns3:CallerContext" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="watchJobResponse">
        <xsd:sequence>
          <xsd:element name="result" nillable="true" type="common:Job" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="stopJob">
        <xsd:sequence>
          <xsd:element name="String_1" nillable="true" type="xsd:string" />
          <xsd:element name="CallerContext_2" nillable="true" type="ns3:CallerContext" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="stopJobResponse">
        <xsd:sequence>
          <xsd:element name="result" nillable="true" type="common:Job" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="deleteJob">
        <xsd:sequence>
          <xsd:element name="String_1" nillable="true" type="xsd:string" />
          <xsd:element name="CallerContext_2" nillable="true" type="ns3:CallerContext" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="deleteJobResponse">
        <xsd:sequence>
          <xsd:element name="result" nillable="true" type="common:Job" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="fetchPlan" type="tns:fetchPlan" />
      <xsd:element name="fetchPlanResponse" type="tns:fetchPlanResponse" />
      <xsd:element name="fetchSequencingPlan" type="tns:fetchSequencingPlan" />
      <xsd:element name="fetchSequencingPlanResponse" type="tns:fetchSequencingPlanResponse" />
      <xsd:element name="findToursForUnscheduledOrder" type="tns:findToursForUnscheduledOrder" />
      <xsd:element name="findToursForUnscheduledOrderResponse" type="tns:findToursForUnscheduledOrderResponse" />
      <xsd:element name="findToursForVehicle" type="tns:findToursForVehicle" />
      <xsd:element name="findToursForVehicleResponse" type="tns:findToursForVehicleResponse" />
      <xsd:element name="findUnscheduledOrdersForTour" type="tns:findUnscheduledOrdersForTour" />
      <xsd:element name="findUnscheduledOrdersForTourResponse" type="tns:findUnscheduledOrdersForTourResponse" />
      <xsd:element name="findVehiclesForTour" type="tns:findVehiclesForTour" />
      <xsd:element name="findVehiclesForTourResponse" type="tns:findVehiclesForTourResponse" />
      <xsd:element name="planBasicTours" type="tns:planBasicTours" />
      <xsd:element name="planBasicToursResponse" type="tns:planBasicToursResponse" />
      <xsd:element name="planOvernightTours" type="tns:planOvernightTours" />
      <xsd:element name="planOvernightToursResponse" type="tns:planOvernightToursResponse" />
      <xsd:element name="planSequence" type="tns:planSequence" />
      <xsd:element name="planSequenceResponse" type="tns:planSequenceResponse" />
      <xsd:element name="startPlanBasicTours" type="tns:startPlanBasicTours" />
      <xsd:element name="startPlanBasicToursResponse" type="tns:startPlanBasicToursResponse" />
      <xsd:element name="startPlanOvernightTours" type="tns:startPlanOvernightTours" />
      <xsd:element name="startPlanOvernightToursResponse" type="tns:startPlanOvernightToursResponse" />
      <xsd:element name="startPlanSequence" type="tns:startPlanSequence" />
      <xsd:element name="startPlanSequenceResponse" type="tns:startPlanSequenceResponse" />
      <xsd:element name="watchJob" type="tns:watchJob" />
      <xsd:element name="watchJobResponse" type="tns:watchJobResponse" />
      <xsd:element name="deleteJob" type="tns:deleteJob" />
      <xsd:element name="deleteJobResponse" type="tns:deleteJobResponse" />
      <xsd:element name="stopJob" type="tns:stopJob" />
      <xsd:element name="stopJobResponse" type="tns:stopJobResponse" />
    </xsd:schema>
  </types>
  <message name="XTourWS_findUnscheduledOrdersForTourResponse">
    <part name="parameters" element="ns0:findUnscheduledOrdersForTourResponse" />
  </message>
  <message name="XTourWS_findUnscheduledOrdersForTour">
    <part name="parameters" element="ns0:findUnscheduledOrdersForTour" />
  </message>
  <message name="DatabaseException">
    <part name="DatabaseException" element="ns3:DatabaseException" />
  </message>
  <message name="XTourWS_fetchPlanResponse">
    <part name="parameters" element="ns0:fetchPlanResponse" />
  </message>
  <message name="XTourWS_planBasicTours">
    <part name="parameters" element="ns0:planBasicTours" />
  </message>
  <message name="XTourWS_startPlanSequenceResponse">
    <part name="parameters" element="ns0:startPlanSequenceResponse" />
  </message>
  <message name="XTourWS_startPlanBasicToursResponse">
    <part name="parameters" element="ns0:startPlanBasicToursResponse" />
  </message>
  <message name="XTourWS_stopJob">
    <part name="parameters" element="ns0:stopJob" />
  </message>
  <message name="XTourWS_fetchSequencingPlanResponse">
    <part name="parameters" element="ns0:fetchSequencingPlanResponse" />
  </message>
  <message name="XTourWS_fetchSequencingPlan">
    <part name="parameters" element="ns0:fetchSequencingPlan" />
  </message>
  <message name="UnexpectedException">
    <part name="UnexpectedException" element="ns3:UnexpectedException" />
  </message>
  <message name="XTourException">
    <part name="XTourException" element="ns1:XTourException" />
  </message>
  <message name="XServiceException">
    <part name="XServiceException" element="ns2:XServiceException" />
  </message>
  <message name="XTourWS_fetchPlan">
    <part name="parameters" element="ns0:fetchPlan" />
  </message>
  <message name="OptimisticRollbackException">
    <part name="OptimisticRollbackException" element="ns3:OptimisticRollbackException" />
  </message>
  <message name="XTourWS_findToursForVehicle">
    <part name="parameters" element="ns0:findToursForVehicle" />
  </message>
  <message name="XTourWS_watchJob">
    <part name="parameters" element="ns0:watchJob" />
  </message>
  <message name="SystemException">
    <part name="SystemException" element="ns3:SystemException" />
  </message>
  <message name="XTourWS_planBasicToursResponse">
    <part name="parameters" element="ns0:planBasicToursResponse" />
  </message>
  <message name="XTourWS_planOvernightToursResponse">
    <part name="parameters" element="ns0:planOvernightToursResponse" />
  </message>
  <message name="XTourWS_startPlanSequence">
    <part name="parameters" element="ns0:startPlanSequence" />
  </message>
  <message name="TableNotFoundException">
    <part name="TableNotFoundException" element="ns3:TableNotFoundException" />
  </message>
  <message name="XTourWS_startPlanOvernightTours">
    <part name="parameters" element="ns0:startPlanOvernightTours" />
  </message>
  <message name="XTourWS_findToursForUnscheduledOrderResponse">
    <part name="parameters" element="ns0:findToursForUnscheduledOrderResponse" />
  </message>
  <message name="XTourWS_findVehiclesForTourResponse">
    <part name="parameters" element="ns0:findVehiclesForTourResponse" />
  </message>
  <message name="ConstraintViolationException">
    <part name="ConstraintViolationException" element="ns3:ConstraintViolationException" />
  </message>
  <message name="XTourWS_findToursForUnscheduledOrder">
    <part name="parameters" element="ns0:findToursForUnscheduledOrder" />
  </message>
  <message name="XTourWS_findToursForVehicleResponse">
    <part name="parameters" element="ns0:findToursForVehicleResponse" />
  </message>
  <message name="XTourWS_startPlanOvernightToursResponse">
    <part name="parameters" element="ns0:startPlanOvernightToursResponse" />
  </message>
  <message name="XTourWS_stopJobResponse">
    <part name="parameters" element="ns0:stopJobResponse" />
  </message>
  <message name="XTourWS_planOvernightTours">
    <part name="parameters" element="ns0:planOvernightTours" />
  </message>
  <message name="XTourWS_startPlanBasicTours">
    <part name="parameters" element="ns0:startPlanBasicTours" />
  </message>
  <message name="XTourWS_watchJobResponse">
    <part name="parameters" element="ns0:watchJobResponse" />
  </message>
  <message name="XTourWS_deleteJob">
    <part name="parameters" element="ns0:deleteJob" />
  </message>
  <message name="XTourWS_deleteJobResponse">
    <part name="parameters" element="ns0:deleteJobResponse" />
  </message>
  <message name="XTourWS_findVehiclesForTour">
    <part name="parameters" element="ns0:findVehiclesForTour" />
  </message>
  <message name="XTourWS_planSequenceResponse">
    <part name="parameters" element="ns0:planSequenceResponse" />
  </message>
  <message name="XTourWS_planSequence">
    <part name="parameters" element="ns0:planSequence" />
  </message>
  <portType name="XTourWS">
    <operation name="fetchPlan">
      <input message="tns:XTourWS_fetchPlan" />
      <output message="tns:XTourWS_fetchPlanResponse" />
      <fault name="XServiceException" message="tns:XServiceException" />
      <fault name="XTourException" message="tns:XTourException" />
      <fault name="UnexpectedException" message="tns:UnexpectedException" />
      <fault name="SystemException" message="tns:SystemException" />
    </operation>
    <operation name="fetchSequencingPlan">
      <input message="tns:XTourWS_fetchSequencingPlan" />
      <output message="tns:XTourWS_fetchSequencingPlanResponse" />
      <fault name="XServiceException" message="tns:XServiceException" />
      <fault name="XTourException" message="tns:XTourException" />
      <fault name="UnexpectedException" message="tns:UnexpectedException" />
      <fault name="SystemException" message="tns:SystemException" />
    </operation>
    <operation name="findToursForUnscheduledOrder">
      <input message="tns:XTourWS_findToursForUnscheduledOrder" />
      <output message="tns:XTourWS_findToursForUnscheduledOrderResponse" />
      <fault name="XServiceException" message="tns:XServiceException" />
      <fault name="XTourException" message="tns:XTourException" />
      <fault name="TableNotFoundException" message="tns:TableNotFoundException" />
      <fault name="UnexpectedException" message="tns:UnexpectedException" />
      <fault name="SystemException" message="tns:SystemException" />
      <fault name="OptimisticRollbackException" message="tns:OptimisticRollbackException" />
      <fault name="ConstraintViolationException" message="tns:ConstraintViolationException" />
      <fault name="DatabaseException" message="tns:DatabaseException" />
    </operation>
    <operation name="findToursForVehicle">
      <input message="tns:XTourWS_findToursForVehicle" />
      <output message="tns:XTourWS_findToursForVehicleResponse" />
      <fault name="XServiceException" message="tns:XServiceException" />
      <fault name="XTourException" message="tns:XTourException" />
      <fault name="TableNotFoundException" message="tns:TableNotFoundException" />
      <fault name="UnexpectedException" message="tns:UnexpectedException" />
      <fault name="SystemException" message="tns:SystemException" />
      <fault name="OptimisticRollbackException" message="tns:OptimisticRollbackException" />
      <fault name="ConstraintViolationException" message="tns:ConstraintViolationException" />
      <fault name="DatabaseException" message="tns:DatabaseException" />
    </operation>
    <operation name="findUnscheduledOrdersForTour">
      <input message="tns:XTourWS_findUnscheduledOrdersForTour" />
      <output message="tns:XTourWS_findUnscheduledOrdersForTourResponse" />
      <fault name="XServiceException" message="tns:XServiceException" />
      <fault name="XTourException" message="tns:XTourException" />
      <fault name="TableNotFoundException" message="tns:TableNotFoundException" />
      <fault name="UnexpectedException" message="tns:UnexpectedException" />
      <fault name="SystemException" message="tns:SystemException" />
      <fault name="OptimisticRollbackException" message="tns:OptimisticRollbackException" />
      <fault name="ConstraintViolationException" message="tns:ConstraintViolationException" />
      <fault name="DatabaseException" message="tns:DatabaseException" />
    </operation>
    <operation name="findVehiclesForTour">
      <input message="tns:XTourWS_findVehiclesForTour" />
      <output message="tns:XTourWS_findVehiclesForTourResponse" />
      <fault name="XServiceException" message="tns:XServiceException" />
      <fault name="XTourException" message="tns:XTourException" />
      <fault name="TableNotFoundException" message="tns:TableNotFoundException" />
      <fault name="UnexpectedException" message="tns:UnexpectedException" />
      <fault name="SystemException" message="tns:SystemException" />
      <fault name="OptimisticRollbackException" message="tns:OptimisticRollbackException" />
      <fault name="ConstraintViolationException" message="tns:ConstraintViolationException" />
      <fault name="DatabaseException" message="tns:DatabaseException" />
    </operation>
    <operation name="planBasicTours">
      <input message="tns:XTourWS_planBasicTours" />
      <output message="tns:XTourWS_planBasicToursResponse" />
      <fault name="XServiceException" message="tns:XServiceException" />
      <fault name="XTourException" message="tns:XTourException" />
      <fault name="TableNotFoundException" message="tns:TableNotFoundException" />
      <fault name="UnexpectedException" message="tns:UnexpectedException" />
      <fault name="SystemException" message="tns:SystemException" />
      <fault name="OptimisticRollbackException" message="tns:OptimisticRollbackException" />
      <fault name="ConstraintViolationException" message="tns:ConstraintViolationException" />
      <fault name="DatabaseException" message="tns:DatabaseException" />
    </operation>
    <operation name="planOvernightTours">
      <input message="tns:XTourWS_planOvernightTours" />
      <output message="tns:XTourWS_planOvernightToursResponse" />
      <fault name="XServiceException" message="tns:XServiceException" />
      <fault name="XTourException" message="tns:XTourException" />
      <fault name="TableNotFoundException" message="tns:TableNotFoundException" />
      <fault name="UnexpectedException" message="tns:UnexpectedException" />
      <fault name="SystemException" message="tns:SystemException" />
      <fault name="OptimisticRollbackException" message="tns:OptimisticRollbackException" />
      <fault name="ConstraintViolationException" message="tns:ConstraintViolationException" />
      <fault name="DatabaseException" message="tns:DatabaseException" />
    </operation>
    <operation name="planSequence">
      <input message="tns:XTourWS_planSequence" />
      <output message="tns:XTourWS_planSequenceResponse" />
      <fault name="XServiceException" message="tns:XServiceException" />
      <fault name="XTourException" message="tns:XTourException" />
      <fault name="TableNotFoundException" message="tns:TableNotFoundException" />
      <fault name="UnexpectedException" message="tns:UnexpectedException" />
      <fault name="SystemException" message="tns:SystemException" />
      <fault name="OptimisticRollbackException" message="tns:OptimisticRollbackException" />
      <fault name="ConstraintViolationException" message="tns:ConstraintViolationException" />
      <fault name="DatabaseException" message="tns:DatabaseException" />
    </operation>
    <operation name="startPlanBasicTours">
      <input message="tns:XTourWS_startPlanBasicTours" />
      <output message="tns:XTourWS_startPlanBasicToursResponse" />
      <fault name="XServiceException" message="tns:XServiceException" />
      <fault name="XTourException" message="tns:XTourException" />
      <fault name="TableNotFoundException" message="tns:TableNotFoundException" />
      <fault name="UnexpectedException" message="tns:UnexpectedException" />
      <fault name="SystemException" message="tns:SystemException" />
      <fault name="OptimisticRollbackException" message="tns:OptimisticRollbackException" />
      <fault name="ConstraintViolationException" message="tns:ConstraintViolationException" />
      <fault name="DatabaseException" message="tns:DatabaseException" />
    </operation>
    <operation name="startPlanOvernightTours">
      <input message="tns:XTourWS_startPlanOvernightTours" />
      <output message="tns:XTourWS_startPlanOvernightToursResponse" />
      <fault name="XServiceException" message="tns:XServiceException" />
      <fault name="XTourException" message="tns:XTourException" />
      <fault name="TableNotFoundException" message="tns:TableNotFoundException" />
      <fault name="UnexpectedException" message="tns:UnexpectedException" />
      <fault name="SystemException" message="tns:SystemException" />
      <fault name="OptimisticRollbackException" message="tns:OptimisticRollbackException" />
      <fault name="ConstraintViolationException" message="tns:ConstraintViolationException" />
      <fault name="DatabaseException" message="tns:DatabaseException" />
    </operation>
    <operation name="startPlanSequence">
      <input message="tns:XTourWS_startPlanSequence" />
      <output message="tns:XTourWS_startPlanSequenceResponse" />
      <fault name="XServiceException" message="tns:XServiceException" />
      <fault name="XTourException" message="tns:XTourException" />
      <fault name="TableNotFoundException" message="tns:TableNotFoundException" />
      <fault name="UnexpectedException" message="tns:UnexpectedException" />
      <fault name="SystemException" message="tns:SystemException" />
      <fault name="OptimisticRollbackException" message="tns:OptimisticRollbackException" />
      <fault name="ConstraintViolationException" message="tns:ConstraintViolationException" />
      <fault name="DatabaseException" message="tns:DatabaseException" />
    </operation>
    <operation name="watchJob">
      <input message="tns:XTourWS_watchJob" />
      <output message="tns:XTourWS_watchJobResponse" />
      <fault name="UnexpectedException" message="tns:UnexpectedException" />
      <fault name="SystemException" message="tns:SystemException" />
    </operation>
    <operation name="deleteJob">
      <input message="tns:XTourWS_deleteJob" />
      <output message="tns:XTourWS_deleteJobResponse" />
      <fault name="UnexpectedException" message="tns:UnexpectedException" />
      <fault name="SystemException" message="tns:SystemException" />
    </operation>
    <operation name="stopJob">
      <input message="tns:XTourWS_stopJob" />
      <output message="tns:XTourWS_stopJobResponse" />
      <fault name="UnexpectedException" message="tns:UnexpectedException" />
      <fault name="SystemException" message="tns:SystemException" />
    </operation>
  </portType>
  <binding name="XTourWSBinding" type="tns:XTourWS">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" />
    <operation name="fetchPlan">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="XServiceException">
        <soap:fault use="literal" name="XServiceException" namespace="" />
      </fault>
      <fault name="XTourException">
        <soap:fault use="literal" name="XTourException" namespace="" />
      </fault>
      <fault name="UnexpectedException">
        <soap:fault use="literal" name="UnexpectedException" namespace="" />
      </fault>
      <fault name="SystemException">
        <soap:fault use="literal" name="SystemException" namespace="" />
      </fault>
    </operation>
    <operation name="fetchSequencingPlan">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="XServiceException">
        <soap:fault use="literal" name="XServiceException" namespace="" />
      </fault>
      <fault name="XTourException">
        <soap:fault use="literal" name="XTourException" namespace="" />
      </fault>
      <fault name="UnexpectedException">
        <soap:fault use="literal" name="UnexpectedException" namespace="" />
      </fault>
      <fault name="SystemException">
        <soap:fault use="literal" name="SystemException" namespace="" />
      </fault>
    </operation>
    <operation name="findToursForUnscheduledOrder">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="XServiceException">
        <soap:fault use="literal" name="XServiceException" namespace="" />
      </fault>
      <fault name="XTourException">
        <soap:fault use="literal" name="XTourException" namespace="" />
      </fault>
      <fault name="TableNotFoundException">
        <soap:fault use="literal" name="TableNotFoundException" namespace="" />
      </fault>
      <fault name="UnexpectedException">
        <soap:fault use="literal" name="UnexpectedException" namespace="" />
      </fault>
      <fault name="SystemException">
        <soap:fault use="literal" name="SystemException" namespace="" />
      </fault>
      <fault name="OptimisticRollbackException">
        <soap:fault use="literal" name="OptimisticRollbackException" namespace="" />
      </fault>
      <fault name="ConstraintViolationException">
        <soap:fault use="literal" name="ConstraintViolationException" namespace="" />
      </fault>
      <fault name="DatabaseException">
        <soap:fault use="literal" name="DatabaseException" namespace="" />
      </fault>
    </operation>
    <operation name="findToursForVehicle">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="XServiceException">
        <soap:fault use="literal" name="XServiceException" namespace="" />
      </fault>
      <fault name="XTourException">
        <soap:fault use="literal" name="XTourException" namespace="" />
      </fault>
      <fault name="TableNotFoundException">
        <soap:fault use="literal" name="TableNotFoundException" namespace="" />
      </fault>
      <fault name="UnexpectedException">
        <soap:fault use="literal" name="UnexpectedException" namespace="" />
      </fault>
      <fault name="SystemException">
        <soap:fault use="literal" name="SystemException" namespace="" />
      </fault>
      <fault name="OptimisticRollbackException">
        <soap:fault use="literal" name="OptimisticRollbackException" namespace="" />
      </fault>
      <fault name="ConstraintViolationException">
        <soap:fault use="literal" name="ConstraintViolationException" namespace="" />
      </fault>
      <fault name="DatabaseException">
        <soap:fault use="literal" name="DatabaseException" namespace="" />
      </fault>
    </operation>
    <operation name="findUnscheduledOrdersForTour">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="XServiceException">
        <soap:fault use="literal" name="XServiceException" namespace="" />
      </fault>
      <fault name="XTourException">
        <soap:fault use="literal" name="XTourException" namespace="" />
      </fault>
      <fault name="TableNotFoundException">
        <soap:fault use="literal" name="TableNotFoundException" namespace="" />
      </fault>
      <fault name="UnexpectedException">
        <soap:fault use="literal" name="UnexpectedException" namespace="" />
      </fault>
      <fault name="SystemException">
        <soap:fault use="literal" name="SystemException" namespace="" />
      </fault>
      <fault name="OptimisticRollbackException">
        <soap:fault use="literal" name="OptimisticRollbackException" namespace="" />
      </fault>
      <fault name="ConstraintViolationException">
        <soap:fault use="literal" name="ConstraintViolationException" namespace="" />
      </fault>
      <fault name="DatabaseException">
        <soap:fault use="literal" name="DatabaseException" namespace="" />
      </fault>
    </operation>
    <operation name="findVehiclesForTour">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="XServiceException">
        <soap:fault use="literal" name="XServiceException" namespace="" />
      </fault>
      <fault name="XTourException">
        <soap:fault use="literal" name="XTourException" namespace="" />
      </fault>
      <fault name="TableNotFoundException">
        <soap:fault use="literal" name="TableNotFoundException" namespace="" />
      </fault>
      <fault name="UnexpectedException">
        <soap:fault use="literal" name="UnexpectedException" namespace="" />
      </fault>
      <fault name="SystemException">
        <soap:fault use="literal" name="SystemException" namespace="" />
      </fault>
      <fault name="OptimisticRollbackException">
        <soap:fault use="literal" name="OptimisticRollbackException" namespace="" />
      </fault>
      <fault name="ConstraintViolationException">
        <soap:fault use="literal" name="ConstraintViolationException" namespace="" />
      </fault>
      <fault name="DatabaseException">
        <soap:fault use="literal" name="DatabaseException" namespace="" />
      </fault>
    </operation>
    <operation name="planBasicTours">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="XServiceException">
        <soap:fault use="literal" name="XServiceException" namespace="" />
      </fault>
      <fault name="XTourException">
        <soap:fault use="literal" name="XTourException" namespace="" />
      </fault>
      <fault name="TableNotFoundException">
        <soap:fault use="literal" name="TableNotFoundException" namespace="" />
      </fault>
      <fault name="UnexpectedException">
        <soap:fault use="literal" name="UnexpectedException" namespace="" />
      </fault>
      <fault name="SystemException">
        <soap:fault use="literal" name="SystemException" namespace="" />
      </fault>
      <fault name="OptimisticRollbackException">
        <soap:fault use="literal" name="OptimisticRollbackException" namespace="" />
      </fault>
      <fault name="ConstraintViolationException">
        <soap:fault use="literal" name="ConstraintViolationException" namespace="" />
      </fault>
      <fault name="DatabaseException">
        <soap:fault use="literal" name="DatabaseException" namespace="" />
      </fault>
    </operation>
    <operation name="planOvernightTours">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="XServiceException">
        <soap:fault use="literal" name="XServiceException" namespace="" />
      </fault>
      <fault name="XTourException">
        <soap:fault use="literal" name="XTourException" namespace="" />
      </fault>
      <fault name="TableNotFoundException">
        <soap:fault use="literal" name="TableNotFoundException" namespace="" />
      </fault>
      <fault name="UnexpectedException">
        <soap:fault use="literal" name="UnexpectedException" namespace="" />
      </fault>
      <fault name="SystemException">
        <soap:fault use="literal" name="SystemException" namespace="" />
      </fault>
      <fault name="OptimisticRollbackException">
        <soap:fault use="literal" name="OptimisticRollbackException" namespace="" />
      </fault>
      <fault name="ConstraintViolationException">
        <soap:fault use="literal" name="ConstraintViolationException" namespace="" />
      </fault>
      <fault name="DatabaseException">
        <soap:fault use="literal" name="DatabaseException" namespace="" />
      </fault>
    </operation>
    <operation name="planSequence">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="XServiceException">
        <soap:fault use="literal" name="XServiceException" namespace="" />
      </fault>
      <fault name="XTourException">
        <soap:fault use="literal" name="XTourException" namespace="" />
      </fault>
      <fault name="TableNotFoundException">
        <soap:fault use="literal" name="TableNotFoundException" namespace="" />
      </fault>
      <fault name="UnexpectedException">
        <soap:fault use="literal" name="UnexpectedException" namespace="" />
      </fault>
      <fault name="SystemException">
        <soap:fault use="literal" name="SystemException" namespace="" />
      </fault>
      <fault name="OptimisticRollbackException">
        <soap:fault use="literal" name="OptimisticRollbackException" namespace="" />
      </fault>
      <fault name="ConstraintViolationException">
        <soap:fault use="literal" name="ConstraintViolationException" namespace="" />
      </fault>
      <fault name="DatabaseException">
        <soap:fault use="literal" name="DatabaseException" namespace="" />
      </fault>
    </operation>
    <operation name="startPlanBasicTours">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="XServiceException">
        <soap:fault use="literal" name="XServiceException" namespace="" />
      </fault>
      <fault name="XTourException">
        <soap:fault use="literal" name="XTourException" namespace="" />
      </fault>
      <fault name="TableNotFoundException">
        <soap:fault use="literal" name="TableNotFoundException" namespace="" />
      </fault>
      <fault name="UnexpectedException">
        <soap:fault use="literal" name="UnexpectedException" namespace="" />
      </fault>
      <fault name="SystemException">
        <soap:fault use="literal" name="SystemException" namespace="" />
      </fault>
      <fault name="OptimisticRollbackException">
        <soap:fault use="literal" name="OptimisticRollbackException" namespace="" />
      </fault>
      <fault name="ConstraintViolationException">
        <soap:fault use="literal" name="ConstraintViolationException" namespace="" />
      </fault>
      <fault name="DatabaseException">
        <soap:fault use="literal" name="DatabaseException" namespace="" />
      </fault>
    </operation>
    <operation name="startPlanOvernightTours">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="XServiceException">
        <soap:fault use="literal" name="XServiceException" namespace="" />
      </fault>
      <fault name="XTourException">
        <soap:fault use="literal" name="XTourException" namespace="" />
      </fault>
      <fault name="TableNotFoundException">
        <soap:fault use="literal" name="TableNotFoundException" namespace="" />
      </fault>
      <fault name="UnexpectedException">
        <soap:fault use="literal" name="UnexpectedException" namespace="" />
      </fault>
      <fault name="SystemException">
        <soap:fault use="literal" name="SystemException" namespace="" />
      </fault>
      <fault name="OptimisticRollbackException">
        <soap:fault use="literal" name="OptimisticRollbackException" namespace="" />
      </fault>
      <fault name="ConstraintViolationException">
        <soap:fault use="literal" name="ConstraintViolationException" namespace="" />
      </fault>
      <fault name="DatabaseException">
        <soap:fault use="literal" name="DatabaseException" namespace="" />
      </fault>
    </operation>
    <operation name="startPlanSequence">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="XServiceException">
        <soap:fault use="literal" name="XServiceException" namespace="" />
      </fault>
      <fault name="XTourException">
        <soap:fault use="literal" name="XTourException" namespace="" />
      </fault>
      <fault name="TableNotFoundException">
        <soap:fault use="literal" name="TableNotFoundException" namespace="" />
      </fault>
      <fault name="UnexpectedException">
        <soap:fault use="literal" name="UnexpectedException" namespace="" />
      </fault>
      <fault name="SystemException">
        <soap:fault use="literal" name="SystemException" namespace="" />
      </fault>
      <fault name="OptimisticRollbackException">
        <soap:fault use="literal" name="OptimisticRollbackException" namespace="" />
      </fault>
      <fault name="ConstraintViolationException">
        <soap:fault use="literal" name="ConstraintViolationException" namespace="" />
      </fault>
      <fault name="DatabaseException">
        <soap:fault use="literal" name="DatabaseException" namespace="" />
      </fault>
    </operation>
    <operation name="watchJob">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="UnexpectedException">
        <soap:fault use="literal" name="UnexpectedException" namespace="" />
      </fault>
      <fault name="SystemException">
        <soap:fault use="literal" name="SystemException" namespace="" />
      </fault>
    </operation>
    <operation name="deleteJob">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="UnexpectedException">
        <soap:fault use="literal" name="UnexpectedException" namespace="" />
      </fault>
      <fault name="SystemException">
        <soap:fault use="literal" name="SystemException" namespace="" />
      </fault>
    </operation>
    <operation name="stopJob">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="UnexpectedException">
        <soap:fault use="literal" name="UnexpectedException" namespace="" />
      </fault>
      <fault name="SystemException">
        <soap:fault use="literal" name="SystemException" namespace="" />
      </fault>
    </operation>
  </binding>
  <service name="XTourWSService">
    <port name="XTourWSPort" binding="tns:XTourWSBinding">
      <soap:address location="https://xtour-eu-n-test.cloud.ptvgroup.com:443/xtour/ws/XTour" />
    </port>
  </service>
</definitions>